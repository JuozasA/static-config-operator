// Code generated for package sync by go-bindata DO NOT EDIT. (@generated)
// sources:
// data/UPSERT/osd-operatorhub-crd/00-operatorhub.crd.yaml
// data/cluster-monitoring-config/cluster-monitoring-config.yaml
// data/kubelet-config/01-patch.machineconfigpool.yaml
// data/kubelet-config/02-patch.machineconfigpool.yaml
// data/kubelet-config/03-kubelet-config.yaml
// data/managed-velero-operator/050-velero.CustomResourceDefinition.yaml
// data/managed-velero-operator/100-velero.Namespace.yaml
// data/managed-velero-operator/105-velero.ServiceAccount.yaml
// data/managed-velero-operator/110-velero.ClusterRole.yaml
// data/managed-velero-operator/110-velero.Role.yaml
// data/managed-velero-operator/111-velero.Role.yaml
// data/managed-velero-operator/112-velero.Role.yaml
// data/managed-velero-operator/115-velero.ClusterRoleBinding.yaml
// data/managed-velero-operator/115-velero.RoleBinding.yaml
// data/managed-velero-operator/116-velero.RoleBinding.yaml
// data/managed-velero-operator/117-velero.RoleBinding.yaml
// data/managed-velero-operator/120-velero.ServiceAccount.yaml
// data/managed-velero-operator/125-velero.RoleBinding.yaml
// data/managed-velero-operator/130-velero.CredentialRequest.yaml
// data/managed-velero-operator/135-velero.Deployment.yaml
// data/osd-aquasec-operator/00-namespace.yaml
// data/osd-aquasec-operator/01-operatorgroup.yaml
// data/osd-aquasec-operator/01-role.yaml
// data/osd-aquasec-operator/02-rolebinding.yaml
// data/osd-aquasec-operator/10-clusterrole-image-scanner.yaml
// data/osd-aquasec-operator/11-clusterrolebinding-image-scanner.yaml
// data/osd-codeready-workspaces/00-namespace.yaml
// data/osd-codeready-workspaces/01-operatorgroup.yaml
// data/osd-codeready-workspaces/05-role.yaml
// data/osd-codeready-workspaces/06-rolebinding.yaml
// data/osd-console-branding/osd-branding.console.yaml
// data/osd-curated-operators/00-cvo-overrides.patch.yaml
// data/osd-curated-operators/10-curated-certified-operators.patch.yaml
// data/osd-curated-operators/10-curated-community-operators.patch.yaml
// data/osd-curated-operators/10-curated-redhat-operators.patch.yaml
// data/osd-curated-operatorsources/00-operatorhub.cr.yaml
// data/osd-curated-operatorsources/10-curated-certified-operators.OperatorSource.yaml
// data/osd-curated-operatorsources/10-curated-community-operators.OperatorSource.yaml
// data/osd-curated-operatorsources/10-curated-redhat-operators.OperatorSource.yaml
// data/osd-customer-monitoring/00-namespace.yaml
// data/osd-customer-monitoring/01-operatorgroup.yaml
// data/osd-customer-monitoring/05-role.yaml
// data/osd-customer-monitoring/06-rolebinding.yaml
// data/osd-logging/00-namespace.yaml
// data/osd-logging/01-operatorgroup.yaml
// data/osd-logging/02-curator.configmap.yaml
// data/osd-logging/03-storage-quota.yaml
// data/osd-logging/05-role.yaml
// data/osd-logging/06-rolebinding.yaml
// data/osd-oauth-templates/osd-oauth-templates.patch.yaml
// data/osd-oauth-templates-errors/osd-oauth-templates-errors.secret.yaml
// data/osd-oauth-templates-login/osd-oauth-templates-login.secret.yaml
// data/osd-oauth-templates-providers/osd-oauth-templates-providers.secret.yaml
// data/osd-project-request-template/00-clusterrole.project-config.yaml
// data/osd-project-request-template/01-clusterrolebinding.project-config.yaml
// data/osd-project-request-template/02-role.dedicated-admins-project-request.yaml
// data/osd-project-request-template/03-rolebinding.dedicated-admins-project-request.yaml
// data/osd-project-request-template/04-patch.label-default-namespace.yaml
// data/osd-registry/registry-defaultRoute.patch.yaml
// data/osd-strimzi-operator/00-namespace.yaml
// data/osd-strimzi-operator/01-operatorgroup.yaml
// data/osd-strimzi-operator/05-role.yaml
// data/osd-strimzi-operator/06-rolebinding.yaml
// data/resource-quotas/10-patch.namespace.openshift-etcd.yaml
// data/resource-quotas/10-patch.namespace.openshift-ingress.yaml
// data/resource-quotas/10-patch.namespace.openshift-monitoring.yaml
// data/resource-quotas/11-cluster-lb-quota.yaml
// data/resource-quotas/11-cluster-storage-quotas.yaml
// data/sre-authorization/00-osd-sre-cluster-admins.ClusterRoleBinding.yaml
// data/sre-authorization/00-osd-sre-cluster-admins.Group.yaml
// data/sre-authorization/01-osd-sre-admin.ClusterRole.yaml
// data/sre-authorization/02-osd-sre-admin.ClusterRoleBinding.yaml
// data/sre-authorization/10-osd-ldap-ca-configmap.ConfigMap.yaml
// data/sre-prometheus/100-check-full-cust-pv.PrometheusRule.yaml
// data/sre-prometheus/100-cluster-operator.PrometheusRule.yaml
// data/sre-prometheus/100-configure-alertmanager-operator.PrometheusRule.yaml
// data/sre-prometheus/100-dedicated-admin-operator.PrometheusRule.yaml
// data/sre-prometheus/100-dns-latency.PrometheusRule.yaml
// data/sre-prometheus/100-excessive-memory.PrometheusRule.yaml
// data/sre-prometheus/100-kubeapilatencyhigh-custom.PrometheusRule.yaml
// data/sre-prometheus/100-machine-api.PrometheusRule.yaml
// data/sre-prometheus/100-node-unschedulable.PrometheusRule.yaml
// data/sre-prometheus/100-router-health.PrometheusRule.yaml
// data/sre-prometheus/100-sre-pruning.PrometheusRule.yaml
// data/sre-prometheus/100-stuck-builds.PrometheusRule.yaml
// data/sre-prometheus/100-telemeter-client.PrometheusRule.yaml
// data/sre-prometheus/aws/100-ebs-iops-burstbalance.PrometheusRule.yaml
// data/sre-prometheus/aws/100-stuck-volumes.PrometheusRule.yaml
// data/sre-pruning/100-pruning.Namespace.yaml
// data/sre-pruning/105-pruning-builds.cluserRoleBinding.yaml
// data/sre-pruning/105-pruning-builds.clusterRole.yaml
// data/sre-pruning/105-pruning-images.clusterRoleBinding.yaml
// data/sre-pruning/105-pruning.serviceAccount.yaml
// data/sre-pruning/110-pruning-builds.CronJob.yaml
// data/sre-pruning/110-pruning-deployments.CronJob.yaml
// data/sre-pruning/110-pruning-images.CronJob.yaml
// data/velero-configuration/100-velero.Velero.yaml
// data/velero-configuration/110-velero.Schedules-daily.yaml
// data/velero-configuration/110-velero.Schedules-hourly.yaml
// data/velero-configuration/110-velero.Schedules-weekly.yaml
package sync

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _upsertOsdOperatorhubCrd00OperatorhubCrdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x7d\x5b\x93\xdb\x38\x76\xf0\xbb\x7f\xc5\xa9\xde\x07\xcf\x54\x49\xf2\x5c\x76\xbf\xfa\xb6\xdf\x3a\xb6\x67\xb7\x33\xbe\x95\xbb\x67\x52\xa9\x38\x95\x82\xc8\x23\x09\xdb\x14\xc0\x01\xc0\x6e\x6b\x52\xf9\xef\xa9\x73\x0e\xc0\x8b\x08\x52\x6a\x4f\xcf\x54\x12\x3e\xd9\x22\x09\x1e\x9c\xfb\x15\xad\x6a\xfd\x33\x3a\xaf\xad\xb9\x04\x55\x6b\xfc\x1c\xd0\xd0\xff\xfc\xea\xee\xff\xfb\x95\xb6\x2f\xee\xbf\x5d\x63\x50\xdf\x3e\xbb\xd3\xa6\xbc\x84\x97\x8d\x0f\x76\xff\x11\xbd\x6d\x5c\x81\xaf\x70\xa3\x8d\x0e\xda\x9a\x67\x7b\x0c\xaa\x54\x41\x5d\x3e\x03\x30\x6a\x8f\x97\x60\x6b\x74\x2a\x58\xb7\x6b\xd6\x7e\x55\x58\xb3\xd1\xdb\x95\xad\xd1\xf8\x9d\xde\x84\x95\xb6\xcf\x00\x2a\xb5\xc6\xca\xd3\x2b\x40\x1f\xef\xdd\x2e\xec\xfe\xc5\x5e\x19\xb5\xc5\xf2\x12\x2e\x82\x6b\xf0\xe2\x99\xaf\xb1\xa0\x67\x0b\x6b\xee\x23\xc8\xfc\xa6\x0f\x4e\x05\xdc\x1e\x2e\xe1\x9d\x35\xf8\x0c\x60\xeb\x6c\x53\x5f\x42\xfe\x9b\x04\x5c\xfc\xa4\x6c\xe9\x7d\x84\xf3\xef\xcd\x9a\x7f\xad\xb4\x0f\x3f\x1e\xdf\x79\xa3\x7d\xe0\xbb\x75\xd5\x38\x55\x0d\x77\x27\x50\x68\xb3\x6d\x2a\xe5\x06\xb7\x9e\x01\xf8\xc2\xd6\x78\x09\x2f\xab\xc6\x07\x74\xf4\x43\xb3\x76\x11\x7f\x3e\x6d\x40\x85\xc6\x5f\xc2\x7f\xfe\xd7\x33\x80\x7b\x55\xe9\x52\x85\x76\x77\x04\xfe\xd5\x87\xeb\x9f\xbf\xbf\x29\x76\xb8\x57\xf2\x23\x40\x89\xbe\x70\xba\xe6\xe7\xfa\x80\x82\xf6\x10\x76\x08\xf2\x34\x6c\xac\xe3\xff\xf6\xc1\x85\xab\x0f\xd7\x2b\xb8\x0e\x50\x28\x03\x6b\x84\xc6\x63\x19\x57\x05\x08\x16\x8a\x9d\x32\x5b\xe4\xd7\x08\x32\x04\xbb\xe1\xff\x94\xb8\x51\x4d\x15\x60\xd7\xac\x21\xc2\xcf\xeb\xf7\xbf\x6e\x0d\x3f\x5a\xb4\xbb\x95\x6b\xe3\xec\x1e\xd0\xa8\x75\x85\x25\x7d\xa2\xd4\x5e\xfe\xad\x4c\x09\xf7\xba\x40\x20\x8a\xaa\x55\x7c\xa1\x76\x04\x6f\xd0\x09\x41\x91\x3f\x7e\xee\x53\x3d\x83\x86\xe7\x84\x27\x79\x86\x80\xd5\x06\x05\x17\x91\x5b\xb0\x04\x2f\x58\xe1\x0d\x69\x0f\x0e\x6b\x87\x1e\x4d\x60\x7c\xf7\x96\x05\x7a\x44\x19\xb0\xeb\x7f\x60\x11\x56\x70\x83\x8e\x16\x01\xbf\xb3\x4d\x55\x46\x0e\x0c\xe0\xb0\xb0\x5b\xa3\x7f\x6d\x57\xf6\xb4\x39\xfa\x64\xa5\x02\x46\x8e\x49\x97\x36\x01\x9d\x51\x15\x51\xb8\xc1\x05\x6f\x7d\xaf\x0e\xe0\x90\xbe\x01\x8d\xe9\xad\xc6\x8f\xf8\x15\xbc\xb5\x0e\x41\x9b\x8d\xbd\x84\x5d\x08\xb5\xbf\x7c\xf1\x62\xab\x43\x12\xcd\xc2\xee\xf7\x8d\xd1\xe1\xf0\xa2\xb0\x26\x38\xbd\x6e\x82\x75\xfe\x45\x89\xf7\x58\xbd\x50\xb5\x5e\x32\x9c\x26\xb0\x38\xef\xcb\x3f\xb5\x6c\xf7\xbc\x07\x58\x38\x10\x7b\xfa\xe0\xb4\xd9\xb6\x3f\xb3\x64\x4c\xa2\x99\xa4\x83\xf8\x4c\xc5\xd7\x04\xdc\x0e\x9b\xf4\x13\x21\xe1\xe3\xeb\x9b\x5b\x48\x1f\x65\x8c\x0f\x51\xcc\xc8\xed\x5e\xf3\x1d\x9e\x09\x2f\xda\x6c\xd0\x09\x9d\x98\x7d\x68\x45\x34\x65\x6d\xb5\x09\x91\xc9\x34\x9a\x21\x8e\x7d\xb3\xde\xeb\x40\x84\xfd\xa5\x41\x1f\x88\x1c\x2b\x78\xa9\x8c\xb1\x81\x39\xbd\x2e\x55\xc0\x72\x05\xd7\x06\x5e\xaa\x3d\x56\x2f\x95\xc7\xa7\xc6\x32\x21\xd4\x2f\x09\x83\xa7\xf1\xdc\xd7\x9a\x59\x5c\xbf\x67\x1c\xbd\xc5\xa0\x08\xe1\xe9\x71\x08\x3b\x15\x40\x55\x15\xd4\xc4\xda\x3e\x60\xd9\xe2\xd9\xc3\xbe\xf1\x01\x76\xea\x1e\x17\x03\xdc\x3c\xec\x74\xb1\x03\x6d\x8a\xaa\x29\xd1\xf3\xdb\x42\x01\x4f\x1a\xc0\xc5\xf7\x0a\x87\x2a\xe0\xaa\xf7\x66\x4e\x18\x59\x20\x09\xab\x2c\x38\x47\x37\x00\x54\x59\xb2\x55\x50\xd5\x87\x89\x97\x27\x31\x92\xe3\xb7\xab\xee\x4b\xcc\x76\x06\x1a\xe3\x83\x6b\x8a\xd0\x38\x2c\xe1\x0e\x0f\x91\x03\xf7\xaa\x06\x1f\x2c\xfd\xf8\xa0\xc3\x6e\xf4\x45\xd5\xe7\x46\x15\x98\xcd\xd6\x08\x1e\x03\xac\x0f\x40\xb6\x8f\x05\x34\x58\x5b\xb1\x24\xf3\x5a\x2c\xa8\x0e\x83\xd3\x78\x8f\xe3\x25\xdd\x5a\x07\xa7\xdc\xa1\x25\xce\x0a\x6e\x77\x78\x00\xe5\x10\x88\xed\x7e\x69\xd0\x1d\x48\xd9\xf1\x3a\x51\x81\xac\x11\x98\xe9\xdd\x7d\x4f\xf5\x76\x84\x42\x03\x7b\x5b\xea\xcd\x81\x24\x29\x12\x69\xc4\xa6\x97\x2f\x5e\xdc\x35\x6b\x74\x06\x03\x32\xa3\x96\xb6\xf0\x2f\x88\x94\xcb\x6d\xa3\x4b\x7c\xd1\x23\xd0\xf3\x67\x39\xd4\xcb\xca\x83\x5b\x51\x71\xbf\x23\x0b\x3e\x47\x93\xdb\x1d\xb2\x25\x4d\xb6\x21\xbe\x17\x99\x8c\x2d\x8e\x48\xf7\x1a\x2b\x6b\xb6\x22\x88\xb7\xc7\x1a\x80\x2e\xcd\xec\x97\xac\x02\xe9\x8e\x46\xfb\x5d\x8f\x9d\x89\x92\xe0\xe9\x5b\xfc\x41\xc2\x22\xdb\xf0\x5a\x15\x84\x0e\x28\xf5\x66\x83\xee\x58\x13\xf4\x36\xe3\xe5\xcb\xb0\xd1\x58\xb1\xde\x22\xb2\x10\xcd\x95\x39\x3c\xec\xd0\x21\x38\xbd\xdd\x05\x30\xf6\x81\x57\x57\xb5\x66\xca\x38\xc8\x80\xbb\xb5\xac\xdd\x2c\xe8\xad\x61\x7a\x04\xd0\x1b\x5e\x4d\x9b\x28\x3c\x60\x5d\xd4\x34\x49\x0f\xad\xb2\xe8\xcf\x70\x3e\x2f\xa0\xad\xb9\xd5\x7b\xf4\x41\xed\xeb\x59\x22\x5c\xbc\x3c\x7e\x5c\xb4\x72\x68\xff\x3b\x52\xc9\xb2\xb1\xb1\x28\xea\x3d\x0a\xdf\xb1\xbe\x8d\xb4\x7b\x50\x3e\x6e\xa9\x64\x7f\x21\xa2\x6e\xdb\x28\xa7\x4c\x40\x21\x9a\xc8\xcf\x98\xac\x06\x76\xaa\x26\xd7\x6b\xb9\xc6\x0d\x61\xca\xba\x12\x1d\xa8\xc2\x59\xef\xc1\x63\xad\x1c\xe3\x8a\x9d\x07\xd6\x9d\xf0\x92\x15\xba\x68\x7f\x63\xc7\x6b\x12\x96\x19\x3e\x96\xf6\x04\x52\xbb\x47\x2c\xe9\xab\x1f\x7f\x78\xf9\xfd\xf7\xdf\xff\x95\x3c\x93\x3d\x93\x53\x7b\xfa\xf9\xa7\xdb\x97\x2b\xf8\x64\x46\x6b\x7e\xb0\x75\x43\xc6\xba\x24\x0d\xc0\x18\x3a\xf8\x80\xfb\x15\x7c\x44\x55\x2e\xad\xa9\x0e\x2b\x78\xd7\x54\x15\x7b\x3a\xe4\x1a\x3e\xb9\x55\x4e\x7a\xe3\xe2\x08\x36\xda\x80\x0a\x97\x40\x8c\xb4\x24\x02\x9d\xcb\x44\x25\x56\x48\xab\xff\xcd\xa9\x02\x3f\xa0\xd3\xb6\xbc\xc1\xc2\x9a\x72\xa4\x83\x07\xdc\xf4\xae\xd9\xaf\xd1\x91\x40\x7b\x79\x9a\x4c\x84\x7d\xc0\x32\x3a\x91\x1d\x5f\x04\x0b\x5b\x5a\x7b\xd3\x54\xd5\x61\xcc\x4b\xe8\xf6\xda\x10\x6d\x23\xe1\x75\x80\x07\x5d\x55\xc4\x29\x0e\xf7\xf6\x9e\x56\x4c\x06\x3d\x61\xfb\xbd\xa9\x0e\x4c\x5f\x62\xc2\xd1\x92\x69\x47\x43\x3e\xaf\xbc\xa5\x57\x56\xf0\x56\x1d\x80\x28\xc5\xbc\xb8\xb3\x2e\xa0\x21\x8e\xed\x28\x38\x81\x59\x6d\xc2\xff\xfb\x73\x16\xab\xe4\xab\x6d\x8f\xe4\x64\x04\xc4\xbc\x6c\xbe\xca\xc1\xfc\xf1\x87\x97\xc0\xdc\xc9\xda\x81\xb8\x93\x25\x4f\x85\x56\x71\x66\x54\x4e\x6b\xb3\x12\x16\x19\x12\xda\xe1\x50\xad\x45\x33\xd6\x89\xb9\x48\xb4\x6a\x89\x35\x89\x57\x11\x23\x56\x55\x9d\x20\x90\x25\x59\x24\x09\x22\xb9\x2f\xb5\xc3\x22\x08\x9d\x02\x5b\xb4\xf5\x98\xfa\x2a\xba\x65\x6c\x05\x3b\xd0\xb5\x07\xfc\x5c\x63\x11\x5a\xa5\x11\x37\x01\x5f\x19\x0b\x64\x22\xd0\xc1\xbd\xf6\x7a\x5d\x8d\x6d\x2c\x73\x4b\xbb\x14\x0b\xa1\x00\x46\x50\x39\x54\xc5\x2e\x42\xc3\x86\xe1\x6b\x50\x9b\x80\x12\xf6\x30\x76\xf5\x98\xa1\x42\x8b\xb8\x05\x58\x53\x48\xb0\xb3\xd1\x46\x55\xfa\x57\x72\x85\xe8\x1b\x0c\xf3\xbe\x0e\x87\x15\x5c\x79\x06\x11\x94\x3f\x7a\x70\xb4\x30\xbf\x48\x72\xaf\x34\x39\x2b\x01\xf7\x7e\x31\x40\xf3\xba\xb2\xc5\x1d\xd1\xee\x7d\xfa\xec\x88\xaf\x72\x26\xd2\x63\x58\xf4\x74\x5f\x52\x91\xec\xd4\x1a\x22\xbc\x75\xc9\x93\xd9\x34\x2e\xec\xc8\x78\x99\x18\x8b\x6c\x1a\xf2\x93\x16\x63\x52\x55\x61\x67\x9b\xed\x8e\x04\x34\x79\x42\x49\x7a\x20\xc6\x8d\x2d\xd6\xe3\x03\x89\x6a\xb5\xd3\x36\x63\x46\xac\xc0\x48\x68\x5f\xc1\x0f\xd6\x01\x7e\x56\xfb\xba\xa2\x68\x87\xf9\x29\x06\x3c\xcc\x69\xd1\x89\x85\xda\x32\x87\xc5\x95\x73\x86\xe4\xfb\x6f\x92\x4a\x12\xae\xfa\xb1\x59\xd3\xc3\x22\x0f\x44\x7f\xe6\x7b\x8f\xa6\x24\x33\xd7\xf1\x7b\xab\x8a\x8e\x83\x3b\xe0\x78\x7d\x2b\xbe\x9e\xf8\x2f\x42\x32\xa2\xbd\x96\x10\xb6\xb6\xe5\x0a\xae\x22\x27\xa9\xd0\x03\x62\xc1\xf7\x23\x10\x63\xef\x8d\x80\x22\x58\x40\xc1\x4e\xb9\xb2\x0f\x44\xfa\xe8\x57\x37\xd7\x7f\xfb\xf1\xfa\xcd\x9b\xaf\x47\x9f\x27\xb6\x1e\x13\x8a\xa1\x28\x2a\x54\xa6\xa9\x17\x51\x89\x26\x20\x3b\x5d\x2a\x61\x7d\x84\x9e\x4d\x62\xc1\xfe\x99\xc1\xf0\x60\xdd\xdd\x68\xd9\x5a\xb9\xc0\x6e\xba\x5f\x0c\xd4\x3b\xd1\xc8\x07\xda\x06\x7e\x26\x76\x4e\xe2\x14\x09\xcb\x3c\xba\x80\xc6\x04\x3d\xd6\x28\xca\x80\x2a\xf7\xda\x68\x4e\xca\x58\x47\x7c\xa4\x9a\x60\xf7\x4a\xb8\xc6\x16\xe8\x3d\x27\x1e\x4a\x14\xc4\xe0\x90\xcf\x32\xfa\x8f\xcd\x4c\x67\x56\xc8\x17\xd9\x24\x1f\x6e\xd1\x11\xbb\x95\xb2\xe8\x92\xc6\xdd\xec\xd4\x78\x45\x91\x1c\x34\x9d\xd2\x23\xdf\x60\xca\x17\x38\x56\xa3\xed\x97\x72\x82\xda\x5b\xb1\xe7\x41\xfc\x0f\xf7\x18\x3a\x85\x36\x6b\xd3\xde\x52\x80\xb8\x46\xd1\x8a\xc9\xba\xf7\x50\xdd\x49\x71\xc7\x94\x0e\xb7\xc4\x0b\x23\x1b\x0c\xf0\x5a\x15\x3b\x40\x13\xdc\x21\x06\x75\xba\xa4\x3d\x6e\x34\xba\x36\x6d\xe5\xd0\xd7\xd6\xb0\x55\x80\xc2\xee\x6b\x6b\xd0\x44\xc5\x41\x72\x96\x31\x95\xad\x68\xc8\xca\x2d\x1c\xa4\x98\x99\x71\xb2\x2a\x77\xc8\x33\x39\xba\x1a\x6b\x96\x46\x57\x0b\x5e\x57\x63\x54\x13\x3a\x9a\x0a\x62\xe8\xe4\x81\x44\x1f\xe7\x78\xc3\x6c\x0b\x1e\x15\x04\xcb\x2d\xe5\x9c\x1a\x9a\xd9\x2d\x1a\xf2\x99\xf1\x64\x90\x76\xf1\xb7\xde\x93\x11\xc9\xb6\x96\xc0\x9c\x34\xc4\x46\x7f\x5e\x48\xf0\x35\x70\x1b\xc6\x96\x82\x1c\xbe\xb8\x14\x29\x72\xa3\x7f\x69\x62\x34\xf6\xfe\xdd\x9b\x7f\x85\xeb\x1f\xf8\x6d\xfe\x8a\x78\x23\x3b\xe5\x3b\x21\xab\x9d\xbd\xd7\xe5\x18\x23\x20\xe4\xe8\xbb\x30\x04\x8c\xa8\x57\x5e\xdd\x61\x68\x9c\x11\x97\xa1\xcb\xf8\x74\x7e\xd0\x64\xe4\x17\x76\xca\x74\xcb\xd4\xca\xfb\xd6\x5d\x12\xfb\xc9\x4b\xb0\x07\xb9\x66\xce\x5a\x6b\x13\x93\x06\xed\x06\xc7\x16\xa3\xd9\x6c\xf4\x67\x31\x41\x69\x4f\x71\xb9\x5d\xf4\x0c\x38\x4c\xed\x32\xb8\xe0\x9a\x0a\x7d\x72\x1b\x08\x3f\x63\xe5\x26\x4e\x48\x4a\x06\xae\x11\x82\x6b\x4c\xd1\xd7\x42\x15\x9a\x6d\xd8\x25\x16\x15\x28\x58\xcf\x68\xc7\xa8\x19\xad\xb9\x57\x77\x22\x03\x02\x5c\xa4\x57\x4c\xcd\x0a\x8d\x59\xdf\x8d\xd0\xef\x6b\x2c\x48\x00\x33\x26\x88\x5c\xd5\x1d\xb6\x6c\x20\x31\xb8\x18\x88\x68\x10\x93\xcf\x49\x98\x7d\xf7\xfe\x36\x12\x0f\x14\xfc\xf9\x9b\xbf\xc2\x32\x63\xd7\x7d\x40\x55\x2e\xda\xf0\x00\x35\xbb\x2d\xf1\xb5\xef\xbe\xf9\x16\x5e\x4a\xec\x49\x36\xe4\x2f\xdf\x7c\x23\xd4\xf9\x88\xca\x5b\x13\x13\x85\x24\xbf\xb6\xc9\x05\x9f\xa5\x2e\x54\x10\x6f\xa0\xcf\xae\x05\x67\x5f\xa2\xe3\xb4\xb1\x8d\x29\x93\xb9\x17\x3f\xbc\xaa\x6c\x08\x58\x66\x7c\xa5\xb8\xff\xc8\x81\x31\x8d\xe3\x90\x74\xcc\x57\x49\xa6\xaa\xc3\xd8\xf5\x64\x40\x38\x32\xcd\x30\x29\xc2\x47\x5a\x61\x29\x6e\xc6\x0e\x55\x89\xee\x6b\x26\xcd\x55\x5d\x57\x9a\xb6\x4e\x4a\x45\x6f\x20\x49\x30\x9b\xbd\x44\xa5\xb1\x40\x3d\xad\x9d\xd1\x25\xee\x6b\x1b\xd0\x14\x87\x63\x53\x33\xa9\xb6\x22\x83\x1c\xa5\xe9\xe1\x58\x35\x5d\x81\x27\x43\x49\x1e\x8a\x91\xb8\x73\x90\xaa\x50\x69\x93\x45\x6f\x41\xb0\x9b\x2c\x0e\x4b\xf4\x2c\x09\x5c\xac\x58\x9d\x13\xd1\x3f\x49\x3c\xc8\x95\xaf\x73\xcc\xe6\xc5\x95\xe9\x3f\x2c\x39\x1a\xa6\x80\xad\xaa\x36\x67\x86\x66\x63\x39\xdf\xe5\xed\x3e\xc1\x9c\x61\xec\x7b\xe5\xb4\x32\x81\x42\xc6\x68\x75\x53\xce\x28\x7a\xdd\xc3\x98\x50\x89\x7d\xb2\x9b\x01\xb8\x39\x7d\x29\x29\x63\x66\xb0\x03\x06\x50\x1c\xaa\xd9\x41\x42\x48\x1c\x2f\x5d\x91\x40\xb2\x0f\x30\xf0\x1b\x47\x8b\x92\x52\x64\x03\x40\x96\x9b\xdc\x02\x62\xe5\x16\x0a\x0a\x81\x48\xe0\x1f\xb4\xc7\xc5\x91\x17\x51\x90\xcd\x2f\xd1\x65\x14\x51\x63\x7a\x4b\xa4\xe8\x74\xa7\xcb\x12\x0d\x7c\xa5\x0d\x6f\xf7\xc5\x83\x0a\xc5\x8e\x6f\x6e\x91\x8c\x73\x55\xf9\xaf\xc5\x15\x10\xf9\x9d\x41\x80\x79\x1e\x28\x52\xad\x74\xa1\x29\xd4\x55\xfe\x4e\xcc\x8f\x5d\xb3\x7e\x3b\xfa\x7e\x9b\x9b\xcd\x64\x96\xfe\x85\xbd\x46\xd3\xdf\x96\xe8\xb3\xc5\xc0\xb7\x24\xd5\x57\x47\x96\xed\x79\x14\xd9\xfc\x35\x6b\xa0\xc6\x39\x56\x41\x38\x22\x6b\x4c\xa3\xd4\x4e\xdf\xeb\x0a\xb7\x58\xa6\xc4\xbe\x92\xdc\x4a\x26\x62\x93\x34\x73\xf7\xdd\x18\x97\xea\x2e\xfa\x5d\xa4\xf0\x30\x6a\x4d\x7e\x83\x54\x53\x8c\x33\x47\x4b\xae\x0f\xa0\xcc\x81\x3f\xcd\xaa\xec\xd5\xeb\x0f\x1f\x5f\xbf\xbc\xba\x7d\xfd\x0a\x96\x03\x70\x39\x45\x4e\x01\x43\x55\xef\x54\x64\x59\xa2\x59\xd6\xb3\xeb\x25\x8f\xb4\x81\xfb\x6f\x57\xdf\xfe\x65\x75\xac\x94\xa6\x2a\x15\x7c\x4f\xa2\xc3\xf1\x8d\x23\x61\xfd\x10\xa3\xc8\x49\xd9\x89\x95\x03\x72\x85\xf1\x33\x16\x4d\x18\xdb\x74\x90\xb0\x55\x12\x9e\xad\x9b\xdc\x05\x58\xe4\x85\x48\xaa\x63\x25\x5c\x22\x15\x43\x1f\x12\x94\x13\x2b\x0e\x54\x48\xc4\x46\x4a\x84\xc0\x46\xe9\x8a\x00\x77\xe8\x9b\x2a\xf4\x72\x06\x38\x2f\xfa\x20\x15\xf4\xa6\xe8\xfc\x2a\xce\xb3\x5a\x96\xf4\x64\xf7\x72\xb2\x49\x7e\x4d\x4f\x18\xb2\x2b\x4b\x7d\x57\x1c\xf8\x60\xb9\xe8\x14\x45\x70\x6c\xbc\x26\x7d\xe4\x11\x91\xae\x87\xa8\x20\x83\x47\x1a\x9c\x94\xa0\x5a\xdb\x26\x70\x34\xd1\x7b\x86\x48\x96\x5d\x15\x5a\x4f\x95\x74\x5e\xd2\x53\x19\xc3\x0a\x27\xd8\x4b\x2e\x93\xf1\xc8\x27\xb6\xd0\x2f\x9e\xa4\xb0\x98\x39\x8b\x49\xdb\x45\x3d\x14\x09\xb5\x5b\x99\x62\x0d\xb9\xfa\x9a\x7a\xf2\xb1\x99\x78\x43\xae\xe4\x58\xe6\xf7\xb1\x64\xc0\xb3\xb7\x26\x6b\x4a\xfd\xdb\xe3\x68\x46\xbe\x49\x3c\x7b\x52\x36\xaf\x37\x43\xee\x16\x8f\x90\x30\xf8\x83\xd2\x55\xe3\x30\x79\xd3\x33\xa1\x1c\xa4\x14\xcd\x1a\x7b\xc5\xd3\x58\xeb\x53\x5b\x4c\x1c\x6f\x52\x28\x4b\x11\x9f\x6f\x9c\x14\x50\xc8\xea\x66\x95\x1e\x70\xb9\x49\xca\x17\x1c\x0c\x46\x73\xd1\x8f\x36\x73\x44\x39\xc5\x53\xf9\xae\x87\x49\x0c\x3d\xb6\x03\x62\x92\x4d\x86\x9d\x11\x8f\xed\x86\x98\x5c\x36\xdb\x25\xf1\x98\xce\x88\xc9\x95\xff\xc0\x8e\x89\xfe\x75\x52\x9c\x0a\x5b\x4e\xaa\x84\x01\xe9\x6e\x9a\xed\x56\xf2\xef\x7f\xbf\xbd\xfd\x90\xc2\x20\x7a\xbd\xab\xbf\x48\xa3\xd0\x02\xbe\x01\x3d\x76\x85\xd3\x15\x33\x63\x53\x2a\xa0\xe7\xec\x7e\xff\xdd\xec\xae\x72\x4e\x6f\x07\x7a\x50\xba\x9a\x54\x84\x83\x9d\xbd\xfe\x1c\xd0\x50\xac\xcc\xad\x0b\xca\x7b\x5b\x68\xf6\xcf\x5b\xf1\x75\x1c\xd4\xad\x24\x27\x34\xc3\x93\x1c\xfa\x11\x67\x08\x6f\x83\x0e\x1e\xec\x83\xe1\xca\xbd\x7c\x41\xc0\x3a\xf2\x82\x27\x57\x6c\x93\x21\xc9\xcc\x31\x84\x6d\xd6\x21\x5b\xef\x2c\x2c\x5b\x9b\x69\x05\x6b\xd9\xfd\x89\x72\x86\x9f\x0b\xac\x63\xc6\x4a\x80\x6e\xc3\x92\xb8\x1d\xc2\xf5\x14\xad\x4e\x5b\x1c\x80\x42\x35\x7e\xee\x7e\xa6\x70\xff\x92\x5f\x11\x5d\xdc\x35\x84\xec\x49\x72\x22\x02\x7b\x54\x9a\x59\x18\x3a\x0a\xde\x30\x67\xc6\xe0\x7c\x23\xda\x78\x05\xef\xac\x74\xa9\xf4\xef\xb2\x3b\x3a\xbb\x68\xcc\xad\x44\x58\xb0\x8c\x5b\x9c\xb6\x69\xb3\x8e\x43\x16\x0b\x02\x10\xe3\x21\x7d\x2e\x22\x60\xe4\x4b\xcc\x2e\x2a\x09\xef\x5a\xaf\x64\xc1\xb4\xf3\x45\xc4\x2a\x19\x8d\x42\x11\xae\xa5\xa7\xa3\xa9\x82\xae\x33\x05\xae\xe1\x85\xce\xd9\xe8\x1d\xa3\x29\x6c\x43\xda\x71\xca\x27\xe9\xe1\xec\x24\xa7\xc8\xc5\x42\x71\xea\xa1\xe3\x08\xf6\x76\x97\x32\x7b\xd1\x65\x19\xf6\xd1\x90\x13\xc5\x44\x9a\xe7\x16\xb9\x58\x93\xf1\x1e\x17\xe4\x41\x92\x3f\xc1\x32\x41\xc2\xfc\xcf\x37\xef\xdf\x81\x47\xc7\xde\x8e\x9a\x32\x9a\xc7\xd7\xdb\x8e\x8d\xa1\x24\x96\x33\x25\xd4\xd6\x87\x8d\xfe\x0c\xa9\x05\x86\x95\xa8\x61\x05\x7b\xc6\x8a\x2a\x88\x71\x20\x8b\x72\x45\x62\x22\xe4\xf8\x15\x9d\x5d\x6a\x53\xe2\x67\x0a\x5f\xe1\x07\xc2\xc8\x69\x7e\x8e\x4b\xd6\x35\x2a\x27\x4c\xc6\xe9\x49\xae\x3b\x6a\x0e\x11\x45\x12\xed\x26\x72\x3a\x94\x99\xec\x63\x06\x91\x56\x68\xe2\x29\x70\x25\x56\x4b\xfc\x15\x39\x68\x05\xef\xa3\x7e\xe3\x38\xec\xb5\x94\xe2\x4e\x32\x08\x5d\x9f\x00\x3e\x5d\x10\x65\x3e\x5d\xc0\x32\xd6\x3c\x89\xfa\xed\x8f\xa9\xcf\x53\x82\xd1\x33\x56\x6c\x19\x86\x56\x66\x71\xfd\xb7\x6f\xfe\x7d\x35\xf3\x89\x33\xd6\x8c\x40\x6c\xb4\xf3\x21\xe2\x30\xd6\x13\x4c\xfa\xc8\xa7\x8b\xd3\x0b\x9d\xb4\xe1\xdd\xb5\x47\xef\xd5\x76\xc6\xc7\x4f\xd7\x51\xb2\x6b\xd7\xec\x95\x59\x3a\x54\x25\x57\xaa\x7b\x77\xdb\x06\x2a\xa2\xfc\x39\x7b\x96\xc7\x99\xc2\x2b\xe8\xdb\xb9\x98\x3e\xee\x9a\x61\x94\x5f\xce\xd8\xbe\xde\xfe\x2d\x37\xc6\xa9\x12\xdd\x69\x69\x7b\x04\xb2\xc4\xc0\x3d\x1a\x57\x7b\x55\xec\xb4\xc1\x39\x6c\x9d\xb1\x29\xc6\xe7\x11\xb6\x52\xbe\x5b\xd2\xe2\x29\xc1\x41\x4f\xb8\x73\x96\x64\x77\x60\x68\x20\xee\x95\xae\x08\xc6\x27\xc4\xdb\x89\x30\x6a\xf8\x58\x3e\x9c\x4a\x97\xf4\xc1\x3f\xc6\x33\xe0\x37\x3a\xed\x37\xd2\xf6\x8f\x75\x0b\xc4\x61\x1d\xd8\xff\x39\x54\x9d\x85\xa4\xe3\xde\xe4\xd9\x4d\x3d\xa7\x5d\xd1\x1b\xbf\xf3\xa6\xe0\xbd\x91\xc4\x6d\xd7\xcf\x26\x8e\x2a\x97\xa8\x66\xd7\xed\x95\x4a\x53\x07\x4e\x0b\xda\x8f\xda\x94\x7f\x50\x7f\xf2\x17\xd1\x62\x3e\xe1\x31\xd5\x33\xfa\xbb\x92\x02\xbe\x8a\x7d\x8c\xe8\x30\x36\xa9\x6b\xb3\xad\x70\x3a\x71\xd1\xae\xca\x79\xf8\x38\x14\x21\x90\xaf\xb1\xfc\xfa\x37\x33\x2c\x57\x89\xb8\xc4\x33\xd1\x86\x37\x89\xb1\xeb\x4d\x57\xec\x59\xf4\xab\x4a\x6d\x8b\x5e\x57\x84\x9f\xdd\x5a\xcb\x95\xbd\x06\x64\x69\x69\x2e\x57\x70\x43\x7c\x1b\x9d\x4e\x69\xbc\x97\xa2\xd5\xbc\x9a\xea\x8a\x61\x9c\x0b\x0d\xea\x2e\x26\x73\x39\x96\x0f\x08\xaa\xe0\x0f\x2e\x63\xf8\x6a\x7d\xfa\xc8\x89\x75\x07\x06\x2d\xc1\x02\x3b\xfb\x20\x3d\x58\xc1\xc2\x83\xd2\xa1\xdd\xb9\xba\x3b\xa9\x51\x77\x38\x02\x6b\x8e\xa8\xe7\x44\xc8\x70\x56\x94\x4c\x57\xa3\x1f\xa1\xad\x7e\xba\x7e\x75\x2c\x13\xab\x29\x86\x9e\xdd\x73\xd7\x33\x38\xc1\xd4\x8f\xee\x26\xef\xba\x33\xfc\x9f\x1a\xfd\x9b\x75\xc7\x49\x33\x37\xa7\xe6\x9f\x60\x1c\x65\x3a\x7e\xef\x25\xea\xbf\x64\x34\x65\x66\xe1\xae\x7c\xfc\x25\x63\x2a\x93\x0b\xff\xe1\xe6\xe1\x24\x79\x4f\xb8\xc9\x8f\x76\x8e\xa3\x9a\x3f\x95\xb4\x6c\xb5\xdc\x14\xae\xce\x00\x7c\x3c\x8f\x33\x09\xf9\xf3\x9b\xa0\x4c\xa9\x5c\x29\x75\xa2\x6e\xfe\xe3\x0f\x27\xc8\x59\x79\x22\x4b\x92\xd0\x9c\x6f\xae\xd3\x0b\xfd\x29\x19\xbd\x69\x5b\x83\x65\x82\x02\x2a\xbd\xd7\xf3\xf1\x5f\x8c\xd2\x4c\xdb\x5e\xce\x81\x59\x9b\x65\x8b\x2d\xc6\x51\xcf\xc7\x22\xc8\x29\x7b\x16\x7b\x4d\x76\x2a\xa5\xad\x38\xb3\xd8\x7a\xe3\xec\x6a\xb4\x5e\xbe\xad\xd5\x2f\x0d\x66\x3b\x2b\xfb\x57\xdc\x66\x1a\x46\xd1\xde\xf3\x4b\x36\x76\xa5\xc4\x9e\x55\x7b\x3c\x87\x36\x59\x59\xea\x41\x5a\xf6\x0a\xbb\xc1\xb6\xc3\x44\x82\x17\xfc\xdc\x16\x73\xdb\x1d\xcc\x23\x34\x15\x9d\x5f\x0a\x85\xa4\x61\x82\xeb\x72\x3e\x90\x7a\x11\x76\xec\x4a\xb6\xb5\xf5\xf9\xc6\xea\xfe\x15\x49\x1b\x31\x2b\xb3\xb3\x4d\x74\x1a\x38\xbf\xc3\x53\xa1\xdc\x8c\xd3\xe5\x30\xd4\xbc\x67\x8b\x0f\xb0\xd7\xa6\x21\xb2\x72\x73\x41\xd7\x88\xd5\xd9\xb7\x54\xae\x10\x9b\x9f\xb8\xe2\x84\xa3\x86\x06\x1a\x2f\x7a\x5d\x4a\x92\xc2\xa9\xbd\xde\xae\x35\xc6\x7e\xc2\xa2\x6d\xf2\x9d\x5d\x33\x72\x4b\x3f\xa3\x10\xcb\x70\xb8\x80\xc6\x54\xe8\x3d\x1c\x6c\x23\xfb\x70\x58\xa0\xce\x8d\x6e\xf5\x2f\x69\x98\xb5\x77\x68\xc4\x48\x28\x23\xfe\x4f\xd2\x8e\x4f\xe0\x57\x0e\x30\x78\xbe\x97\x71\x13\xba\x72\x56\x6b\xd6\x7d\x8f\xfc\xcf\x9f\xfb\xb6\x28\x33\x8f\xb5\x48\xbc\x34\x50\x9b\x06\x44\x68\xe5\xde\x74\x31\xac\x0f\x6d\x75\x2c\xd3\xaf\x36\x84\x34\xb5\x05\x33\x95\xd3\x84\x22\xa3\x3d\xb2\xe0\x0a\x7e\x96\x1e\xf8\xd8\x8e\x1a\xa4\xad\x62\x76\x59\xd5\xaa\x81\x1e\x28\x9c\x27\x64\x96\x84\xc6\xb4\x7d\x0d\x6b\x55\xdc\x9d\xc3\x31\xa9\x91\xee\x9c\x09\xa2\xce\x22\xcc\x2e\xf9\x04\xd6\xa2\xb0\x46\x92\x72\xc5\x61\x19\x7b\x8c\x96\xca\x94\xcb\x56\x3d\x14\x87\xdf\x1c\xf5\x79\xac\x36\x6f\xb4\xb9\x3b\x9b\xe3\xd2\x0b\xe2\xa5\xfd\xf4\xf1\xcd\xb1\x73\x76\x46\xe1\x1a\xce\x1b\xd6\xfa\x9d\xbd\xd2\xf9\x9c\xd6\x23\x33\x59\x0f\xbb\xd8\x79\xd3\x3a\x2e\x93\xd0\xeb\x76\x2e\xe1\x22\xd6\xba\x2f\xa2\x57\x34\x9f\xd6\x9a\xab\x7e\x4d\x26\xb3\xe0\x2a\xb5\x59\x16\x95\x72\xa2\x1c\x94\x91\xba\xa4\x7c\x74\xc6\xcb\x28\x11\xd6\x4d\x80\xd2\xa2\x54\xcf\xec\x3d\x3a\xa7\x4b\x04\x3d\x49\xdc\x93\x84\x89\x07\x24\x9c\xeb\x94\xb5\xbe\x62\x2f\x1d\xb3\x82\xf7\x06\xc1\x6e\x2e\xe1\xe2\xa6\x29\x0a\xf4\xfe\x22\xd7\x0f\x95\xae\x16\xcb\x4f\xed\xcd\x51\x3c\xcf\x02\x29\x7b\xfa\x42\x17\x7b\x86\x4f\xa7\xfa\x37\x96\x13\xcd\x45\x93\x4b\xf5\x0f\xe7\xe8\xae\x27\x1e\xed\x7e\xab\xb8\xf7\x3e\x06\x6e\x77\x78\x10\xad\x2c\xd5\xfc\xb1\x1d\x09\x16\xac\xdb\x2a\xa3\x7f\xcd\x4c\x62\x9b\x12\xc8\x85\xdc\x5a\xa7\x7f\x45\xf8\x8a\x0f\xde\x90\xa1\x6b\xac\xb0\x08\x5f\xf7\x26\xa9\xd5\x01\xf6\xdc\x23\x28\xb7\xac\xf3\xb9\xe6\x52\x87\x75\xc5\x7d\xc4\x24\x09\x6d\xbf\xa6\x8f\x6b\xba\x7b\x5d\x64\x3a\x0e\x4e\x06\xd2\x82\xd7\xb3\x27\xb2\xe3\x29\x28\x52\x6b\x9a\xef\x33\x7d\xdb\x7f\x14\xf6\xaa\xf6\xf0\x60\xdd\xdd\xa6\xb2\x0f\x4b\x1d\xcf\xda\x88\x06\x3b\xfa\xb1\xb9\xc9\x5d\xbb\x49\x65\x25\x19\xd0\x72\x98\x60\x10\xad\xab\x42\xbb\x6a\xac\xb3\x6b\xf2\xc2\x7d\xa8\x0e\xb1\x5b\x69\xc2\x71\xd8\xd9\xc6\xe3\x1d\x62\xad\xcd\x56\xbc\x7e\x69\x4f\x0c\x87\x9a\xbc\xb4\xea\x10\x93\x53\xe6\x79\x00\x13\xab\xed\x71\xb4\xad\x31\x25\x3a\x1f\x72\x2e\x7c\x97\x30\x22\xbd\x95\x20\x4b\x5c\x93\xa2\x95\xe7\x52\x68\x5c\x0c\x3a\x6f\xd3\x8f\x63\x14\xb8\x6e\x78\x80\xdc\xf2\xae\x1b\x59\xd5\x75\x75\x80\x5a\x85\x1d\x54\xfa\x0e\xe1\xd3\x45\xa1\x97\x45\xf9\xe9\x42\x9c\xda\xe8\xc7\x0b\xfe\x46\xcb\xf2\xd0\xea\x83\x3a\xb4\xba\xbc\xa5\x46\x8c\x79\x3a\xf0\x99\xdb\x8f\x0e\x02\xc8\x39\x24\xa9\x25\xe7\x93\x39\x6e\xfc\xe5\xa6\x4a\x91\x09\xc6\x44\xcf\x7f\x4f\x8d\x94\x0f\x3a\xec\x72\x15\x6e\x63\x83\x2e\x70\xd4\x5e\x39\x51\x64\x1f\x8e\x08\xf5\x59\xf0\x75\x3b\xdc\xd3\xe7\x43\xa2\x01\xdf\xbf\xc1\x90\x1a\x2f\x32\x2a\x4e\x4a\x11\x03\x07\xf3\xb8\xec\xdc\x16\x0d\x39\x14\xe5\x8e\x79\x4e\xa5\x8c\x56\x9b\x8f\x8f\x4f\xf5\x58\x0d\xad\xfa\x6c\x83\x55\xef\x64\x99\x1e\xa0\x53\x3a\xbe\x23\xd8\xd1\x06\x98\x97\xc4\x32\x13\xfa\x2e\x18\x17\x2f\xe2\x37\x2e\xe0\x1f\x8d\x9f\x5a\x93\x99\x92\x13\xc5\xb6\x5e\x56\x64\x84\xfa\x10\x47\x31\x89\xa3\xfc\x48\x56\x50\xb9\x03\x2b\x03\xa7\x8a\xf1\x84\x60\x82\x73\xb0\x3f\xd5\x83\x79\x8d\x52\x67\xd3\xac\xa6\x63\xb8\x19\xe7\xfd\x44\xa6\x27\xd6\x8c\x3d\x63\x53\x6d\x0d\x27\xcc\xdf\x26\xab\x0c\xe5\xca\x1a\x28\x08\x6e\xa2\xa4\x3e\x20\x6e\xd4\x9c\xbd\x98\x48\x0d\x45\x7a\x0e\xda\x49\xaf\x51\xb4\xa7\x3b\x83\xb9\x44\x7a\xdc\x78\x1e\x2e\xb2\x7f\xab\x1e\x78\xc9\x19\x37\x76\x87\x1e\xcf\x00\x79\x12\xc1\xad\xdb\x74\x06\xd0\xef\xdb\xda\x42\x3c\x7a\x8a\xd6\x26\x88\xbb\xa2\x83\x24\xa1\x2b\x54\xd9\x71\xa5\x04\xb3\xf6\x39\xf5\xb1\x46\xee\xa2\x49\xc7\x50\x90\x64\xf0\x50\x0c\x4f\x59\x45\x47\x61\x62\xc9\xb6\x6f\x2e\xf6\x96\x3b\x84\xe7\x57\xa4\xc0\x9f\xb3\xde\x79\xfe\x13\xe7\x59\x9f\x7f\x11\x86\x82\x9e\xaa\x7c\x0d\x6b\x5e\x5a\xe6\x76\x42\x7f\xd2\x30\xe5\xf3\x5b\x1a\xc1\x03\xb9\xea\x33\x4d\x7b\xd7\xed\xc8\x51\x34\x20\xed\x14\xa6\xde\x0c\x09\x10\x37\x98\x5d\xe7\xd4\x7c\xe8\x19\x1b\x9f\x61\xf5\xa9\x8a\x74\xae\x46\x38\x74\x02\x79\xb8\x29\x45\xf3\x71\x5c\x8b\x6c\x93\x36\xa0\xba\xb3\x5e\x56\x70\xed\xbb\xb1\xb7\xec\x39\x11\x32\x0a\x23\x4d\xf0\xd2\xb7\xb9\xe8\xa6\xdc\xb9\x3c\xdb\x3b\x25\x49\x1d\xe4\x80\x8b\xf6\xc8\x82\x1c\x6f\x76\xb3\xea\x38\x9c\x44\x92\xc6\x2f\x32\x2c\x4e\xab\x90\x0a\x9b\x7d\xcd\xb7\xca\x0f\xfc\x69\x0f\xb5\xd3\x7b\xe5\x34\x8f\xc3\xc4\xc6\x45\x62\xd5\x76\x90\xa7\x9b\xbb\x12\xff\x75\x98\x8c\x2b\xdb\x43\xf7\xc6\xdc\x92\xa9\x21\xfc\x96\x3a\x0f\xe3\x3e\xef\xa9\x66\xf8\xa3\xa5\xd4\xbc\x97\xfa\xae\x3d\xbc\xa7\x6f\x40\xe5\x97\x48\x75\x54\xc5\x4e\x30\x3a\xe4\x8a\xf1\x86\xaf\x4c\x94\x83\xde\x91\x40\x1e\x88\x49\xee\x55\x25\x34\xe5\xe5\x3f\x5d\xc4\xd3\xeb\x3e\x5d\x74\x8f\x2e\x28\x52\x1d\x2d\xd9\x7f\x34\x6a\xb4\x42\x19\x6b\x38\x93\x38\xec\x8b\xee\x3a\x1c\x53\x9e\x8a\x74\x4c\xe2\xd1\xb1\xf0\xc8\x69\x39\x14\x97\x94\xd2\x75\xd3\x41\xbd\xec\x0d\x6c\xda\xc1\x5c\x66\x57\x3e\x8d\x1f\x19\xad\x9b\x12\x9e\xf1\xb4\x8a\x4f\xa6\x9d\xd4\x56\xf0\xea\xdd\xcd\x7f\xbc\xb9\xfa\xa7\xd7\x6f\xb2\x05\xa6\x99\xbc\xd4\x59\xcc\xd2\xc2\xef\xcf\x1e\x10\xb4\x0f\x06\xdd\x47\xe4\xc1\xdd\x62\xec\x90\x0d\x78\xe5\x4d\x9c\xbf\x49\xd8\x2d\xb1\x16\x71\x59\x1f\x46\x73\x69\x57\x6f\xde\x4c\x22\x28\xba\xdb\x9c\x17\xe7\x4c\x22\x8f\xa5\xb5\x0d\xfe\x83\x33\x8f\x22\x2e\xb7\xca\xad\xd5\x16\xa1\xa0\x48\xa1\xc8\x3a\x2a\xd7\x9b\xe3\xa9\x9e\x5e\x9c\xd4\x8f\x33\x16\x32\x50\xa0\x4c\xd7\x9e\xd6\xd6\x03\xf2\xc4\x8c\xc5\x05\xdb\xe5\xb7\xd3\x4a\x6d\xeb\x43\x6f\x80\xb0\xf3\xc7\xd8\x93\xcb\xc9\xc9\x2d\x27\x83\x3a\x1f\xad\xdf\x86\x88\xad\x3b\xd1\x5b\xf4\xcc\xf1\xf5\xa1\x27\x30\x20\x6d\x77\x0c\x0a\x1a\x39\x66\xa4\x97\x6c\x0a\x16\x2a\x0c\x70\xb0\x4d\xc6\x06\x45\x15\x74\xe0\x99\x83\x07\xd3\x1d\x82\xb6\x22\x79\x1f\xfc\xd2\x2a\x88\x48\x62\x9f\x6f\xf2\xe8\xe4\x2c\xce\x62\x47\x4e\x32\x61\x11\x4f\x4e\x89\x67\x85\x2d\x45\x3a\x17\xe0\x6d\x57\x71\x37\x39\x9f\xa5\x5b\x52\xbc\xea\xdf\x39\xe8\x18\x47\x42\x32\xfa\xfe\x45\xce\x0b\x1f\x42\xc3\xd4\x4a\xa7\x14\x9d\x33\x74\xb5\x61\xde\x5a\xc0\xd5\xbb\x57\xa9\x5a\xc4\xc2\xdc\x4e\xbf\x5f\x6c\xac\x43\x8a\x55\x4c\x99\xd6\x9d\xea\xbe\x6c\x4f\x9c\x88\xb2\xd1\x2d\xd6\xf1\xe8\xe8\x2c\x89\x3b\x3c\x2c\x59\x43\x4e\x2c\x2a\xc7\xf5\xf1\xc1\x24\x29\x0a\x4b\xbc\xd8\x0d\xcc\xad\xe0\x95\xa8\x77\x9e\x42\xd9\xa8\xca\xe3\x0a\x6e\xa7\xbc\xd2\xf6\xc8\xb1\x34\xa7\x2f\xb5\x4f\x83\x58\x7a\xb8\x10\x08\x2f\xa0\x46\xb7\xd7\xbe\x4f\x1e\xde\xcb\x38\xb1\x20\x97\x4d\x73\xaf\xf0\xe7\xef\xbe\x83\xaf\x7e\x32\x71\x00\x8c\x73\xc4\xaf\x4d\xd0\xe1\xf0\x75\xef\xc8\x2c\xa9\x88\xcd\x11\x7a\x6d\x6d\x85\x2a\x97\x3d\xee\x04\xfa\x31\x14\x3e\x42\x1e\x6b\xa3\x76\x68\xe7\x0c\x65\x71\x1e\x6c\xd3\x1d\x1e\x99\xfe\x8e\x63\xb6\xff\xa3\x8b\xec\x27\x24\x6a\xba\x11\x2e\xe3\xea\x9e\xda\xcb\x6f\xf7\xd1\xce\x82\x79\xb2\x33\x69\xa6\x27\xe9\x29\x20\x9e\xee\x1e\x9a\x05\x78\x7a\x30\x71\xd9\xd3\xa6\x99\x9b\x44\xd5\xcc\xcf\xd9\x7e\xc0\x25\x61\xe5\x29\xa2\x9e\x13\xc5\xd9\xd1\x01\x01\xb1\x3a\x29\x0e\x20\x67\xb7\xba\xe6\xa3\x38\xc4\x9b\x86\xe4\x5a\x43\x90\xcf\x85\x9e\x55\x83\x9d\xa8\xb3\x8e\xbd\xc0\x41\xdd\xf5\x6d\xaf\x45\x82\xdc\x52\x5b\x07\xbd\xd7\x3e\xe8\x02\x7a\x75\xc7\x45\x3a\x41\x9a\xbe\xc1\xdd\x76\xd3\xe7\x69\xc8\xa4\x7e\x97\x29\xb0\xa6\x7f\x48\xab\x75\x29\xfd\xd2\xc6\x6d\xed\x29\x91\xa3\x25\xa5\x0d\x91\x62\xa8\x18\x5b\xc7\x22\x82\xea\x77\x80\x3c\xb2\xde\x9b\x6a\xbc\x7c\xa2\xeb\xbe\x77\xcc\xa0\x64\x1f\x08\x07\x4a\xce\xd1\x2a\x9a\x4a\xb9\x0c\xe4\x19\x36\x6e\x77\x32\x7d\xe4\xd4\xa0\x78\x7c\x5e\xb5\x7b\xb2\xc2\xfd\xd4\xaa\xf2\x8c\x0a\xf3\xd9\xc1\xc0\x54\x25\x79\x38\xac\x75\x7e\xf5\x78\x80\xcf\x8c\x78\x9c\x51\x31\x9e\x84\x35\xa3\x2e\x87\x52\x4c\x8a\x32\x06\x8c\x31\x89\xa1\x4d\x3c\x57\xc6\x94\x31\xc0\x15\xf9\x3e\x3a\x50\x33\x13\x5a\x70\x38\xd1\x15\x46\xba\x63\x77\x86\x07\x3c\x5a\x03\x5e\xaa\x99\x9b\xa6\xea\x12\x08\x19\xb6\xeb\x49\x55\xef\x48\xc7\x74\xc2\x67\x77\xea\xbb\x35\xf0\xe1\xa7\xdb\xc1\xb1\xac\x7d\x36\x1d\xad\x7b\x4e\xcf\xc3\x97\x99\x88\x33\x99\x28\xab\x9b\xd3\x9f\x0a\xc8\x12\xaa\x77\x5e\xfd\x4d\x8d\xc5\x20\x0d\x31\x38\x4b\x86\x14\xcf\xf1\x5f\x07\x90\x6b\xca\xb7\x8f\xe7\xda\x5f\x55\x55\x74\x32\x6f\xfa\xe7\xfc\x4f\xc0\x33\xf5\x92\x50\x47\xda\x8e\xba\x33\xf3\x39\xdd\x90\xd3\x55\x99\xe3\xf9\xbb\xde\x00\xe2\x26\x76\xed\x7a\xb5\xac\x36\x18\x8d\x4f\x8f\xd3\x69\xc3\xca\xab\x9c\xdf\x0f\xaa\xfd\x52\x6a\x50\xee\x7d\x84\xfd\xe9\xfe\x57\x46\x8b\x1e\x7f\xf5\xf8\x2b\x69\x9b\xd6\x4d\x7e\x30\xcb\x18\x39\x3f\xd3\x9f\x81\xfd\x04\x46\x94\xdc\x74\xe4\x47\xee\x8f\x1d\x44\xa3\xa5\x8f\xda\xe3\x26\x32\x03\x38\x3c\x45\x94\xcf\x51\xd1\xfb\x58\xe3\x49\xe5\xab\xec\x67\x32\xd3\x48\xe9\x6f\x27\x0c\xff\xbe\x42\x6a\x4c\x9b\xe4\xa0\x48\x76\x22\xd1\x98\x5f\x4e\xbc\x24\x5a\xab\xfb\x8d\xf4\x45\x7b\xea\x0f\x0e\x51\x90\x09\x7e\x59\x3f\xf7\xe9\xcc\x01\x0d\x8f\x09\xd4\x0e\x0b\x2c\x29\xb4\x90\x7c\xfe\x0c\xce\xa7\x1c\x07\xa2\x41\x3a\x08\x87\x45\x35\x1e\xe8\x96\x92\xe3\x0e\x37\x92\xb6\x69\x13\x03\xd2\x16\xc2\x91\xef\x97\xe4\x36\x48\x59\xb4\x47\xd9\x26\x5e\x15\x26\x17\x0d\xd8\x01\x2d\x0a\x36\xf8\x93\x28\x9a\xcb\x0f\xa4\xbf\x90\x71\x86\x87\xde\xfe\x31\x8d\xe1\x51\xea\x47\xb2\xd3\xc1\x37\x15\x95\x9a\xd1\x9f\xed\xe8\x5f\xa7\xa2\xb9\x33\x23\x20\x13\x0f\x32\xeb\xd7\xd7\xad\x99\xfb\x1b\x23\xd9\x35\xf7\xea\xf3\x1b\x3e\x16\xef\x12\xbe\xfb\xcb\xf7\xf9\x47\xb4\x49\x8f\x7c\xfb\x07\x14\x3a\xf2\x76\x68\xd4\xb8\x34\x69\x89\x84\x3f\xfb\xb6\x28\x9e\x21\x92\x37\x46\x43\x1e\xbe\xed\x1f\x0c\x75\xea\x6f\xb6\x4c\x89\xca\x60\xc5\x1d\xba\xb3\xfe\x0a\xc4\x63\x54\x2c\x9a\x42\xd5\x9e\x1d\x09\x9f\xca\xf9\x04\x9c\xdd\x48\x5f\x45\x1a\xd4\x98\x97\x1b\x72\x9e\xb8\x40\x30\xc9\xd1\x8f\x92\xe7\x88\xf8\x9e\xec\x44\x84\x0c\x4f\xdb\x0a\xf9\x81\xa8\x59\xd0\x25\xc7\x3f\x34\x5e\xff\xd7\xd5\xc0\xec\xe8\xc7\x00\xde\xf8\xe4\xcc\xf9\x0b\x0e\xb7\xca\xf1\x21\x0a\xf1\x5c\x85\xbc\x2e\x78\x9a\xd4\xcc\xff\x16\xc5\x34\xdf\x0d\x39\x94\xbb\xc8\xda\xed\x6c\x45\x8c\x15\xc8\xb7\x8a\x18\xe5\x03\x08\x7a\x0c\x3c\xc1\x14\xf3\x12\x79\x12\xe6\xa7\x50\xa6\x47\x3f\xa5\xbf\x00\x06\xf7\xdf\x76\xff\x63\xa4\x2c\xe3\xdf\x1f\xbb\x17\xe4\x8a\x0e\xed\x75\x80\xc4\x83\x9e\xe2\x2f\xff\x1d\x00\x00\xff\xff\xa5\x73\x9e\x1a\x00\x6d\x00\x00")

func upsertOsdOperatorhubCrd00OperatorhubCrdYamlBytes() ([]byte, error) {
	return bindataRead(
		_upsertOsdOperatorhubCrd00OperatorhubCrdYaml,
		"UPSERT/osd-operatorhub-crd/00-operatorhub.crd.yaml",
	)
}

func upsertOsdOperatorhubCrd00OperatorhubCrdYaml() (*asset, error) {
	bytes, err := upsertOsdOperatorhubCrd00OperatorhubCrdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "UPSERT/osd-operatorhub-crd/00-operatorhub.crd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _clusterMonitoringConfigClusterMonitoringConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x52\x4d\x6b\xea\x50\x10\xdd\xe7\x57\x0c\x6e\x84\x80\xbe\xe7\x03\xe1\x71\x77\xc5\x8a\x8b\x56\x17\xd6\x76\x3f\x4d\x8e\xf1\xd2\xfb\xd5\xb9\x13\xa1\xd0\x1f\x5f\x8c\x26\x84\x6e\xbb\xe8\x5d\x9e\xaf\xb9\x67\x18\x4e\xf6\x05\x92\x6d\x0c\x86\xce\x8b\xa2\x66\x65\x53\x10\x55\x31\x1c\x6d\x33\xff\x60\xef\x0c\x7d\x16\x44\x44\x49\xa2\x87\x9e\xd0\xe6\x87\xff\xd9\x74\x10\x91\x40\x11\xb4\x73\x2f\x96\xf5\x0d\x3c\x47\xd7\x7a\xac\x1c\x5b\x7f\x80\x4f\x8e\x15\xbd\x9e\xc8\x43\xb9\x9f\xd2\xbf\xc0\x1e\x66\x34\x60\x76\x11\x0c\x7c\x4e\xa8\xc6\xea\xac\x51\xb8\xb9\xe4\xe7\xbc\xeb\x9c\x4d\xfa\x37\xe2\x05\x39\xb6\x52\x21\x8f\x4d\x17\xf8\xbd\x45\xd6\x6f\xe8\x10\x67\x68\xf9\x77\x63\x3b\x8e\x1d\x44\x3d\x07\x6e\x20\x5b\xb6\xc1\xfc\xac\xd7\x38\xee\x77\x9a\x2d\xfa\x66\x0a\x07\x0f\x85\xac\x9c\x45\xd0\xde\x30\xc0\x4f\x90\x33\xe4\x79\xff\x68\x68\x5a\x96\x25\x6d\xd6\xbb\xf5\xfe\xee\xb0\xbe\xa7\xb2\x2c\xa7\xc5\x9b\x0d\xb5\xa1\x55\x77\x1b\x5b\x4e\xc5\xb8\xb3\xe3\x57\xb8\xdb\x17\x38\xd9\x79\x4c\x08\xf9\x64\x8f\x3a\xaf\xa2\xff\x73\xad\x5f\x1b\x9a\xa8\xb4\x98\x14\xfd\x6e\x2a\xd7\x66\x85\xcc\x7c\x0c\x56\xa3\xd8\xd0\xcc\xae\xa7\x77\x53\xe4\xc4\x15\x0c\x0d\x61\x23\x61\xf1\x15\x00\x00\xff\xff\x33\x96\xda\x75\xbb\x02\x00\x00")

func clusterMonitoringConfigClusterMonitoringConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_clusterMonitoringConfigClusterMonitoringConfigYaml,
		"cluster-monitoring-config/cluster-monitoring-config.yaml",
	)
}

func clusterMonitoringConfigClusterMonitoringConfigYaml() (*asset, error) {
	bytes, err := clusterMonitoringConfigClusterMonitoringConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "cluster-monitoring-config/cluster-monitoring-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeletConfig01PatchMachineconfigpoolYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcd\x31\x6b\xc3\x30\x10\x05\xe0\x5d\xbf\xe2\xd0\x9e\x94\xae\xb7\x85\xce\x81\x0e\xa5\xfb\x45\xba\xd8\x87\xa5\x3b\x21\xc9\x35\xc6\xf5\x7f\x2f\xb5\xa7\x6c\x8f\xf7\xc1\x7b\x93\x68\x44\xb8\x53\x18\x45\xf9\xc3\xf4\x29\xc3\xa7\x59\x72\x54\xe4\x9b\x6b\x13\x53\x84\x7c\x6a\x38\x74\xae\xd4\xc5\xf4\x6a\x85\xb5\x8d\xf2\xec\x57\xb1\xb7\x9f\x77\xa7\x94\x19\x61\xb1\x3a\x71\x75\x54\x4a\x5a\xef\x16\x19\xe1\x96\x16\x5a\xdb\xed\xbf\x70\x85\x7a\x18\x11\x7e\x2f\x0e\x60\x03\x9f\xb9\x53\xa4\x4e\x1e\x61\xf3\x89\x1e\x9c\xda\x11\x33\x29\x0d\x1c\x5f\x2f\xc2\xdc\xba\xe5\xcb\x34\x3f\x38\x71\xf7\xe8\xfd\x0e\x3b\xec\xe7\xe6\xd7\x5a\x18\x21\x73\x1d\xd8\xfd\x05\x00\x00\xff\xff\x6d\x2a\x8d\x58\xd2\x00\x00\x00")

func kubeletConfig01PatchMachineconfigpoolYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubeletConfig01PatchMachineconfigpoolYaml,
		"kubelet-config/01-patch.machineconfigpool.yaml",
	)
}

func kubeletConfig01PatchMachineconfigpoolYaml() (*asset, error) {
	bytes, err := kubeletConfig01PatchMachineconfigpoolYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubelet-config/01-patch.machineconfigpool.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeletConfig02PatchMachineconfigpoolYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\xa1\x3d\x29\xba\x6a\x0b\x3a\x07\xe8\x50\x74\x67\x24\xc6\x26\x2c\x91\x82\x44\xb7\x30\x5c\xff\x7b\x61\x7b\xca\x76\xb8\x77\xb8\x37\xb1\xa4\x00\x77\x8c\x23\x0b\x7d\xa8\x3c\x79\xf8\x54\xcd\x0e\x2b\x7f\x53\xeb\xac\x12\xa0\x9c\x34\x1e\x74\x6e\x68\xac\x72\xd5\x4a\xd2\x47\x7e\xda\x95\xf5\xed\xe7\xdd\x09\x16\xda\xa7\xdd\xa8\x39\xac\x35\x2f\x77\x4d\x14\xe0\x96\x7f\x71\xe9\xb7\xbd\x70\x15\x2d\x8e\x01\xfe\x2e\x0e\x60\x05\x5f\xc8\x30\xa1\xa1\x0f\xb0\xfa\x8c\x0f\xca\xfd\x88\x05\x05\x07\x4a\xaf\x8a\x38\x77\xd3\x72\x99\xe6\x07\x65\x32\x1f\xbc\xdf\x60\x83\xed\xfc\xfc\x5a\xea\x2e\xa7\x36\x90\xfb\x0f\x00\x00\xff\xff\x44\xae\xe9\xce\xd2\x00\x00\x00")

func kubeletConfig02PatchMachineconfigpoolYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubeletConfig02PatchMachineconfigpoolYaml,
		"kubelet-config/02-patch.machineconfigpool.yaml",
	)
}

func kubeletConfig02PatchMachineconfigpoolYaml() (*asset, error) {
	bytes, err := kubeletConfig02PatchMachineconfigpoolYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubelet-config/02-patch.machineconfigpool.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _kubeletConfig03KubeletConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xb1\x6e\xc3\x30\x0c\x05\x77\x7d\x05\xe1\xbd\x89\xbd\x6a\xed\xd0\xa1\x1d\x8a\x16\xe8\xce\xc8\x4c\x4c\x58\x14\x05\x89\x0a\x90\xbf\x2f\x1c\x25\x80\xb3\x0a\xa7\x7b\x47\xcc\xfc\x47\xa5\xb2\x26\x0f\x82\x61\xe1\x44\x41\xd3\x99\x2f\xad\xa0\xb1\xa6\x83\x66\x4a\x75\xe1\xb3\x1d\x58\x8f\xd7\xc9\xad\x9c\x66\x0f\x9f\xed\x44\x91\xec\xfd\x8e\x3a\x21\xc3\x19\x0d\xbd\x03\x48\x28\xe4\x21\xb4\x6a\x2a\x6f\x6b\xc7\x1c\x40\xc4\x13\xc5\xba\x01\x00\x98\x79\xa7\x0d\x2a\x47\xc1\x84\x17\x9a\x3d\x0c\x56\x1a\x0d\xae\x66\x0a\x1b\xfb\x28\xea\x33\xdf\xaa\xf1\x97\x22\x05\xd3\xd2\x45\x82\x16\x96\xaf\x9d\x79\x7b\xba\x9b\x5e\xb3\x5f\x6b\x3c\x0c\x83\x03\x58\xf7\x27\xf4\xef\xf5\x56\x8d\xe4\x87\x2a\x95\x2b\xcd\x4f\x65\xc8\xcd\xc3\x34\x8e\xa3\x3c\x37\x48\xb4\xdc\x3c\x4c\x1f\xec\xfe\x03\x00\x00\xff\xff\x14\x24\xd8\x4c\x40\x01\x00\x00")

func kubeletConfig03KubeletConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_kubeletConfig03KubeletConfigYaml,
		"kubelet-config/03-kubelet-config.yaml",
	)
}

func kubeletConfig03KubeletConfigYaml() (*asset, error) {
	bytes, err := kubeletConfig03KubeletConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "kubelet-config/03-kubelet-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator050VeleroCustomresourcedefinitionYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x56\x4d\x8f\xe3\x44\x10\xbd\xe7\x57\x94\x96\xc3\x5e\x18\x47\xa3\x91\x10\xf2\x8d\x1d\x90\x58\x18\x96\xd1\x66\x35\xf7\x72\xbb\x92\x34\xd3\xee\x36\x5d\xd5\x61\x03\xe2\xbf\xa3\xea\xb6\x13\xc7\xf1\x12\x21\xd1\xa7\xa4\x5c\xae\x7a\xfd\x5e\x7d\x18\x7b\xfb\x42\x91\x6d\xf0\x35\x60\x6f\xe9\xb3\x90\xd7\x7f\x5c\xbd\x7e\xcb\x95\x0d\xeb\xc3\x7d\x43\x82\xf7\xab\x57\xeb\xdb\x1a\x1e\x13\x4b\xe8\x3e\x12\x87\x14\x0d\x7d\x4f\x5b\xeb\xad\xd8\xe0\x57\x1d\x09\xb6\x28\x58\xaf\x00\x1c\x36\xe4\x58\x7f\x81\xc6\xac\x42\x4f\x9e\xf7\x76\x2b\x95\x09\xdd\xba\x43\x8f\x3b\x6a\x6b\x78\x23\x31\xd1\x9b\x15\x80\xc7\x8e\x6a\x38\x90\xa3\x18\xb8\x1a\x9e\x4f\xde\xb2\x61\xc5\x3d\x19\x0d\x88\x6d\x9b\xf3\xa1\x7b\x8e\xd6\x0b\xc5\xc7\xe0\x52\xe7\x73\xb2\x3b\xf8\x69\xf3\xeb\x87\x67\x94\x7d\x0d\x15\x0b\x4a\xe2\x8a\x1f\xde\x25\xf3\x4a\x52\x69\x8e\x0c\xa8\x25\x36\xd1\xf6\x92\x6f\xfc\x01\x3b\x82\xb0\x05\xd9\x13\x6c\x1e\xa0\xc9\xbe\xd9\xad\x60\x7a\x77\x36\xc8\xb1\xa7\x1a\x58\xa2\xf5\xbb\x5b\xc9\xfa\x18\x0e\x56\x59\xa4\xf6\x3a\xe7\x8f\xc8\x97\xf9\xa0\x21\xf2\xc0\xc9\x18\x62\xde\x26\xe7\x8e\x30\x0f\x50\xd0\x3c\xcf\xac\x05\x52\x13\x82\x23\xf4\xb7\x30\x39\x64\xd9\x1c\xbd\xf9\x64\x3b\x62\xc1\xae\x9f\x04\x7e\x42\x16\xd0\x87\x93\xb0\x2d\x8a\x12\x66\x82\x3f\x0c\xf5\x91\x1f\xb2\x44\x14\xda\x1d\x6b\xf8\x10\xbc\x3a\xec\x62\x48\x7d\x0d\x8b\xaa\x95\xf8\x43\x25\x94\x02\x7a\xc9\x2a\x67\x83\xb3\x2c\x3f\x4f\x8c\x4f\x96\x0b\xd5\xbd\x4b\x11\xdd\xa9\x22\x4a\x5e\xeb\x77\xc9\x61\x1c\xad\x2b\x00\x36\x41\x81\xaa\x86\xdc\xa3\xc9\xa4\x70\x6a\xe2\x50\x9c\x3c\x02\x56\x1e\x6a\xf8\xeb\xef\x15\xc0\x01\x9d\x6d\x51\x4e\xb7\x51\xb4\xdf\x3d\xbf\x7f\x79\xd8\x98\x3d\x75\x58\x8c\xa0\xf4\xf7\x14\xc5\x8e\x31\x86\x42\x7e\x99\x12\x51\xce\x85\xb2\x6f\x35\x54\xf1\x81\x56\x5b\x83\x8a\xd2\x03\x81\xd4\x02\xe7\x34\xa5\xe2\x2c\x43\xa4\x3e\x12\x93\x97\x0c\x69\x12\x16\xd4\x05\x3d\x84\xe6\x37\x32\x52\xc1\x86\xa2\x06\x01\xde\x87\xe4\xda\x41\x14\x81\x48\x26\xec\xbc\xfd\xf3\x14\x99\x41\x42\x4e\xe9\x50\x68\x60\x73\x3c\xb9\x5d\x3c\x3a\x25\x21\xd1\xd7\x80\xbe\x85\x0e\x8f\x10\x49\x73\x40\xf2\x93\x68\xd9\x85\x2b\xf8\x25\x44\x02\xeb\xb7\xa1\x86\xbd\x48\xcf\xf5\x7a\xbd\xb3\x32\x8e\x06\x13\xba\x2e\x79\x2b\xc7\xb5\x09\x5e\xa2\x6d\x92\x84\xc8\xeb\x96\x0e\xe4\xd6\xd8\xdb\xbb\x8c\xd3\x4b\x1e\x27\x5d\xfb\xd5\x49\x99\xb7\x13\x60\xb3\xbe\x2a\x27\xd7\xca\x17\x69\xd6\xa2\x01\xcb\x80\xc3\x6b\x05\xee\x99\x4d\x35\x29\x09\x1f\x7f\xd8\x7c\x82\x31\x69\x66\xfc\x92\xe2\x4c\xee\xf9\x35\x3e\xf3\xac\xbc\x58\xbf\xa5\x58\x74\xda\xc6\xd0\xe5\x88\xe4\xdb\x3e\x58\x2f\xf9\x8f\x71\x96\xfc\x25\xc7\x9c\x9a\xce\x8a\x0a\xfb\x7b\x22\x16\x95\xa3\x82\x47\xf4\x3e\x68\x97\x43\xea\xb5\xab\xda\x0a\xde\x7b\x78\xc4\x8e\xdc\x23\x32\xfd\xdf\x2c\x2b\xa1\x7c\xa7\x0c\xde\xe6\x79\x3a\xb5\x2f\x1d\x0b\x39\x27\xf3\x38\x7f\xff\xdd\xa9\xb4\xda\xc4\x6d\xa9\x91\xb2\xe7\x30\x95\x2e\xad\x33\x9d\x37\x83\x93\x96\xbb\xa0\xf5\x0c\x2d\x09\x5a\xc7\x93\x89\xcd\x12\x22\xee\x68\x9c\xa4\xdb\x10\x67\x11\x01\x1a\x34\xaf\xa9\xe7\x99\xfd\x4b\xc8\xf4\x5c\x8d\xca\x6b\x97\x19\xd4\xa7\xf9\x1b\x5a\x9e\x0a\x51\x6c\xa7\x95\x87\xa5\x62\x06\x94\x7d\x70\xd6\x1c\x17\x62\x02\xfc\x81\x9c\xd3\x03\x1f\xbd\xa1\xb6\x5a\x70\xda\x86\xd8\xa1\x94\x01\x7d\xa7\xf1\x17\x7c\x16\xc5\x1e\x4f\x9e\xf9\xb7\x6e\x94\x37\xe3\x70\x09\xbf\xb4\x25\xc1\x44\xd2\x62\xd6\x89\xa3\x2a\x2c\xc1\x80\x61\xb2\x0f\x1a\x8c\xfa\x2d\x78\x76\xf8\xf9\x89\xfc\x4e\x37\xd7\x37\x0f\xff\xf5\x42\x93\x6d\x79\xf3\x5e\x93\x1d\x9a\xaf\x17\x13\x41\xf0\x79\x3c\x9c\xf4\xd9\x23\x97\x9d\x9c\x3f\x6e\xd0\xb9\x65\xad\x26\x69\x97\x74\x9a\x6f\xe7\xe9\xd1\xf9\x60\xe3\x35\xdc\xbb\xab\xcd\x3f\x8f\x37\x6b\xb9\x2b\xf3\xb8\xac\xe1\x70\x8f\xae\xdf\xe3\xfd\xd9\x36\x7c\x24\x0d\x5f\x5b\xe7\xc7\x00\xac\x63\xaf\xad\x33\x1b\xc3\xd2\xcc\x6d\x35\x58\xfe\x09\x00\x00\xff\xff\xa0\x54\x24\x50\x24\x0a\x00\x00")

func managedVeleroOperator050VeleroCustomresourcedefinitionYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator050VeleroCustomresourcedefinitionYaml,
		"managed-velero-operator/050-velero.CustomResourceDefinition.yaml",
	)
}

func managedVeleroOperator050VeleroCustomresourcedefinitionYaml() (*asset, error) {
	bytes, err := managedVeleroOperator050VeleroCustomresourcedefinitionYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/050-velero.CustomResourceDefinition.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator100VeleroNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xca\x31\xae\xc2\x30\x0c\x06\xe0\x3d\xa7\xb0\xba\xb7\xd5\x5b\x73\x88\x37\xb2\x9b\xe6\xa7\x58\xc4\x76\x94\xb8\x3d\x3f\x82\xa5\x6c\xdf\xf0\x71\x93\x1b\xfa\x10\xb7\x4c\xe7\x5f\x7a\x89\x95\x4c\xff\xac\x18\x8d\x37\x24\x45\x70\xe1\xe0\x9c\x88\x2a\xdf\x51\xc7\x47\x44\xdc\x64\xf1\x06\x1b\x4f\x79\xc4\xb2\xb9\xae\xca\xc6\x3b\x4a\xa6\x29\xfa\x81\xe9\xbb\xae\x21\xbe\x6e\xf5\x18\x81\x3e\xab\x9b\x84\x77\xb1\xfd\xe7\x1a\x2b\xf2\xf5\xe7\x13\x15\xdd\xd3\x3b\x00\x00\xff\xff\x27\x5c\x2a\x4a\x9e\x00\x00\x00")

func managedVeleroOperator100VeleroNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator100VeleroNamespaceYaml,
		"managed-velero-operator/100-velero.Namespace.yaml",
	)
}

func managedVeleroOperator100VeleroNamespaceYaml() (*asset, error) {
	bytes, err := managedVeleroOperator100VeleroNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/100-velero.Namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator105VeleroServiceaccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\x31\xaa\xc3\x40\x0c\x44\xfb\x3d\x85\x70\x6f\x7f\x7e\xab\x2e\x67\x08\xa4\x57\xd6\x93\x44\xc4\x2b\x2d\x5a\xd9\xe7\x0f\x01\x93\x6e\x98\xf7\x78\xd2\xf5\x86\x18\xea\xc6\x74\xfc\x97\xb7\xda\xca\x74\x45\x1c\x5a\x71\xa9\xd5\x77\xcb\xd2\x90\xb2\x4a\x0a\x17\xa2\x4d\xee\xd8\xc6\x77\x11\x49\xd7\xc5\x3b\x6c\xbc\xf4\x91\x4b\xf5\xf6\xd7\xc4\xe4\x89\x95\x69\xca\xd8\x31\x15\x22\x93\x06\xa6\xf3\x9f\x0f\x6c\x08\x9f\xbd\x23\x24\x3d\x4e\x3e\xba\x54\x30\xfd\x52\xa7\x56\x3e\x01\x00\x00\xff\xff\x5e\x8d\x77\x09\x9c\x00\x00\x00")

func managedVeleroOperator105VeleroServiceaccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator105VeleroServiceaccountYaml,
		"managed-velero-operator/105-velero.ServiceAccount.yaml",
	)
}

func managedVeleroOperator105VeleroServiceaccountYaml() (*asset, error) {
	bytes, err := managedVeleroOperator105VeleroServiceaccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/105-velero.ServiceAccount.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator110VeleroClusterroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x31\x6b\xfd\x30\x0c\xc4\x77\x7f\x0a\xf1\x96\x07\x7f\x48\x1e\xff\xad\x78\xed\xd0\xbd\x43\x77\xc5\x51\x12\xf1\x1c\xcb\x48\x72\x5a\xfa\xe9\x4b\xd2\x14\x4a\xdb\xc9\xe7\xe3\xb8\xfb\x09\x2b\xbf\x90\x1a\x4b\x89\xa0\x03\xa6\x1e\x9b\x2f\xa2\xfc\x8e\xce\x52\xfa\xfb\x83\xf5\x2c\xb7\xed\x7f\xb8\x73\x19\x23\x3c\xe6\x66\x4e\xfa\x2c\x99\xc2\x4a\x8e\x23\x3a\xc6\x00\x90\x71\xa0\x6c\xbb\x02\xc0\xca\xbd\x54\x2a\xb6\xf0\xe4\x7d\x92\xf5\xb6\x62\xc1\x99\xc6\x08\x17\xd7\x46\x97\x00\x50\x70\xa5\x08\xa7\xdf\x6d\x94\x49\xa5\x93\x4a\x8a\x2e\x1a\xb4\x65\xb2\x18\xba\xbd\xea\x49\xa5\xd5\xa3\xf9\xf8\xd2\x9b\x53\xd9\x71\xed\x64\x0b\x00\x4a\x26\x4d\x13\x9d\xa9\xd4\xcc\x65\xfd\x32\x47\x9a\xb8\xf0\x7e\x8c\x05\x80\x8d\x74\x38\x63\xd7\x7f\xd7\xdf\x0b\x49\xca\xc4\xf3\x37\xfc\xbf\x06\xb8\x4c\x8a\xe6\xda\x92\x37\xa5\x1f\xb5\x33\xf9\xf1\x66\xb6\x4f\xf1\x8a\x9e\x96\xf0\x11\x00\x00\xff\xff\xd6\xb1\x1a\xcf\x68\x01\x00\x00")

func managedVeleroOperator110VeleroClusterroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator110VeleroClusterroleYaml,
		"managed-velero-operator/110-velero.ClusterRole.yaml",
	)
}

func managedVeleroOperator110VeleroClusterroleYaml() (*asset, error) {
	bytes, err := managedVeleroOperator110VeleroClusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/110-velero.ClusterRole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator110VeleroRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x53\xbb\x8e\x1b\x31\x0c\xec\xf7\x2b\x04\x37\x07\x04\xf0\x1a\xe9\x82\xfd\x81\x74\x29\x52\xa4\xa7\xa5\xb1\x8f\x38\x49\x54\x48\x69\x81\xdc\xd7\x07\x6b\xeb\x1c\x3f\xe3\xeb\x44\xee\x68\x86\xc3\xd1\x52\xe1\x5f\x50\x63\xc9\x93\xd3\x2d\xf9\x91\x5a\x7d\x15\xe5\x77\xaa\x2c\x79\x7c\xfb\x66\x23\xcb\x66\xfe\x3a\xbc\x71\x0e\x93\xfb\x29\x11\x43\x42\xa5\x40\x95\xa6\xc1\xb9\x48\x5b\x44\x5b\x4e\xce\x51\xe1\x51\x0a\xb2\xbd\xf2\xae\x8e\x5e\xd2\x26\x51\xa6\x3d\xc2\xe4\x56\x55\x1b\x56\x83\x73\x99\x12\x26\xd7\xfb\xeb\x19\x11\x2a\x6b\x29\x50\xaa\xa2\xfd\xbb\x15\xf2\x98\xdc\x89\xaa\xc3\x06\x6d\x11\x36\x0d\xeb\x45\xe8\xbb\x4a\x2b\x07\xdd\xb5\x5b\x2d\xc4\x0a\x93\xa6\x1e\xbd\x57\x24\xd8\xe1\x60\xd0\x99\x3d\x2e\x8b\xcd\x8e\x33\x45\x7e\x87\x1e\xfb\xc8\xa1\x08\xe7\x7a\xac\xca\xb2\x10\xab\xc8\x75\x96\xd8\x12\x7c\x24\x4e\x1d\x38\xe3\x03\xe5\x25\xef\x78\x9f\xa8\x7c\x50\x7b\xc5\xe1\xd3\x0c\xdd\xf6\x29\x5e\xbe\xbc\xdc\x8e\x4b\xe5\x70\xe5\x6a\xe0\x80\x12\xe5\x4f\x3a\xd1\x07\x42\x92\x6c\xe8\xa5\xa2\x44\xf6\x74\xaa\xad\x52\xc5\xae\x45\xfb\x9c\x66\x92\xcc\x55\x94\xf3\x7e\xf4\xa2\x10\x5b\xe2\xb9\x1d\xa2\xef\xa7\xa3\xaf\x88\xf7\xa8\x47\xe3\x0a\xaa\x78\xea\xeb\xc7\x92\x64\x57\x7f\x18\xf7\xe3\x25\x5c\x46\x74\x36\x46\x2b\xe1\xae\xfc\x7f\x5e\xc1\x95\x89\x4f\x26\x72\xb9\xf2\x67\x1c\xdd\xe3\xd9\x0f\xc0\x72\xcb\x79\xdc\x80\x9d\x9f\x37\x4b\x94\xed\xb2\xf5\xc8\xfb\xdd\x6c\x8f\x97\xee\xca\x2d\xf8\xe7\x04\x3e\x4a\x0b\x5e\x11\x90\x2b\x53\x7c\x62\xe1\x1f\xd0\x14\xbf\x1b\xec\xde\x03\xfc\x1b\x00\x00\xff\xff\x1d\xd1\x9d\xb0\x57\x04\x00\x00")

func managedVeleroOperator110VeleroRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator110VeleroRoleYaml,
		"managed-velero-operator/110-velero.Role.yaml",
	)
}

func managedVeleroOperator110VeleroRoleYaml() (*asset, error) {
	bytes, err := managedVeleroOperator110VeleroRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/110-velero.Role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator111VeleroRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\xb1\x6a\xc4\x30\x0c\x86\x77\x3f\x85\xc8\xee\x1c\xb7\x15\xbf\x40\xb7\x0e\x1d\xba\x2b\xce\x7f\x39\x13\xdb\x32\x92\x1d\x68\x9f\xbe\xe4\x7a\x85\x42\x37\xf1\xe9\x93\x3e\x6e\xe9\x03\x6a\x49\x6a\x20\x5d\x38\xce\x3c\xfa\x5d\x34\x7d\x71\x4f\x52\xe7\xfd\xc5\xe6\x24\x97\xe3\xea\xf6\x54\xd7\x40\xef\x92\xe1\x0a\x3a\xaf\xdc\x39\x38\xa2\xcc\x0b\xb2\x9d\x13\x11\xb7\x34\x4b\x43\xb5\x7b\xba\xf5\x39\x4a\xb9\x14\xae\xbc\x61\x0d\x34\x75\x1d\x98\x1c\x51\xe5\x82\x40\x31\x0f\xeb\x50\x1f\xa5\xde\xd2\xe6\x8f\xab\x57\xf0\x0a\x7d\x0a\xd6\x38\x22\xd0\x3e\x16\x78\xfb\xb4\x8e\xe2\x74\x64\x58\x70\xfe\x8c\xbc\xaa\x8c\xf6\x68\x7a\x9a\xce\xa7\x0a\x93\xa1\x11\x6f\xe7\xed\x0f\xff\x57\xf8\xa3\xfd\x2a\x8f\x55\xe1\x66\x8e\xe8\x80\x2e\x4f\xbe\xa1\xbb\xef\x00\x00\x00\xff\xff\xb1\x93\x23\x07\x17\x01\x00\x00")

func managedVeleroOperator111VeleroRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator111VeleroRoleYaml,
		"managed-velero-operator/111-velero.Role.yaml",
	)
}

func managedVeleroOperator111VeleroRoleYaml() (*asset, error) {
	bytes, err := managedVeleroOperator111VeleroRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/111-velero.Role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator112VeleroRoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x31\x6e\xec\x30\x0c\x44\x7b\x9d\x82\x70\x6f\x2f\x7e\xb7\xd0\x05\x7e\x9f\x22\x3d\x2d\x4f\xd6\x84\x65\x51\x20\x25\x07\xc8\xe9\x03\x7b\x8d\x54\x7c\x33\x20\xde\x70\x95\x4f\x98\x8b\x96\x48\x36\x73\x9a\xb8\xb7\x55\x4d\x7e\xb8\x89\x96\x69\x7b\xfa\x24\xfa\x38\xfe\x85\x4d\xca\x12\xe9\x43\x33\xc2\x8e\xc6\x0b\x37\x8e\x81\x28\xf3\x8c\xec\x27\x11\x71\x95\x49\x2b\x8a\xaf\xf2\xd5\xa6\xa4\xfb\x63\xe7\xc2\x2f\x2c\x91\x86\x66\x1d\x43\x20\x2a\xbc\x23\x52\x35\xdd\xd1\x56\x74\x1f\xb7\xa7\xdf\xb5\x57\x4e\x88\xf4\x67\x18\x0f\x64\x98\x06\xeb\x19\x1e\xc3\x78\xfa\xff\x9b\xf6\x7a\xcd\x8d\x34\x9c\x3e\x83\x6b\xb7\x84\xbb\x73\xd8\x21\x09\x7e\x05\x94\xa5\xaa\x94\xf6\x4e\x55\x97\x13\x0e\xd8\x7c\x3f\xbf\xd0\xae\x9b\xc5\xdf\xf0\xcd\x2d\xad\xe1\x37\x00\x00\xff\xff\xd5\xb9\x29\x6b\x13\x01\x00\x00")

func managedVeleroOperator112VeleroRoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator112VeleroRoleYaml,
		"managed-velero-operator/112-velero.Role.yaml",
	)
}

func managedVeleroOperator112VeleroRoleYaml() (*asset, error) {
	bytes, err := managedVeleroOperator112VeleroRoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/112-velero.Role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator115VeleroClusterrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xbd\x6e\xeb\x30\x0c\x85\x77\x3d\x05\x91\xdd\x0a\xee\x76\xa1\xad\xed\xd0\x3d\x05\xba\xd3\xf2\x49\xc2\x46\x16\x05\x8a\xf2\xd0\xa7\x2f\x82\x1a\x5d\x0a\x34\x1b\xc1\x9f\x8f\xdf\xe1\x26\xef\xb0\x2e\x5a\x13\xd9\xcc\x39\xf2\xf0\xab\x9a\x7c\xb2\x8b\xd6\x78\xfb\xdf\xa3\xe8\x71\xfb\x17\x6e\x52\x97\x44\x2f\x65\x74\x87\x9d\xb4\xe0\x59\xea\x22\xf5\x12\x56\x38\x2f\xec\x9c\x02\x51\xe1\x19\xa5\xdf\x2b\x22\x6e\x12\xb5\xa1\xf6\xab\x9c\x3d\x66\x5d\x8f\x2b\x57\xbe\x60\x49\x74\x70\x1b\x38\x04\xa2\xca\x2b\x12\xed\xfd\x69\x43\x81\xe9\xa4\x0d\xc6\xae\x16\x4c\x0b\x4e\x38\xdf\x71\xdc\xe4\xd5\x74\xb4\x3f\x24\x03\xd1\x2f\xc7\x87\x2f\xfa\x98\x3f\x90\xbd\xa7\x30\xed\xd7\x6f\xb0\x4d\x32\x9e\x72\xd6\x51\xfd\x21\xe0\x7b\xde\x1b\x67\x24\xfa\x89\xbb\xaf\x85\xaf\x00\x00\x00\xff\xff\xd7\x68\x9c\x44\x5e\x01\x00\x00")

func managedVeleroOperator115VeleroClusterrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator115VeleroClusterrolebindingYaml,
		"managed-velero-operator/115-velero.ClusterRoleBinding.yaml",
	)
}

func managedVeleroOperator115VeleroClusterrolebindingYaml() (*asset, error) {
	bytes, err := managedVeleroOperator115VeleroClusterrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/115-velero.ClusterRoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator115VeleroRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8e\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\xa5\x62\x43\xd9\x60\x61\x2f\x12\xbb\x2f\xf7\xda\x9a\xe6\xe2\xc8\x71\x6e\xe0\xd7\xa3\x4a\x27\xd8\x60\xe8\x66\xd9\x7e\xef\xfb\xb8\xc9\x07\xac\x8b\xd6\x44\x36\x73\x8e\x3c\xfc\xaa\x26\x5f\xec\xa2\x35\xde\x9e\x7b\x14\x3d\x6e\x4f\xe1\x26\x75\x49\x74\xd2\x82\x57\xa9\x8b\xd4\x4b\x58\xe1\xbc\xb0\x73\x0a\x44\x85\x67\x94\x7e\x9f\x88\xb8\x49\xd4\x86\xda\xaf\x72\xf6\x98\x75\x3d\xae\x5c\xf9\x82\x25\xd1\xc1\x6d\xe0\x10\x88\x2a\xaf\x48\xb4\xef\xa7\x0d\x05\xa6\x93\x36\x18\xbb\xda\x7e\xef\x8d\x33\x12\xfd\x54\xed\x6f\xc1\xb4\xe0\x84\xf3\x1d\xc6\x4d\xde\x4c\x47\xfb\xc3\x3d\x10\xfd\xaa\xff\x4b\xee\x63\xfe\x44\xf6\x9e\xc2\xb4\xc7\xde\x61\x9b\x64\xbc\xe4\xac\xa3\xfa\x83\xea\xdf\x01\x00\x00\xff\xff\xa4\x49\x1f\xe7\x6e\x01\x00\x00")

func managedVeleroOperator115VeleroRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator115VeleroRolebindingYaml,
		"managed-velero-operator/115-velero.RoleBinding.yaml",
	)
}

func managedVeleroOperator115VeleroRolebindingYaml() (*asset, error) {
	bytes, err := managedVeleroOperator115VeleroRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/115-velero.RoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator116VeleroRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x31\x4f\x03\x31\x0c\x46\xf7\xfc\x0a\xab\x7b\xae\xea\x86\xb2\xc1\xc2\x5e\x24\x76\x5f\xee\x6b\x6b\x9a\x8b\x23\x27\x39\x04\xbf\x1e\x55\x3a\xb5\x30\xb4\xec\xcf\xcf\xfa\xde\x59\xf2\x14\x68\xaf\x09\x2f\x92\x27\xc9\x47\xc7\x45\xde\x61\x55\x34\x07\xb2\x91\xe3\xc0\xbd\x9d\xd4\xe4\x9b\x9b\x68\x1e\xce\x4f\x75\x10\xdd\x2e\x3b\x37\xa3\xf1\xc4\x8d\x83\x23\xca\x3c\x23\xd0\xcc\x99\x8f\x98\xfc\x82\x04\x53\xaf\x05\xc6\x4d\xcd\xc7\xd4\x6b\x83\xf9\xa8\xf9\x20\x47\xbf\xec\xbc\x81\x27\xd8\x7a\x58\x0b\x47\x04\x3a\xf7\x11\xbe\x7e\xd5\x86\xd9\x11\x25\x1e\x91\xea\xc5\x4d\xa4\x9f\x19\x76\x57\x7f\x43\x86\x5f\xb6\x47\x30\x17\x19\xb4\x20\xd7\x93\x1c\xda\x10\x75\xde\xae\x74\xa0\x4d\xb3\x8e\x8d\x33\x4d\xd8\xe3\x70\x79\xcf\x45\x5e\x4d\x7b\x79\x50\xc3\x11\xdd\x3a\x5e\x6b\xdc\x5d\x5d\xfb\xf8\x81\xd8\x6a\x70\x7e\xbd\x7b\x83\x2d\x12\xf1\x1c\xa3\xf6\xdc\xfe\xeb\xf9\x37\xdb\x75\xc8\x8a\xb9\x9f\x00\x00\x00\xff\xff\xed\x61\xdd\x06\xd3\x01\x00\x00")

func managedVeleroOperator116VeleroRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator116VeleroRolebindingYaml,
		"managed-velero-operator/116-velero.RoleBinding.yaml",
	)
}

func managedVeleroOperator116VeleroRolebindingYaml() (*asset, error) {
	bytes, err := managedVeleroOperator116VeleroRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/116-velero.RoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator117VeleroRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6b\x03\x31\x0c\x85\x77\xff\x0a\x91\xfd\x1c\xba\x05\x6f\xed\xd2\x3d\x85\xee\x3a\x9f\x92\x53\xcf\x96\x8c\x2c\xdf\xd0\x5f\x5f\x0e\x42\x3b\xb5\xd0\x4d\x88\xc7\xfb\x3e\x1e\x36\x7e\x27\xeb\xac\x92\xc0\x66\xcc\x11\x87\xaf\x6a\xfc\x89\xce\x2a\x71\xbb\xf4\xc8\x7a\xde\x9f\xc2\xc6\xb2\x24\xb8\x6a\xa1\x17\x96\x85\xe5\x1e\x2a\x39\x2e\xe8\x98\x02\x40\xc1\x99\x4a\x3f\x2e\x00\x6c\x1c\xb5\x91\xf4\x95\x6f\x1e\xb3\xd6\x73\x45\xc1\x3b\x2d\x09\x4e\x6e\x83\x4e\x01\x40\xb0\x52\x82\x66\x5a\xc9\x57\x1a\x7d\xda\x2e\xfd\xf1\xee\x0d\x33\x25\xf8\x6e\x98\x76\x2a\x64\x1a\x4c\x0b\x5d\xe9\x76\x30\xb0\xf1\xab\xe9\x68\x7f\x28\x07\x80\x1f\xe3\xdf\x80\x7d\xcc\x1f\x94\xbd\xa7\x30\x3d\xd2\x6f\x64\x3b\x67\x7a\xce\x59\x87\xf8\x3f\x45\xab\x0a\xbb\xda\xb1\xcd\x57\x00\x00\x00\xff\xff\x86\x93\xf0\x39\x57\x01\x00\x00")

func managedVeleroOperator117VeleroRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator117VeleroRolebindingYaml,
		"managed-velero-operator/117-velero.RoleBinding.yaml",
	)
}

func managedVeleroOperator117VeleroRolebindingYaml() (*asset, error) {
	bytes, err := managedVeleroOperator117VeleroRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/117-velero.RoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator120VeleroServiceaccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8b\xb1\x0a\x02\x31\x10\x05\xfb\x7c\xc5\xe3\x7a\x4f\x6c\xb7\xf3\x1b\x04\xfb\x35\xf7\xd4\xc5\x64\x13\x92\x5c\xbe\x5f\x84\xc3\x6e\x86\x61\xb4\xda\x9d\xad\x5b\x71\xc1\xbc\x84\x8f\xf9\x26\xb8\xb1\x4d\x8b\xbc\xc6\x58\x76\x1f\x21\x73\xe8\xa6\x43\x25\x00\x49\x1f\x4c\xfd\x47\x80\x56\x5b\x4b\xa5\xf7\xb7\x3d\xc7\x1a\x4b\x3e\x67\x75\x7d\x71\x13\x2c\xa3\xed\x5c\x02\xe0\x9a\x29\x98\x4c\x6c\xe5\xd0\x5e\x35\x52\xf0\x3f\x4f\x47\xfd\x06\x00\x00\xff\xff\xb2\x61\xc7\xe1\x8b\x00\x00\x00")

func managedVeleroOperator120VeleroServiceaccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator120VeleroServiceaccountYaml,
		"managed-velero-operator/120-velero.ServiceAccount.yaml",
	)
}

func managedVeleroOperator120VeleroServiceaccountYaml() (*asset, error) {
	bytes, err := managedVeleroOperator120VeleroServiceaccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/120-velero.ServiceAccount.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator125VeleroRolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xbd\x4e\x43\x31\x0c\x85\xf7\x3c\x85\xd5\xfd\xa6\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\x89\xdb\x9a\x26\x76\xe4\x38\x77\xe0\xe9\x51\xd5\xaa\x03\x48\x6c\xfe\xd1\x77\xf4\x1d\xec\xfc\x49\x36\x58\x25\x81\xad\x98\x23\x4e\x3f\xab\xf1\x37\x3a\xab\xc4\xcb\xf3\x88\xac\xfb\xed\x29\x5c\x58\x4a\x82\xb7\x3a\x87\x93\x1d\xb4\xd2\x2b\x4b\x61\x39\x85\x46\x8e\x05\x1d\x53\x00\xa8\xb8\x52\x1d\xd7\x09\x00\x3b\x47\xed\x24\xe3\xcc\x47\x8f\x59\xdb\xbe\xa1\xe0\x89\x4a\x82\x9d\xdb\xa4\x5d\x00\x10\x6c\x94\x60\xa3\x4a\xa6\xc1\xb4\xd2\x81\x8e\x57\x1a\x3b\xbf\x9b\xce\xfe\x8f\x53\x00\xf8\xa3\xf4\x48\xcc\xb7\xdb\x82\xa5\xb1\x84\x31\xd7\x2f\xca\x3e\x52\x58\xee\xcc\x07\xd9\xc6\x99\x5e\x72\xd6\x29\xfe\x5b\xe4\xb6\x8e\x8e\x99\x12\x3c\x2a\x2c\xf7\xef\x4f\x00\x00\x00\xff\xff\xb2\xf3\x6c\x50\x32\x01\x00\x00")

func managedVeleroOperator125VeleroRolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator125VeleroRolebindingYaml,
		"managed-velero-operator/125-velero.RoleBinding.yaml",
	)
}

func managedVeleroOperator125VeleroRolebindingYaml() (*asset, error) {
	bytes, err := managedVeleroOperator125VeleroRolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/125-velero.RoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator130VeleroCredentialrequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4f\x6b\xdc\x30\x10\xc5\xef\xfe\x14\x43\x2e\x81\x82\x13\x4a\x6f\xbe\x6d\x96\xdc\x72\x58\x12\x68\xcf\x93\xf1\x73\x3a\xac\x2c\xa9\xa3\xd1\x96\xf4\xd3\x17\x79\x4d\x6a\xda\xb0\x34\xc7\xf7\xf4\xd3\x9b\x7f\x9c\xf5\x2b\xac\x68\x8a\x03\x49\x48\x75\x14\xc3\x88\xe8\xca\xe1\x26\x65\xc4\xf2\x5d\x27\xbf\xd1\x74\x7b\xfa\xdc\x1d\x35\x8e\x03\xed\xdf\x80\xf2\x88\x1f\x15\xc5\xbb\x19\xce\x23\x3b\x0f\x1d\xd1\xa4\x91\x83\xfe\x82\x95\xa6\xfa\xcb\xa1\x23\xb2\xa5\x93\xb6\xf2\x1d\x51\xe0\x67\x84\xe5\x1b\x11\x67\xdd\xa0\x92\xe6\xdb\x99\x23\xbf\x60\x1c\xe8\xca\xad\xe2\xaa\x23\x8a\x3c\x63\xa0\xd5\xef\x4f\x08\xb0\xd4\xa7\x0c\x63\x4f\xd6\x2b\xcf\xfd\x9f\xba\x65\xe5\x4b\x66\xc1\x40\x6f\xd1\xeb\xb7\xae\x64\x48\xab\xbc\xf4\x33\xc2\x9e\x56\xbd\x74\xf2\xdf\x1b\x6a\xfc\x79\x4b\xbb\x6f\x4f\x87\x4d\xd4\xf2\x52\x9c\x1d\x33\xa2\xdf\x47\x37\xc5\x3a\x69\x4f\x2c\xde\xd2\x17\xd5\x74\xf9\x32\xec\x0d\xec\xb8\xab\x72\x84\x6f\xfd\x07\x2d\xfe\xaf\x7b\xa8\xab\xb9\x93\xf0\xae\x7f\xa8\xcf\x41\x65\x27\x82\x52\xee\x42\x92\xe3\x5f\xd4\x7d\x14\x7b\xcd\xad\x8b\x7d\x8a\x93\xbe\x54\x63\x3f\xdf\x64\x4b\x3d\xe8\x04\x79\x95\x80\xf7\x20\x4c\x13\xc4\x07\xda\x85\x90\x7e\xae\x9e\xa1\xa4\x6a\x6d\xdf\xd7\x9f\xae\x3b\xa2\x02\x31\xf8\x23\xa6\xf3\xac\x1f\xbd\xdf\xe5\x0b\xfe\x0e\x00\x00\xff\xff\x71\x7c\xaf\x74\xca\x02\x00\x00")

func managedVeleroOperator130VeleroCredentialrequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator130VeleroCredentialrequestYaml,
		"managed-velero-operator/130-velero.CredentialRequest.yaml",
	)
}

func managedVeleroOperator130VeleroCredentialrequestYaml() (*asset, error) {
	bytes, err := managedVeleroOperator130VeleroCredentialrequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/130-velero.CredentialRequest.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _managedVeleroOperator135VeleroDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\x4d\x6b\xfa\x40\x10\xc6\xef\xf9\x14\x83\x17\x21\x10\xc5\xeb\xde\x04\xf3\xff\x5f\x5a\x15\x29\xbd\x96\xe9\xe6\x51\x97\xee\x1b\xbb\xeb\x42\xbf\x7d\x59\x4d\xd3\xd8\x16\xa5\xcf\x29\xcc\xcb\x6f\x9e\xcc\x2c\x7b\xf5\x8c\x10\x95\xb3\x82\xd8\xfb\x38\xcf\x8b\xea\x4d\xd9\x4e\xd0\x0a\x5e\xbb\x77\x03\x9b\x2a\x83\xc4\x1d\x27\x16\x15\x91\xe6\x57\xe8\x58\xbe\x88\xd8\xab\x99\xf3\xb0\xf1\xa8\xf6\x69\x26\x9d\x99\x1b\xb6\x7c\x40\x27\x68\x92\xc2\x09\x93\x8a\xc8\xb2\x81\xa0\x3e\xde\x64\x68\x04\xd7\x38\x8f\xc0\xc9\x85\x3e\x1f\x3d\x4b\x08\x1a\x50\x7d\x59\x15\x3d\x64\x99\x14\xe0\xb5\x92\x1c\x05\x2d\x2a\xa2\x08\x0d\x99\x5c\xb8\x78\x30\x9c\xe4\xf1\x61\x64\xea\xfe\xc8\x04\xe3\x35\x27\xf4\x80\xd1\xcf\x15\xe9\x2b\xd6\x7d\x1a\xd1\xa7\xcd\x22\xe9\x6c\x62\x65\x11\x06\x42\x43\xd2\x19\xc3\xb6\xfb\x42\x36\x37\x71\x45\xb0\x79\x5c\x7e\xf1\xb0\xdd\xac\x5e\xd6\xcb\xc7\x76\x48\x10\x65\xd6\x27\xfc\x0b\xce\x88\x51\x90\x68\xaf\xa0\xbb\x1d\xf6\xd7\xd1\xf3\xc1\x86\x6b\xe7\xc5\xb7\xe4\xb9\x69\xcb\xe9\x28\x86\x9d\xcc\xca\xe0\x1f\x3e\x36\xdb\x76\xb7\x7c\xda\xec\x7e\x35\x73\x7b\x55\x45\xca\xf0\x01\x82\xa6\x75\x5d\xd3\xff\x76\x5d\x58\xed\x8a\xea\xba\x9e\xfe\x61\xe7\xe5\x19\x84\xac\x24\x96\x52\xba\x93\x4d\xeb\x9b\x1d\x1f\x01\x00\x00\xff\xff\xaa\x02\xb6\x26\xe6\x02\x00\x00")

func managedVeleroOperator135VeleroDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_managedVeleroOperator135VeleroDeploymentYaml,
		"managed-velero-operator/135-velero.Deployment.yaml",
	)
}

func managedVeleroOperator135VeleroDeploymentYaml() (*asset, error) {
	bytes, err := managedVeleroOperator135VeleroDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "managed-velero-operator/135-velero.Deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\xb1\xae\xc2\x30\x0c\x05\xd0\x3d\x5f\x71\x95\xbd\xad\xde\x9a\x8f\x78\x23\xfb\xa5\x31\x60\xd1\xd8\xa1\x71\xf9\x7e\x84\x84\x60\x3f\x87\x5d\x4f\xb2\x0f\x75\x2b\x78\xfe\xa5\xbb\x5a\x2d\xf8\x67\x93\xd1\xb9\x4a\x6a\x12\xac\x0c\x96\x04\x18\x9b\x14\x78\x17\x1b\x37\xbd\xc4\xc4\xc7\xc1\x04\x6c\x3c\xcb\x36\xde\x00\x60\xd7\xf9\x0b\xe6\xd5\xdb\xd2\x68\xbc\x4a\x2d\xc8\xb1\x1f\x92\x13\x40\x33\x0f\x86\xba\x7d\xd2\x2f\xa8\x2f\xe6\x55\xa6\x21\x9b\xac\xe1\x7b\x41\xce\xe9\x15\x00\x00\xff\xff\xaf\xf3\xcc\xe8\xa2\x00\x00\x00")

func osdAquasecOperator00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator00NamespaceYaml,
		"osd-aquasec-operator/00-namespace.yaml",
	)
}

func osdAquasecOperator00NamespaceYaml() (*asset, error) {
	bytes, err := osdAquasecOperator00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/00-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator01OperatorgroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x31\x4f\xc3\x30\x10\x85\xf7\xfc\x8a\x53\xf7\x04\x75\xcd\x56\x01\xaa\x58\x00\xa9\x88\xfd\xd5\xb9\xb6\x16\xf1\xd9\x3d\x5f\x82\x90\xf8\xf1\xc8\x21\x45\x80\x18\x88\x17\xcb\x7e\xef\xd3\x3b\xdd\x43\xf2\xcf\xac\xd9\x47\x69\x29\x26\x56\x58\xd4\xdc\xb8\xa8\x1c\xcb\x15\xae\xc6\x75\xf5\xe2\xa5\x6b\xe9\x61\x56\xb7\x1a\x87\x54\x05\x36\x74\x30\xb4\x15\x11\x44\xa2\xc1\x7c\x94\x5c\x9e\x44\xb1\x0f\x4d\xd2\x38\xfa\x8e\xbb\xcd\xe3\x5d\x6e\xe9\xbd\x9e\x04\xa2\x9a\x36\xe7\x01\xd7\x39\x35\xe3\x1a\x7d\x3a\x61\xdd\x5c\x62\x1b\x9c\x07\x64\x76\x25\xf6\x87\xfb\x06\x86\x3d\x32\x2f\x40\x6e\xe5\x10\xd5\xb1\x2e\x40\xb6\x30\x7e\xc5\xdb\x02\x62\xe7\x20\xb2\x28\x63\xc7\x3a\xfe\x03\x10\x04\x9e\xea\x90\x7c\xf2\x07\xab\x8b\x3a\x7f\xe7\x04\xf7\x97\xd6\x63\xcf\xfd\xbc\x7e\x24\xdf\x7c\x19\xa6\x12\x03\x04\x47\xee\x5a\x5a\x99\x0e\xbc\xaa\x72\x62\x57\xbc\x99\x75\xf4\x8e\x37\xce\xc5\x41\xec\x93\xfe\xde\x6c\x39\x4e\x79\xea\xf6\xc9\x07\xce\x86\x90\x5a\x92\xa1\xef\x2b\x22\x83\x1e\xd9\xee\x2f\x53\x4d\xe9\xf5\xef\xd1\x3e\x02\x00\x00\xff\xff\x49\x5c\x27\xd9\x61\x02\x00\x00")

func osdAquasecOperator01OperatorgroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator01OperatorgroupYaml,
		"osd-aquasec-operator/01-operatorgroup.yaml",
	)
}

func osdAquasecOperator01OperatorgroupYaml() (*asset, error) {
	bytes, err := osdAquasecOperator01OperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/01-operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator01RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x19\xc9\x92\xea\x38\xec\xce\x57\xa4\xb8\xbc\xaa\x57\x05\xd4\xdc\xa6\xf8\x81\xb9\xcd\x61\x0e\x73\x57\x6c\x91\x56\xe3\x58\x7e\x96\x0d\x8f\xf9\xfa\x29\x67\x21\x81\x84\x4e\x9a\xa5\xfb\x94\x58\x52\xac\xd5\x5a\x1c\x70\xf4\x2f\x7a\x21\xb6\xdb\xcc\xe7\xa0\xd6\x10\xc3\x1b\x7b\xfa\x0f\x02\xb1\x5d\xef\xff\x94\x35\xf1\xe6\xf0\xc7\x62\x4f\x56\x6f\xb3\x7f\xd8\xe0\xa2\xc4\x00\x1a\x02\x6c\x17\x59\x66\xa1\xc4\x6d\xa6\x51\x93\x82\x80\x7a\x05\xba\x24\x2b\x2b\x76\x68\xe5\x8d\x76\x61\x05\xbf\x22\x34\x74\xe2\x40\xe1\x36\x1b\xe0\x0c\xe4\x68\x24\xed\x96\x65\xe0\x68\x7d\x26\x58\x2b\x2e\x37\x25\x58\x28\x50\x6f\xb3\x65\xf0\x11\x97\x0b\x1f\x0d\xca\x76\xb1\x4a\xa4\x7f\x79\x8e\xae\xfa\x72\x95\x2d\x97\x8b\x2c\xf3\x28\x1c\xbd\xc2\x06\x76\xe6\x2a\xd5\xd2\xb1\xee\x5e\x36\x86\x8b\x45\x96\x1d\xd0\xe7\x0d\xb5\x21\x09\xd5\x4b\x81\xf5\xf3\x08\x41\xbd\x0d\x39\xb1\x43\x0f\x81\xbd\xac\x15\x7b\xe4\xf4\x28\x87\xbc\x25\xe6\xa2\x3c\xb9\x64\xc7\x9a\xab\x32\x51\x02\x7a\x41\x7f\x20\x85\x87\xda\xec\x72\x29\xc3\xf2\xe7\x72\x9e\x6a\x82\xca\x63\x90\x1e\xe2\xef\xa4\x6c\x8d\x4c\x86\x5d\x25\x17\xe5\x20\xb8\x72\x20\x72\x64\xaf\x3b\x94\xc7\x82\x24\xf8\xd3\x1c\xde\xad\xb6\xeb\xf4\xa5\xa0\x4a\xda\x8e\xc8\x93\xb0\x4a\x9c\x9c\x17\x2d\xfb\x0e\x82\x76\xc7\x5e\xa1\xef\x20\x05\x04\x3c\xc2\xa9\x03\x88\x02\x6b\xfb\x14\xc9\x58\xf5\xfa\x31\x23\xf5\xbe\x56\x1e\x21\xe0\xdc\x0d\x2a\x5f\x81\x52\x1c\xed\x87\xd6\x16\xb8\xe4\x12\x9d\xbe\xcd\x65\x95\x39\xcf\xef\xa8\x42\x2f\xd6\x89\x87\xec\x1b\xaa\x2b\x05\x52\x78\xce\x92\x5e\xb1\xdd\x51\x51\x42\xe3\x15\xb4\xda\x31\xd5\x6a\xac\x32\x97\xe2\x4f\x02\xda\x70\x60\x13\x4b\x54\x06\xa8\xac\x51\x1e\x9d\x49\xe7\x99\xd8\x2a\xb6\xc1\xb3\x31\xad\x4f\xc6\x51\x1b\x51\x60\xb0\x6f\x31\xb9\x58\x6c\x9c\xe7\xdf\xa7\x51\x37\xa4\x57\x8d\x06\x2f\x5e\x55\xda\x56\x25\x26\xb5\xa8\xd5\x39\xfc\xc8\xaa\xe0\x9c\x0c\xf5\xd7\x80\x25\x5b\xc1\x46\x63\x8d\xce\xf0\xa9\x44\x3b\x5c\x6f\x92\x22\x39\xa8\xfd\x00\xd1\x69\xd6\xa8\x7e\xde\xae\xb7\xee\xeb\x1f\x20\xe0\x2e\x9a\x33\x59\x1f\x70\xa6\x7b\x99\x1d\x62\xe0\xc4\x83\x6c\x31\x34\x47\x95\xd7\xd9\x06\x30\x8e\x75\x4b\x39\x38\x5c\x4f\x95\x27\x6f\x28\xae\x03\xd3\xb3\x7d\xe7\xbc\x36\x50\xf3\xf2\x2a\x11\xf0\x77\x40\xdb\x66\xda\x97\x06\x08\xd9\xc2\xa3\xb4\x19\xcf\x62\x38\xb2\xdf\x3b\x36\xa4\x08\x07\x21\xf3\x41\x08\x4d\x9c\xb1\x57\x19\xaa\x92\xf4\x34\x92\x84\x58\x6b\x12\x1f\xab\x4a\x96\x47\x5d\xdc\xca\xa8\xcf\x11\xa3\xb1\x1b\xd9\xa2\xe9\x3e\x46\xca\xfa\xc0\xb4\xaf\x12\xa6\xc4\xe0\x49\xc9\x4d\x49\x9a\x8e\xe2\x2a\x39\x5f\x34\x13\x37\x9a\x88\x3c\x92\xd1\x13\xe9\xbf\xa2\x91\x8d\xc6\x00\x64\x64\x5e\x7d\x99\xbf\xef\x8c\xa2\x32\x7b\xb3\xba\xd2\xc8\x00\xb0\x39\x62\xfe\xc6\xbc\x97\x9b\x7c\x3f\xe1\xae\x81\x69\x07\xfe\x7b\x8e\xbd\x07\x8d\xe1\xd3\x7d\xda\x5a\x87\xac\x04\xb0\x81\x5a\xd9\x6f\x21\x73\xb2\x50\x75\x6b\x67\x19\x95\x61\x3b\x9e\x0c\xee\x92\xea\x1d\xed\x9e\xae\x7b\x51\xd4\x54\xab\x7b\x20\x3c\x8e\xd7\xdc\x89\x6d\xbb\x3c\xd9\x0f\x90\x01\xf4\xc1\xd4\xf6\x50\x5c\xdc\xa1\x45\x5b\x0a\x6e\x69\x73\xed\xd5\x21\x45\xaf\x98\xcc\x70\xe0\x3d\x86\x6e\x82\x78\xd4\xd8\x01\x42\xbc\x33\x6b\x51\x09\x05\x4e\xc8\x52\xd1\x48\xf0\x08\xe5\x63\xcc\x7e\x45\x0e\x30\xc1\x0c\x9c\x33\x84\xba\x19\xad\x5a\x64\xf5\xe5\x9d\x5c\x3d\xc7\x30\xa5\x62\x45\xf3\x4d\x89\x6c\xbe\x7c\x1b\x15\x25\x70\xb9\x7a\xe3\x8a\xcd\x8c\x48\xfb\xc4\xde\x8f\x38\x36\x60\xe9\x0c\x4c\x72\x72\x9e\x55\xea\xa7\x74\x4b\x2f\x17\x5f\xf7\x53\x4a\x0b\xab\x8f\x9e\xba\xa2\xfc\x26\x4f\x5d\x74\x9e\x5f\xda\xd8\x7c\x4d\xa5\x34\x5c\x7c\x93\x88\x63\xc3\xee\xc5\xd9\x8f\x92\x72\xd0\x7d\xd1\xf9\xcc\x49\xfa\x7c\xe3\xf4\xa4\x91\xfa\x49\xea\xe4\x64\x35\xd9\xe6\xec\xe0\xe1\x3c\xf0\x18\x2a\x29\x78\xb0\x45\x3b\xc3\x9c\xef\xcf\xba\xf3\x7e\x71\x7b\xd6\x2c\x7a\xc8\x5b\xda\xf4\x29\xae\x92\xf4\x35\xe8\xa1\xdc\x32\x79\x0d\x78\xc7\x9e\xe3\xb7\x0b\x9d\x7a\x1e\x0f\xd4\x9d\xf3\x4f\x0c\x95\x2f\xbf\x5c\x98\xad\xe1\xe3\xf7\x06\xb3\x9b\xe4\xbb\xae\x04\xe6\xee\xfe\xa4\x69\xff\x3b\x87\xfa\xb9\xaa\xde\x3f\xaf\xcf\xe5\xf0\x68\xc5\x7a\xd5\xdc\x34\x00\x4c\x8f\x99\xcf\x14\x65\x74\x58\xfa\x8e\x19\xe9\xe9\xf6\x1d\x56\xf4\xd9\xc1\x08\x6a\x9f\x4a\xee\x7a\xde\xcf\x91\x86\xbc\x04\x4b\x3b\x94\xeb\xf8\xfc\xf1\xf3\xc7\x68\x8a\xea\xfd\x98\xfa\x58\x19\xc3\x0a\x4c\x0b\x03\x95\xba\xc8\x94\xa3\xf1\x28\x1d\x5a\x62\xfe\x8e\x2a\x0c\xb1\x0d\xa2\xfa\xcf\xd4\xc1\xe7\xcc\x69\x23\xbf\xce\x6e\xc8\x76\x83\xf9\xa7\x99\x4c\xb4\xea\x37\x2d\x70\x3f\x7f\x41\x15\x3d\x85\xd3\x54\xef\xce\xba\xa5\xac\xf3\x54\x9f\xfb\x00\x29\x68\x76\xad\xd9\x3f\xa4\xbb\xa6\x79\xfd\x4c\xd3\x34\xa3\xff\x07\x00\x00\xff\xff\xe8\x8e\xb4\x88\x28\x1d\x00\x00")

func osdAquasecOperator01RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator01RoleYaml,
		"osd-aquasec-operator/01-role.yaml",
	)
}

func osdAquasecOperator01RoleYaml() (*asset, error) {
	bytes, err := osdAquasecOperator01RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/01-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator02RolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\x31\x4f\x43\x31\x0c\x04\xe0\x3d\xbf\xc2\xea\xfe\x52\xb1\xa1\x8c\x2c\xec\x1d\xd8\xef\x25\x6e\x6b\xfa\x62\x87\xc4\x61\xe0\xd7\xa3\x22\x04\x03\x02\xd1\xd9\x9f\x7c\x77\x68\xf2\xc4\x7d\x88\x69\xa2\xbe\x22\x47\x4c\x3f\x5b\x97\x37\xb8\x98\xc6\xcb\xfd\x88\x62\xfb\xd7\xbb\x70\x11\x2d\x89\x0e\xb6\xf1\x83\x68\x11\x3d\x85\xca\x8e\x02\x47\x0a\x44\x8a\xca\x89\x0a\x17\xc9\x70\x2e\x0b\x4a\x15\x1d\x8b\x35\xd6\x71\x96\xa3\x2f\x78\x99\xf8\x74\xa3\x21\x73\xa2\x1f\xb7\x0d\x2b\x6f\xe3\xfa\x8d\x08\x4d\xe2\x17\x88\xd9\xea\xbe\x42\x71\xe2\x92\x68\xe7\x7d\xf2\x2e\x74\xdb\xf8\xc0\xc7\x2b\x47\x93\xc7\x6e\xb3\xfd\xb1\x20\x10\x7d\x0f\xf8\x77\xdf\x31\xd7\x67\xce\x3e\x52\x58\x6e\x0a\xf9\x80\xbf\xa6\xbc\x07\x00\x00\xff\xff\x55\x24\xeb\x09\x73\x01\x00\x00")

func osdAquasecOperator02RolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator02RolebindingYaml,
		"osd-aquasec-operator/02-rolebinding.yaml",
	)
}

func osdAquasecOperator02RolebindingYaml() (*asset, error) {
	bytes, err := osdAquasecOperator02RolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/02-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator10ClusterroleImageScannerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbf\x6a\x33\x31\x10\xc4\x7b\x3d\xc5\xe2\xde\x67\xbe\xee\xe3\xba\x90\x22\x65\x20\x81\xf4\x6b\xdd\xf8\x4e\x58\x5a\x1d\xbb\x2b\x1b\xe7\xe9\x83\x6c\xe7\x1f\xa4\x9b\x91\xe6\x37\x1a\xf1\x9a\xde\xa0\x96\xaa\x8c\xa4\x7b\x8e\x03\x37\x5f\xaa\xa6\x77\xf6\x54\x65\x38\xfe\xb7\x21\xd5\xdd\xe9\x5f\x38\x26\x99\x46\x7a\xcc\xcd\x1c\xfa\x52\x33\x42\x81\xf3\xc4\xce\x63\x20\x62\x91\xea\x57\xc4\xba\x25\xaa\x2b\xc4\x96\x74\xf0\x8e\x4f\xb0\xa8\x69\xf5\xeb\x2b\x0f\xd4\x0c\x4a\xe7\xa5\x52\x64\x21\x03\x6b\x5c\x88\x65\x22\xeb\x3e\x15\x9e\x61\x74\xd0\x5a\x88\x85\x9e\x57\xc8\x6b\xef\xa1\x24\x8e\x59\xd9\x31\x91\x62\x4e\xe6\x7a\x19\x02\x91\x70\xc1\x78\xa3\xb6\xbd\x40\xa0\x81\x28\xf3\x1e\xf9\x3e\x85\xd7\x34\x7c\xcf\x89\xb5\xec\x0a\x0b\xcf\x98\x46\xda\xb8\x36\x6c\x82\xb6\x0c\x1b\xc3\xb6\x47\x9f\xb4\xb6\xf5\x4e\x6e\x6f\xbd\xc3\xcf\xcf\x04\x22\x85\xd5\xa6\x11\xbf\x53\xe6\x0a\x2e\xf6\xc7\xd1\x2e\xf3\x05\xda\x6f\x4e\xd0\xfd\x17\x35\xc3\xef\x2a\x27\xfb\x94\x67\xf6\xb8\x84\x8f\x00\x00\x00\xff\xff\xbb\xad\xee\x63\x96\x01\x00\x00")

func osdAquasecOperator10ClusterroleImageScannerYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator10ClusterroleImageScannerYaml,
		"osd-aquasec-operator/10-clusterrole-image-scanner.yaml",
	)
}

func osdAquasecOperator10ClusterroleImageScannerYaml() (*asset, error) {
	bytes, err := osdAquasecOperator10ClusterroleImageScannerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/10-clusterrole-image-scanner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdAquasecOperator11ClusterrolebindingImageScannerYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xcf\x3d\x4b\x03\x41\x10\xc6\xf1\x7e\x3f\xc5\x90\xfe\x36\xd8\xc9\x76\x6a\x61\x1f\xc1\xfe\xb9\xbd\x49\x32\x66\x77\x66\xdd\x97\x14\x7e\x7a\xb9\x10\x0f\x41\xb0\x1d\xfe\x03\xbf\x07\x45\xde\xb9\x36\x31\x0d\x54\x67\x44\x8f\xd1\xcf\x56\xe5\x0b\x5d\x4c\xfd\xe5\xb1\x79\xb1\xfd\xf5\xc1\x5d\x44\x97\x40\x2f\x69\xb4\xce\xf5\x60\x89\x9f\x45\x17\xd1\x93\xcb\xdc\xb1\xa0\x23\x38\x22\x45\xe6\x40\xf8\x1c\x98\x5a\x84\x2a\xd7\x69\xbe\x67\x44\x09\x33\xa7\xb6\x66\x44\x28\xe2\xad\xb0\xb6\xb3\x1c\xbb\x8f\x96\xf7\x19\x8a\x13\x2f\x81\x76\xbd\x0e\xde\xb9\x6a\x89\x0f\x7c\x5c\x73\x14\x79\xad\x36\xca\x3f\x42\x47\xf4\x07\xb8\x79\x24\xe3\xc4\x3f\x20\xd7\xc6\xfc\xc1\xb1\xdf\x20\xd3\xfd\xeb\x8d\xeb\x55\x22\x3f\xc5\x68\x43\xfb\x4d\xf8\x7b\x0a\xb6\x4b\x2b\x88\x1c\x68\xa3\x4f\x6b\xe0\xbe\x03\x00\x00\xff\xff\x3a\xff\xa7\x6c\x45\x01\x00\x00")

func osdAquasecOperator11ClusterrolebindingImageScannerYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdAquasecOperator11ClusterrolebindingImageScannerYaml,
		"osd-aquasec-operator/11-clusterrolebinding-image-scanner.yaml",
	)
}

func osdAquasecOperator11ClusterrolebindingImageScannerYaml() (*asset, error) {
	bytes, err := osdAquasecOperator11ClusterrolebindingImageScannerYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-aquasec-operator/11-clusterrolebinding-image-scanner.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCodereadyWorkspaces00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xcf\xb1\x8a\x03\x31\x0c\x04\xd0\xde\x5f\x21\xdc\x7b\x97\x6b\xfd\x11\x57\x5e\xaf\xb3\x15\x47\xac\x2d\x19\x5b\x9b\x90\xbf\x0f\x09\x81\x25\xa4\x48\x39\xf0\x66\x60\xb0\xf3\x1f\x8d\xc9\x2a\x11\x2e\x3f\x6e\x63\xc9\x11\x7e\xb1\xd1\xec\x98\xc8\x35\x32\xcc\x68\x18\x1d\x00\x8a\xa8\xa1\xb1\xca\x7c\x44\x00\xed\x24\xf3\xcc\x27\x5b\x58\x57\xd1\x4c\x61\x52\xa5\x64\x3a\x22\x78\xef\x00\x2a\xfe\x53\x7d\x61\xec\xbc\x1c\x85\xa4\x6d\x6d\x28\x58\x28\x47\xf0\x36\x76\xf2\x9f\x93\xa9\xee\xd3\x68\x84\xaa\xa5\xb0\x94\xef\xb0\xa9\xb0\xe9\x78\xb7\x82\x8d\xe2\xe1\x43\xd2\x4c\x83\x30\xdf\xc2\x55\xc7\xf6\xbc\x39\xdd\x3d\x00\x00\xff\xff\x12\xa3\x36\x1e\x07\x01\x00\x00")

func osdCodereadyWorkspaces00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCodereadyWorkspaces00NamespaceYaml,
		"osd-codeready-workspaces/00-namespace.yaml",
	)
}

func osdCodereadyWorkspaces00NamespaceYaml() (*asset, error) {
	bytes, err := osdCodereadyWorkspaces00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-codeready-workspaces/00-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCodereadyWorkspaces01OperatorgroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x4f\xb1\x4a\x04\x41\x0c\xed\xe7\x2b\xc2\xf5\xbb\x72\xed\x74\x87\x85\x08\xa2\x16\x62\x1f\x67\xe2\x3a\xdc\x4c\x32\x24\xd9\x15\xff\x5e\x76\x6f\x0f\xae\xbb\x34\xc9\xe3\x3d\xf2\xde\xc3\x5e\x3e\x49\xad\x08\x47\x90\x4e\x8a\x2e\x6a\x63\x12\x25\x59\x57\x7b\x58\x8e\xe1\x5c\x38\x47\x78\xdb\xd9\x27\x95\xb9\x87\x46\x8e\x19\x1d\x63\x00\x40\x66\x71\xf4\x22\x6c\x2b\x04\x90\xda\xc6\xae\xb2\x94\x4c\xf9\xf4\xfe\x6c\x11\x1e\xeb\x6c\x4e\xfa\x22\xd3\x54\x78\x1a\x97\xe3\x58\xf7\x53\x3a\xb1\xfd\x94\x6f\x1f\x8b\x04\x80\x8a\x5f\x54\xf7\x37\xd8\xcb\x0d\xbd\x86\x69\xc8\x38\x51\x8e\x70\x70\x9d\xe9\x10\x00\x18\x1b\x6d\xc9\x2f\xaa\x21\x49\x26\x25\xcc\x7f\xc3\xaf\xe8\xd9\x3a\x26\xb2\x5d\xb6\x81\xbb\x5a\xeb\x94\x56\x7b\x23\x5d\x4a\xa2\x53\x4a\x32\xb3\x5f\x02\xdd\x96\x5e\x27\x29\x6d\xb5\x3f\x4a\x23\x73\x6c\x3d\x02\xcf\xb5\x06\x00\x47\x9d\xc8\x5f\xaf\xae\x5b\xa1\xe1\x9e\xf5\x7f\x00\x00\x00\xff\xff\x0a\x63\xd0\x51\x8c\x01\x00\x00")

func osdCodereadyWorkspaces01OperatorgroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCodereadyWorkspaces01OperatorgroupYaml,
		"osd-codeready-workspaces/01-operatorgroup.yaml",
	)
}

func osdCodereadyWorkspaces01OperatorgroupYaml() (*asset, error) {
	bytes, err := osdCodereadyWorkspaces01OperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-codeready-workspaces/01-operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCodereadyWorkspaces05RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x8e\xd4\x30\x0c\x86\xef\x7d\x8a\x68\x2e\x2b\x21\x35\x23\x6e\xa8\x2f\xc0\x9d\x03\x77\xd7\xf1\xa6\xd6\xa4\x71\x64\x27\x5d\xc1\xd3\xa3\x74\xcb\x30\x43\x41\x70\xf2\xef\xca\xf6\xff\xd5\x0e\x14\xfe\x4a\x6a\x2c\x79\x72\x3a\x03\x7a\x68\x75\x11\xe5\xef\x50\x59\xb2\xbf\x7d\x32\xcf\x72\xdd\x3e\x0e\x37\xce\x61\x72\x5f\x24\xd1\xb0\x52\x85\x00\x15\xa6\xc1\xb9\x04\x33\x25\xeb\xca\x39\x28\xec\xa5\x50\xb6\x85\x5f\xab\x47\x59\xaf\x2b\x64\x88\x14\x26\x77\xa9\xda\xe8\x32\x38\x97\x61\xa5\xc9\x05\x0a\x8c\x50\x29\x8c\x10\x56\xce\x36\xde\xdb\x46\x94\x40\x4a\x10\xbe\x8d\x6f\xa2\x37\x2b\x80\x64\x47\xdf\x9e\x4c\xee\x1f\xb5\xda\x12\xd9\x34\x8c\x1d\xe7\xb3\x4a\x2b\x3b\xdd\xe8\x2e\xdd\x5e\xc9\xa4\x29\xd2\xf1\xed\x3e\xd5\xf6\xb4\x48\xf8\x25\xae\x49\xe2\xe0\xdc\x46\x3a\x1f\xd5\x89\xad\xee\x22\xd2\x7b\x7c\x83\x8a\xcb\xd9\x29\x49\x8c\x9c\xe3\xc3\x2e\x58\xce\xde\x98\x9a\x55\xd2\xa3\xd8\x9e\xad\x50\x09\x2a\xed\x32\x50\xa2\x27\x89\x92\x12\x61\x3f\xcf\x13\xcc\x9d\xae\xec\x54\x5d\xb5\x12\x7e\x4e\xf9\x0b\xaa\x14\x52\xa8\xa2\xe6\x51\x94\xa4\x87\xf5\x8c\x6a\x6d\x36\x54\x2e\xdd\xd3\x1e\xe1\x8d\x74\x63\xa4\xed\xfd\x05\xfd\xf6\x0f\x2f\x1f\x5e\xfe\xef\x0a\x28\xf9\x95\xe3\x0a\xc5\xfe\xb0\xef\x33\xb2\x46\x4f\x98\xb8\x18\x79\x5c\xe8\x3c\xae\xfb\x9e\x40\x7e\x04\x00\x00\xff\xff\xed\x99\x59\x4d\xe8\x02\x00\x00")

func osdCodereadyWorkspaces05RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCodereadyWorkspaces05RoleYaml,
		"osd-codeready-workspaces/05-role.yaml",
	)
}

func osdCodereadyWorkspaces05RoleYaml() (*asset, error) {
	bytes, err := osdCodereadyWorkspaces05RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-codeready-workspaces/05-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCodereadyWorkspaces06RolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\x43\x31\x0c\x45\xf7\x7c\x85\xd5\x3d\xa9\xd8\x50\x46\x16\xf6\x0e\xec\x7e\xb1\xdb\x9a\xf7\x62\x47\x71\x02\x82\xaf\x47\xad\x10\x4c\x80\xe8\x66\x4b\xf7\xea\x9e\x83\x4d\x9e\xb8\xbb\x98\x66\xe8\x0b\x96\x84\x73\x9c\xad\xcb\x3b\x0e\x31\x4d\xeb\xbd\x27\xb1\xfd\xcb\x5d\x58\x45\x29\xc3\xc1\x36\x7e\x10\x25\xd1\x53\xa8\x3c\x90\x70\x60\x0e\x00\x1b\x2e\xbc\xf9\xe5\x02\xc0\x26\xc9\x1a\xab\x9f\xe5\x38\x52\xb1\xba\xaf\xa8\x78\x62\xca\xb0\x1b\x7d\xf2\x2e\x00\x28\x56\xce\x40\x4c\x52\x70\x30\x45\xa4\x2a\xea\xf1\xab\x16\x8b\x11\x77\x46\x7a\x8b\xaf\xd6\x57\x6f\x58\xd8\x3f\x7b\xd7\x27\xc3\x1f\xd9\x6e\x1b\x1f\xf8\x78\x41\xc2\x26\x8f\xdd\x66\xfb\xc5\x30\x00\x7c\x0b\xde\xcc\xe7\x73\x79\xe6\x32\x3c\x87\xf8\xaf\xd1\x6b\xf0\xc7\xd5\xf0\x11\x00\x00\xff\xff\x8f\x82\xa6\x66\xa4\x01\x00\x00")

func osdCodereadyWorkspaces06RolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCodereadyWorkspaces06RolebindingYaml,
		"osd-codeready-workspaces/06-rolebinding.yaml",
	)
}

func osdCodereadyWorkspaces06RolebindingYaml() (*asset, error) {
	bytes, err := osdCodereadyWorkspaces06RolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-codeready-workspaces/06-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdConsoleBrandingOsdBrandingConsoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\x4d\xcf\xd3\x30\x10\x84\xef\xf9\x15\xab\x72\x01\xe9\x55\x9c\xf2\xa5\xc6\x37\x3e\x2e\x48\xc0\xa1\xe8\xe5\xbe\xb1\x97\xda\xc2\xb1\x8d\x77\xdd\x22\x7e\x3d\x72\x52\x50\x8a\xe8\x2d\xd2\xce\xec\x8c\x9f\x0d\x66\xff\x95\x0a\xfb\x14\x35\xa4\x4c\x05\x25\x95\x3e\x65\x8a\xec\xfc\x37\xe9\x7d\x52\xe7\x7d\xf7\xdd\x47\xab\xe1\x5d\x8a\x9c\x02\x75\x33\x09\x5a\x14\xd4\x1d\x40\xc0\x89\x02\xb7\x2f\x00\xcc\x7e\xe3\x34\x69\x56\x33\x46\x3c\x91\xd5\xb0\x93\x52\x69\xd7\x01\x44\x9c\x49\x83\x09\x95\x85\x4a\xc7\x99\x4c\xf3\xae\xba\x99\xa2\x7c\x11\x14\xd2\xf0\x69\x35\x76\x00\x58\xc5\x51\x14\x6f\x50\x5a\xc7\x25\xe8\x09\x88\x23\x08\xe9\x94\xaa\x40\x21\xeb\x0b\x19\x81\xb9\xb2\xc0\x44\x80\x70\xc6\xe0\x2d\x3c\x1e\x3f\x00\x89\x43\x01\x16\x2c\xc2\x70\xf1\xe2\xc0\x89\xe4\xa7\xfc\xec\xba\x67\x55\xd2\x4f\x9c\x73\x20\xd6\xcb\x54\x2b\x15\x92\xc1\xe0\x12\x8b\x3e\x0c\x87\x41\xad\x49\xbd\x93\x39\x3c\x2c\x12\xd6\x4a\x5d\x2e\x97\xbe\x90\x75\xb8\x3e\x35\xa4\x93\x4a\x55\xd4\xb2\x78\x35\x1c\xaf\xcd\x34\xec\xee\x98\xbc\x62\x97\x6a\xb0\xd7\x84\x06\xc8\x54\x96\x34\xfb\x5f\x9b\xe7\x4e\x05\x1b\x7e\x4b\xb6\x51\x20\x0b\x1b\x08\x36\x99\xda\xb8\x2d\x72\x98\x90\xe9\xbf\x1c\xee\x61\x80\x37\x9f\xdf\x83\xbf\xb2\x73\x78\x6e\x2e\x29\xe8\x83\x8f\x27\xe0\x80\xec\x36\x59\xb7\x03\xf0\x0c\x85\x7e\x54\x5f\xc8\xc2\x44\x06\x2b\x13\xa0\xb5\xbe\x35\xc1\xd0\xc2\x2b\xb5\xb4\x10\x96\x36\x39\x53\xb4\xcb\x49\xef\x81\xe7\x1b\xf2\xe3\x38\x8e\xca\x26\xc3\xea\xe1\xcf\x59\xf6\xe3\xf3\x7e\xff\xfa\xd0\xef\xfb\x57\xfa\xc5\x30\x0c\x6d\xbc\x38\x5a\xe4\x4a\xfe\x86\xc7\x5b\x64\x7a\x3c\x7e\xdc\xf0\x6f\xfb\xfe\xf9\x47\xff\x62\x55\x2f\xd5\xee\x77\x00\x00\x00\xff\xff\xca\xab\x5c\x33\x0e\x03\x00\x00")

func osdConsoleBrandingOsdBrandingConsoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdConsoleBrandingOsdBrandingConsoleYaml,
		"osd-console-branding/osd-branding.console.yaml",
	)
}

func osdConsoleBrandingOsdBrandingConsoleYaml() (*asset, error) {
	bytes, err := osdConsoleBrandingOsdBrandingConsoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-console-branding/osd-branding.console.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperators00CvoOverridesPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x91\xb1\x4e\xed\x30\x0c\x86\xf7\x3e\x85\x95\xf9\xb4\x57\x77\xcd\x76\xc4\x8c\x18\x40\x2c\x88\xc1\x4a\xdc\x36\x3a\x4d\x6c\x39\x49\x51\x05\x7d\x77\x14\xb5\xf0\x04\x67\x60\x4a\xe2\xcf\xfa\xfd\x45\x46\x09\xaf\xa4\x39\x70\xb2\xe0\x38\x8d\x61\x1a\x58\x28\xe5\x39\x8c\x65\x08\xfc\x6f\xfd\xdf\xa1\xc8\xb2\x3d\xb2\x27\x0b\xd7\xe5\x03\xb7\x7c\x6d\x85\xee\x16\x92\xb7\xf0\xb0\xd4\x5c\x48\xcf\x8c\x2e\x61\x24\x0b\xeb\xf9\x12\x2c\x6e\xb6\xf0\xd5\x77\x00\x9f\x60\xb2\x90\x33\xb6\xdd\x78\x25\xd5\xe0\x29\x1b\x0b\x6f\xad\xd0\xc2\x8c\x05\xf3\x24\xa4\x58\x58\x9f\xb9\xaa\x23\x73\x01\x33\x29\x57\x69\x88\x4f\x94\x07\xc7\x4a\xdc\x8e\xd8\x1a\xda\xc8\xc6\x95\xfc\x8c\xa5\xff\x6d\xfb\x61\x59\xd0\xd1\x19\x70\xfc\xab\x8f\xa8\x37\x2a\xb2\xe0\x31\xa2\xa6\x88\x09\x27\x6a\x06\x45\x2b\xc1\x7e\xb9\x93\x93\x23\x2d\x61\x0c\xe4\xff\x98\x16\xc7\x58\x53\x28\xdb\x7d\xb4\xe0\x1d\x76\xd8\x8f\x6d\xbf\x6c\x42\x16\x22\xe9\x44\xdf\x01\x00\x00\xff\xff\xd2\x4c\xb1\x27\x5b\x02\x00\x00")

func osdCuratedOperators00CvoOverridesPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperators00CvoOverridesPatchYaml,
		"osd-curated-operators/00-cvo-overrides.patch.yaml",
	)
}

func osdCuratedOperators00CvoOverridesPatchYaml() (*asset, error) {
	bytes, err := osdCuratedOperators00CvoOverridesPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operators/00-cvo-overrides.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperators10CuratedCertifiedOperatorsPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xbd\x4e\x43\x31\x0c\x85\xf7\x3c\x85\x95\xfd\x82\x58\xbd\xf5\x01\x80\x01\xc4\x6e\x39\xa7\x6d\xd4\x9b\xc4\x72\x52\x50\x04\x7d\x77\x74\xcb\xcf\xd4\xc9\xd6\x39\x3a\xdf\x27\x96\xdf\xe0\x3d\xb7\xca\xd4\x0c\x2e\xa3\x79\xbf\xd3\xe6\x68\xdb\x29\xf7\xef\x0f\x41\xcc\xd6\xf9\xd8\x12\x98\x76\xeb\x87\xcc\xbe\xdb\x82\x70\xca\x35\x31\x3d\xff\x8e\x5e\xda\xd9\x15\xa1\x4a\x01\x93\xc2\x47\xde\x67\xa4\xe5\x9f\x79\x6d\xba\x89\xe2\x2a\xaa\xfd\x98\xf7\x63\x29\xe2\x27\x0c\x5b\x45\x11\x4c\x86\x1e\x99\xbe\x96\x40\xf4\x49\xb1\x1b\x34\xf2\xf6\x39\x0e\xb9\x0f\x9f\x4f\x7f\x84\xc8\x14\xf5\xec\x32\x90\x96\x1b\xaa\x48\x17\xba\xfc\xe0\x5e\xa7\x81\xa9\xc0\x0f\x08\xdf\x01\x00\x00\xff\xff\x2f\x7f\x6d\x84\xeb\x00\x00\x00")

func osdCuratedOperators10CuratedCertifiedOperatorsPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperators10CuratedCertifiedOperatorsPatchYaml,
		"osd-curated-operators/10-curated-certified-operators.patch.yaml",
	)
}

func osdCuratedOperators10CuratedCertifiedOperatorsPatchYaml() (*asset, error) {
	bytes, err := osdCuratedOperators10CuratedCertifiedOperatorsPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operators/10-curated-certified-operators.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperators10CuratedCommunityOperatorsPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xbd\x4e\xc5\x30\x0c\x85\xf7\x3c\x85\x95\x3d\x20\x56\x6f\xf7\x01\x80\x01\xc4\x6e\xb9\xe6\x36\x6a\x13\x5b\x4e\x0a\x8a\xa0\xef\x8e\x5a\x7e\x26\x26\x5b\xe7\xe8\x7c\x1f\x59\x7e\x11\x6f\x59\x2b\x82\x9a\x38\x75\xf5\x76\xc3\xea\xa2\xc7\x29\xb7\x6f\x77\x81\xcc\xd6\x71\xaf\x93\x20\x5c\xd6\x77\x1a\xed\x72\x04\x61\xc9\x75\x42\x78\xfc\x19\x3d\xe9\xe6\x2c\xa1\x52\x11\x04\xd6\x52\xb6\x9a\xfb\x48\x7f\xcc\xb3\x69\x46\x2c\xa7\xa8\xb6\x39\xbf\xf6\x54\xc8\x17\xe9\xb6\x12\x4b\x30\xea\x3c\x23\x7c\xa6\x00\xf0\x01\xb1\x99\x70\xc4\xe3\x73\xb9\xe6\xd6\x7d\x3c\xfc\x12\x22\x42\xe4\xcd\xa9\xcb\x94\xfe\x51\x45\xd8\x61\xff\xc6\x3d\x0f\x13\x84\x22\x7e\x95\xaf\x00\x00\x00\xff\xff\x95\x5d\x95\x83\xea\x00\x00\x00")

func osdCuratedOperators10CuratedCommunityOperatorsPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperators10CuratedCommunityOperatorsPatchYaml,
		"osd-curated-operators/10-curated-community-operators.patch.yaml",
	)
}

func osdCuratedOperators10CuratedCommunityOperatorsPatchYaml() (*asset, error) {
	bytes, err := osdCuratedOperators10CuratedCommunityOperatorsPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operators/10-curated-community-operators.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperators10CuratedRedhatOperatorsPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x8d\x3d\x4e\x04\x31\x0c\x46\xfb\x9c\xc2\x4a\x1f\x10\xad\xbb\x3d\x00\x50\x80\xe8\xad\xe4\x63\x27\xda\x49\x62\x39\x59\x50\x04\x73\x77\x34\xc3\x4f\x41\x65\xeb\x49\xdf\x7b\xa2\xf9\x05\xd6\x73\xab\x4c\x4d\x61\x32\x9a\xf5\x9b\xd8\x0c\x6d\x3f\xe5\xf6\xed\xce\x89\xea\x3a\xef\x5b\x02\xd3\x69\x7d\x97\xd9\x4f\x3b\x70\x97\x5c\x13\xd3\xe3\xcf\xe8\xa9\x5d\x2d\xc2\x55\x29\x60\x32\xa4\x45\x46\xf8\x13\x1e\xb8\xab\x44\x1c\x95\xda\x97\xfc\x3a\x42\x11\xbb\x60\xe8\x2a\x11\x4e\x65\xc4\x85\xe9\x33\x38\xa2\x0f\xf2\x5d\x11\x3d\xef\x9f\xe1\x9c\xfb\xb0\xf9\xf0\x6b\xf0\x4c\x3e\x5e\x4d\x06\x52\xf8\xdf\xf1\xb4\xd1\xf6\xed\x7a\x9e\x0a\xa6\x02\x3b\xc3\x7d\x05\x00\x00\xff\xff\x58\xae\x72\xe0\xe5\x00\x00\x00")

func osdCuratedOperators10CuratedRedhatOperatorsPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperators10CuratedRedhatOperatorsPatchYaml,
		"osd-curated-operators/10-curated-redhat-operators.patch.yaml",
	)
}

func osdCuratedOperators10CuratedRedhatOperatorsPatchYaml() (*asset, error) {
	bytes, err := osdCuratedOperators10CuratedRedhatOperatorsPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operators/10-curated-redhat-operators.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperatorsources00OperatorhubCrYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\x31\x4b\x04\x41\x0c\xc5\xf1\x7e\x3e\x45\xb8\xde\x3b\x6c\xa7\x13\x2c\xec\x2c\x04\xfb\xec\xec\xdb\x35\x98\x4d\x86\x49\x46\xf0\xdb\xcb\x82\x88\x57\xbf\xdf\xff\x71\x97\x77\x8c\x10\xb7\x4a\xcd\x6d\x93\xfd\xea\x1d\x16\x1f\xb2\xe5\x55\xfc\xf6\xf5\x58\x3e\xc5\xd6\x4a\xaf\x1d\x83\xd3\xc7\xcb\x5c\xca\x81\xe4\x95\x93\x6b\x21\x32\x3e\x50\xa9\xe9\x8c\xc4\x28\x44\x6c\xe6\xc9\x29\x6e\x71\xce\x44\x03\x0a\x0e\xdc\xdf\xb6\x01\x4e\x3c\xb8\xe9\x77\xa5\x4b\x8e\x89\x4b\x21\x52\x5e\xa0\xbf\x19\x77\xf9\x97\x34\x3f\x6e\x07\x1b\xef\x58\xff\x7c\x74\xb4\xd3\xae\x12\xbc\x28\x9e\x54\x9f\xb1\xf1\xd4\x7c\xf3\x39\x1a\xa2\xd2\xe9\xca\x4f\x00\x00\x00\xff\xff\x98\xa5\x8a\xeb\xe2\x00\x00\x00")

func osdCuratedOperatorsources00OperatorhubCrYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperatorsources00OperatorhubCrYaml,
		"osd-curated-operatorsources/00-operatorhub.cr.yaml",
	)
}

func osdCuratedOperatorsources00OperatorhubCrYaml() (*asset, error) {
	bytes, err := osdCuratedOperatorsources00OperatorhubCrYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operatorsources/00-operatorhub.cr.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x91\xdd\x36\xfe\x55\xeb\xbf\x74\x6a\x81\xb6\xe8\xce\x48\x4c\x4c\xc4\x96\x58\x92\x2e\x90\x14\x7d\xf7\xc2\x82\xe3\x2e\x45\x27\xe1\xa0\xbb\xd3\x77\x42\xe1\x37\x52\xe3\x5a\x22\x54\x21\x45\xaf\x6a\x7d\xaa\x4a\x75\x3d\xe6\xe1\xe3\x5f\xb8\x70\xc9\x11\x9e\xb6\xdb\x97\xba\x68\xa2\x30\x93\x63\x46\xc7\x18\x00\x4e\x5c\x70\xe2\x1b\xa9\xad\xaa\xfb\xd1\xfd\x5e\xd9\x42\xd6\xff\xf6\x44\x00\x28\x38\x53\x84\x6a\xb9\x4b\x8b\xa2\x53\xee\x12\xa9\xf3\x89\x29\x77\x7b\x64\xf3\x99\x60\xa2\x06\x5b\x6c\xe4\x93\x77\x33\xea\x85\x5c\x26\x4c\x14\x00\x26\x3c\xd2\xd4\x38\x00\x50\xb8\xdf\x7d\x6d\xcd\x8c\x05\xcf\x94\x23\x1c\x5c\x17\x3a\x04\x13\x4a\xab\x17\x17\x1f\xab\xf2\x0d\x9d\x6b\x79\xad\x17\x2a\x11\x3e\xbf\x02\x40\x66\x93\x09\xaf\x8f\x0d\xf0\xff\x1d\x6a\xff\x8c\x15\x8a\x4a\x96\xca\xc5\x23\x8c\xee\x62\x71\x18\xde\x17\xbc\xf6\x5c\x87\x54\x34\x00\xc8\x72\x9c\xd8\x46\xd2\x08\xcf\x94\xe1\x01\x3d\x00\x28\x9d\xd9\x5c\x5b\xf1\xb6\xe8\xef\xe9\x7e\x15\x8a\x80\x22\xf7\x64\xf8\x0e\x00\x00\xff\xff\xeb\x1b\xb2\x48\xbb\x01\x00\x00")

func osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYaml,
		"osd-curated-operatorsources/10-curated-certified-operators.OperatorSource.yaml",
	)
}

func osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYaml() (*asset, error) {
	bytes, err := osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operatorsources/10-curated-certified-operators.OperatorSource.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xb1\x6e\xf3\x30\x0c\x84\x77\x3d\x05\x91\xdd\x36\xfe\x55\xeb\xbf\x74\x6a\x81\xb6\xe8\xce\x48\x4c\x4c\xc4\x16\x59\x8a\x2a\xe0\x14\x7d\xf7\xc2\x46\xe2\x2e\x45\x27\xe1\xa0\xbb\xd3\x77\x42\xe5\x37\xb2\xca\x52\x22\x88\x92\xa1\x8b\xd5\x3e\x89\x91\xac\xc7\x3c\x7c\xfc\x0b\x17\x2e\x39\xc2\xd3\xed\xf6\x45\x9a\x25\x0a\x33\x39\x66\x74\x8c\x01\xe0\xc4\x05\x27\xbe\x92\xd5\x55\x75\x3f\xba\xdf\x2b\xb7\x50\xed\x7f\x7b\x22\x00\x14\x9c\x29\x82\xd4\xdc\xa5\x66\xe8\x94\xbb\x24\xf3\xdc\x0a\xfb\xd2\xed\x91\x9b\xaf\x2a\x26\xda\x60\x4b\x1d\xf9\xe4\xdd\x8c\x76\x21\xd7\x09\x13\x05\x80\x09\x8f\x34\x6d\x1c\x00\xa8\xdc\xef\xbe\x6d\xcd\x8c\x05\xcf\x94\x23\x1c\xdc\x1a\x1d\x42\x55\x4a\xab\x17\x9b\x8f\x62\x7c\x45\x67\x29\xaf\x72\xa1\x12\xe1\xf3\x2b\x00\x64\xae\x3a\xe1\xf2\xb8\x01\xfe\xbf\x43\xed\x9f\xb1\x42\x51\xc9\x2a\x5c\x3c\xc2\xe8\xae\x35\x0e\xc3\x7b\xc3\xa5\x67\x19\x52\xb1\x00\xa0\xed\x38\x71\x1d\xc9\x22\x3c\x53\x86\x07\xf4\x00\x60\x74\xe6\xea\xb6\x15\xdf\x16\xfd\x3d\xdd\x17\xa5\x08\xa8\x7a\x4f\x86\xef\x00\x00\x00\xff\xff\x9d\xcf\x51\x90\xbb\x01\x00\x00")

func osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYaml,
		"osd-curated-operatorsources/10-curated-community-operators.OperatorSource.yaml",
	)
}

func osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYaml() (*asset, error) {
	bytes, err := osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operatorsources/10-curated-community-operators.OperatorSource.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xc1\x4e\xec\x30\x0c\x45\xf7\xf9\x0a\x6b\xf6\x6d\xf5\xb6\xf9\x82\xb7\x02\x09\x10\x7b\x4f\xe2\x99\x5a\xd3\xc6\xc6\x76\x91\x66\x10\xff\x8e\x5a\x0d\x65\x83\x58\x45\x56\xce\x75\xce\x0d\x2a\xbf\x92\x39\x4b\xcb\x20\x4a\x86\x21\xe6\x7d\x11\x23\x59\x8f\x79\x78\xff\x97\x2e\xdc\x6a\x86\xc7\xfb\xed\xb3\x2c\x56\x28\xcd\x14\x58\x31\x30\x27\x80\x13\x37\x9c\xf8\x46\xe6\xeb\xd4\xfd\xcc\xfd\xbe\x72\x0b\x79\xff\xdb\x13\x09\xa0\xe1\x4c\x19\xc4\x6b\x57\x16\xc3\xa0\xda\x19\xd5\x11\xa3\xdb\xf9\x3b\xe4\x8a\x85\x36\xd3\xe6\x23\x9f\xa2\x9b\xd1\x2e\x14\x3a\x61\xa1\x04\x30\xe1\x91\xa6\x4d\x02\x00\x95\xfb\x9d\xdb\xaa\xcc\xd8\xf0\x4c\x35\xc3\x21\x6c\xa1\x43\x72\xa5\xb2\xb2\xb8\xc4\x28\xc6\x37\x0c\x96\xf6\x22\x17\x6a\x19\x3e\x3e\x13\x40\x65\xd7\x09\xaf\x0f\x9b\xdd\x13\x55\xf8\x8f\xb1\xff\xc3\xaa\x44\xad\xaa\x70\x8b\x0c\x63\x84\x7a\x1e\x86\xb7\x05\xaf\x3d\xcb\x50\x9a\x25\x00\x5d\x8e\x13\xfb\x48\xb6\xc7\x13\x80\xd1\x99\x3d\x6c\x5b\x7b\xef\xf3\x47\xeb\xb8\x2a\x65\x40\xd5\xef\x58\xfa\x0a\x00\x00\xff\xff\x95\x64\x9a\xb9\xb3\x01\x00\x00")

func osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYaml,
		"osd-curated-operatorsources/10-curated-redhat-operators.OperatorSource.yaml",
	)
}

func osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYaml() (*asset, error) {
	bytes, err := osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-curated-operatorsources/10-curated-redhat-operators.OperatorSource.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCustomerMonitoring00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\xce\x31\x8e\x03\x21\x0c\x85\xe1\x9e\x53\x58\xf4\xcc\x68\x5b\x0e\xb1\xe5\xf6\x5e\xf0\x10\x2b\x60\x23\xec\xc9\xf9\xa3\x48\x91\xa6\x48\x91\xfe\xff\x9e\x1e\x4e\xfe\xa3\x65\xac\x92\xe1\xf1\x13\xee\x2c\x35\xc3\x2f\x0e\xb2\x89\x85\xc2\x20\xc7\x8a\x8e\x39\x00\x08\x0e\xca\xa0\x93\xc4\x6e\x7c\x78\x2a\xa7\xb9\x0e\x5a\x69\xa8\xb0\xeb\x62\x69\x01\x00\x45\xd4\xd1\x59\xc5\x5e\x08\x2e\xb0\xb1\xee\xa2\x95\x92\x51\xa7\xe2\xba\x32\xc4\x18\x00\x3a\xfe\x53\x7f\xc7\x38\x79\xbb\x40\xd1\xb1\x0f\x14\x6c\x54\x33\x44\x5f\x27\xc5\xcf\xc9\xd2\x4f\x73\x5a\xa9\x6b\x6b\x2c\xed\x7b\x78\xdd\xcd\x10\x0f\xec\x46\x31\x3c\x03\x00\x00\xff\xff\xc8\x5e\x3e\xee\x07\x01\x00\x00")

func osdCustomerMonitoring00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCustomerMonitoring00NamespaceYaml,
		"osd-customer-monitoring/00-namespace.yaml",
	)
}

func osdCustomerMonitoring00NamespaceYaml() (*asset, error) {
	bytes, err := osdCustomerMonitoring00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-customer-monitoring/00-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCustomerMonitoring01OperatorgroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7c\x0a\xeb\xf6\x16\xdd\x9a\xed\xc4\x80\x90\x10\x30\x20\x76\x93\x9a\x60\x91\xd8\x91\xe3\xf4\xf3\xa3\xf6\x8a\x74\x1b\x64\x89\xff\x3c\xeb\xfd\x1e\x36\x7e\x27\xeb\xac\x12\x41\x1b\x19\xba\x5a\x9f\x93\x1a\xe9\xf6\xd5\xbb\xf5\x1c\xbe\x59\x96\x08\x2f\xc7\xf6\xc1\x74\xb4\x50\xc9\x71\x41\xc7\x18\x00\x50\x44\x1d\x9d\x55\xfa\xd6\x02\x68\xa9\x73\x33\x5d\x79\xa1\xe5\xf2\xfa\xd8\x23\xdc\x97\xd1\x9d\xec\x49\x73\x66\xc9\xf3\x7a\x9e\xcb\x51\x6a\x23\xe9\x5f\xfc\xe9\x33\x6b\x00\x10\xac\xb4\x93\x5c\x87\x53\x1a\xdd\xb5\x92\x4d\x55\x85\x5d\x8d\x25\x1f\xaa\xde\x30\xfd\x43\x5a\xf0\x83\xca\xc1\x85\x8d\x6f\xfc\xb6\x74\x15\x05\x33\x2d\x11\x4e\x6e\x83\x4e\xa1\x37\x4a\x9b\xb6\x93\xad\x9c\xe8\x92\x92\x0e\xf1\xeb\xf5\x6d\xe4\xed\x25\xa3\x3d\xf4\x1b\x57\xea\x8e\xb5\x45\x90\x51\x4a\x00\x70\xb4\x4c\xfe\xfc\x0b\xb9\xbb\x4f\x7f\x90\xfe\x04\x00\x00\xff\xff\x77\xb9\x09\x6f\x89\x01\x00\x00")

func osdCustomerMonitoring01OperatorgroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCustomerMonitoring01OperatorgroupYaml,
		"osd-customer-monitoring/01-operatorgroup.yaml",
	)
}

func osdCustomerMonitoring01OperatorgroupYaml() (*asset, error) {
	bytes, err := osdCustomerMonitoring01OperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-customer-monitoring/01-operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCustomerMonitoring05RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x59\xcb\x92\xea\x38\x0f\xde\xf3\x14\x29\x36\xa7\xea\x54\x05\xea\xdf\xfd\xc5\x0b\xcc\x6e\x16\xb3\x98\xbd\x62\xab\x41\x8d\x63\x79\x2c\x9b\x3e\x3d\x4f\x3f\xe5\x5c\x20\xe4\xd2\x49\x73\x39\xac\x48\x2c\xc5\x92\x3e\xc9\xba\x18\x70\xf4\x37\x7a\x21\xb6\xbb\xcc\x17\xa0\x36\x10\xc3\x81\x3d\xfd\x0b\x81\xd8\x6e\x8e\xff\x97\x0d\xf1\xf6\xf4\xbf\xd5\x91\xac\xde\x65\x7f\xb1\xc1\x55\x89\x01\x34\x04\xd8\xad\xb2\xcc\x42\x89\xbb\x4c\xa3\x26\x05\x01\x75\x0e\xba\x24\x2b\x39\x3b\xb4\x72\xa0\xb7\x90\xab\x28\x81\x4b\xf4\x79\xc9\x96\x02\x7b\xb2\xfb\xe6\x33\x71\xa0\x70\x97\xcd\xb1\x1a\x28\xd0\x48\x92\x95\x65\xe0\x68\x73\xe6\xdf\x28\x2e\xb7\x25\x58\xd8\xa3\xde\x65\xeb\xe0\x23\xae\x57\x3e\x1a\x94\xdd\x2a\x4f\xac\x7f\x78\x8e\xae\xfa\x32\xcf\xd6\xeb\x55\x96\x79\x14\x8e\x5e\x61\xb3\x76\x56\x42\xaa\x57\xc7\xfa\xf2\xb0\x35\x9c\x84\x9f\xd0\x17\x0d\xb7\x21\x09\xd5\xc3\x1e\xeb\xdf\x0f\x08\xea\x30\x94\xc4\x0e\x3d\x04\xf6\xb2\x51\xec\x91\xd3\x4f\x39\x94\x2d\xb1\x10\xe5\xc9\x25\x94\x6b\xa9\xca\x44\x09\xe8\x05\xfd\x89\x14\x9e\x6a\xa7\xc8\xb5\x0e\xeb\x9f\xeb\x65\xa6\x09\x2a\x8f\x41\x3a\x84\x3f\x93\xb1\x35\x11\x0c\xfa\x50\x03\xe7\xf3\x12\xc8\x8e\xaf\xe6\xce\xf3\xaf\xcf\x1a\x11\xcf\x25\x86\x03\x46\xc9\x41\x6b\x4a\x4a\x83\xc9\x45\x79\x70\x98\x2b\xb6\x6f\xb4\xff\x82\xef\x6a\xe7\x0e\xf7\xf8\xfa\xac\xb9\x97\xe8\xe8\x20\x3c\x82\xc1\x45\x99\xc6\xc1\x5d\x79\xd2\x63\xa9\xe2\xa6\x81\xae\x72\x40\x23\xe5\x1c\x11\x9d\xf7\xfb\x1c\xd2\xf9\x5a\x79\x84\x80\x13\x1b\x54\xda\xbd\xa3\x0a\x9d\x88\x27\x1e\x35\x33\x71\xf5\xb6\x4e\x41\xba\x48\xb1\x1a\xf7\x12\x5c\x6d\x29\x5a\xed\x98\x6c\x68\xec\x4e\x51\x28\x01\x6d\x38\xb1\x89\x25\x2a\x03\x54\xd6\x24\x8f\xce\xa4\x33\x4f\x6c\x15\xdb\xe0\xd9\x98\x16\xd5\x71\xd2\x56\x14\x18\xec\x42\x7c\x85\xb7\x6c\xdb\x70\x1b\x02\x94\x1e\x35\x1a\xbc\x7a\x54\x69\x5b\x95\x84\xd4\xaa\x56\xa7\x31\x3d\x45\xa7\x47\x51\x05\xe7\x64\x68\xbf\x86\xe4\x6a\xc1\xc6\x62\x8d\xce\xf0\x67\x89\x76\xf8\xbe\x4d\x86\x14\xa0\x8e\x03\xc2\xc5\xb2\xc6\xf4\xf3\x76\x9d\xf7\xae\xfd\x01\x02\xbe\x45\x73\x66\xeb\x2e\x9c\xf9\x9e\x86\x43\x0c\x9c\x64\xd4\xe9\xb5\x07\x47\x95\xfb\xd9\x06\x30\x8e\x75\xcb\x89\xfd\xb0\x7f\xa8\x3e\x45\xc3\xd1\x0f\x4c\xcf\xf6\x9d\x8b\x1a\xa0\xe6\xe1\x59\x2a\xe0\xaf\x80\xb6\xcd\xb7\x4f\x0d\x10\xb2\x7b\x8f\xd2\x66\x24\x8b\xe1\x83\xfd\xd1\xb1\x21\x45\x38\x08\x99\x2f\x42\x68\xe6\x8c\x3d\x0b\xa8\x4a\xd3\xcf\x91\x24\xc4\x5a\x93\xf8\x58\xd5\xb3\x22\xea\xfd\x54\xae\x7b\x8c\x1a\x0d\x6e\xa9\x04\xd4\x1d\xca\x48\x71\x1f\x40\xfb\x2c\x65\x4a\x0c\x9e\x94\x4c\x6a\xd2\xf4\x15\xbd\xe4\x7c\xd5\x52\x4c\xb4\x12\x45\x24\xa3\x67\xd2\x7f\xc5\x23\x5b\x8d\x01\xc8\xf4\xe4\x4c\x9e\xb8\xc5\xfb\x2e\x28\x2a\x8b\x37\xab\x2b\x8d\x0c\x16\xb6\x1f\x58\x1c\x98\x8f\x32\x29\xf7\x1b\xee\x1a\x40\x3b\xf0\xdf\x63\xf0\x1e\xb4\x87\x0f\xf7\x69\x8b\x0e\x59\x09\x60\x03\xb5\xba\x4f\x11\x0b\xb2\xe0\x3f\xbb\x3a\x2a\xc3\x76\x3c\x19\xdc\xa4\xd5\x3b\xda\x23\xf5\x3b\x52\xd4\x54\x9b\x7b\x22\xfc\x18\xaf\xb9\x33\xdb\x5e\xf2\x64\x37\x40\x06\xab\x77\xa6\xb6\xbb\xe2\xe2\x06\x2b\xda\x52\x30\x65\x4d\xdf\xab\x43\x8e\x4e\x31\x59\xe0\xc0\x5b\x80\x6e\x82\x78\x14\xec\x00\x21\xde\x98\xb5\xa8\x84\x3d\xce\xe8\x52\xf1\x48\xf0\x08\xe5\x7d\xc2\xfe\x89\x1c\x60\x46\x18\x38\x67\x08\x75\x33\x60\xb5\xc4\xea\xcb\x1b\xa5\x7a\x8e\x61\xce\xc4\x8a\xe7\x45\x89\x6c\xb9\x7e\xdb\x7a\xe8\xce\x0f\x5c\x89\x59\x10\x69\xdf\xd8\xfb\x1e\xc7\x06\x2c\x9d\x81\x59\x49\xce\xb3\x4a\xfd\x94\x6e\xf9\xe5\xea\xeb\x6e\x4a\x69\xd7\xea\xa3\xa7\x7a\x9c\x2f\xf2\xd4\x55\xe7\xf9\x5b\x1b\x9b\xdf\x53\x29\x0d\xef\x5f\xa4\xe2\xd8\xb0\x7b\x75\xf6\xa3\xa4\x1c\x74\x5b\x74\x3e\x72\x92\x3e\xdf\x3b\x3d\x68\xa4\x7e\x90\x39\x05\x59\x4d\xb6\x39\x3b\x78\x3a\x0f\x3c\x86\x4a\x0a\x1e\xec\xbe\x9d\x61\xce\xb7\x68\x97\xf3\x7e\x75\x87\xd6\xbc\x74\x88\x53\xd6\x74\x39\x7a\x49\xba\xbf\x74\x57\x6e\x99\xbd\x0c\xbc\x61\xcf\xf1\xdb\x85\x8b\x79\x1e\x4f\x74\x39\xe7\xdf\x18\x2a\x9f\x7e\xb9\xb0\xd8\xc2\xfb\xef\x0d\x16\x37\xc9\x37\x5d\x09\x2c\xdd\xfd\x41\xd3\xfe\x2b\x87\xfa\xa5\xa6\xde\x3e\xaf\x2f\x95\x70\x6f\xc5\x7a\xd6\xdc\x34\x58\x98\x1f\x33\x1f\xa9\xca\xe8\xb0\xf4\x8a\x19\xe9\xe1\xf8\x0e\x2b\xfa\xe2\x60\x04\x75\x4c\x25\x77\xb3\xec\x2f\x92\x86\xbd\x04\x4b\x6f\x28\xfd\xf8\xfc\xf1\xf3\xc7\x68\x8a\xea\xfc\x79\xf5\xb5\x31\x86\x15\x98\x76\x0d\x54\xea\x22\x53\x8e\xc6\x0f\xb9\x90\x25\x16\xef\xa8\xc2\x90\xda\x10\xaa\x7f\x0d\x2e\xeb\x4b\xe6\xb4\x91\xbf\xd7\x26\x74\x9b\x10\xfe\x6d\x21\x33\xad\xfa\x24\x02\xb7\xcb\x17\x54\xd1\x53\xf8\x9c\xeb\xdd\x59\xb7\x9c\x75\x9e\xea\x4a\x1f\x10\x05\xcd\x5b\x0b\xfb\x97\x7c\x7d\x9e\xe7\xcf\x34\x75\x33\xfa\x5f\x00\x00\x00\xff\xff\xc3\x00\x8c\xe0\x4b\x1d\x00\x00")

func osdCustomerMonitoring05RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCustomerMonitoring05RoleYaml,
		"osd-customer-monitoring/05-role.yaml",
	)
}

func osdCustomerMonitoring05RoleYaml() (*asset, error) {
	bytes, err := osdCustomerMonitoring05RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-customer-monitoring/05-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdCustomerMonitoring06RolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x8f\xb1\x4e\x43\x31\x0c\x45\xf7\x7c\x85\xd5\x3d\xa9\xd8\x50\x46\x16\xf6\x0e\xec\x7e\x89\xdb\x9a\x26\x76\x14\x3b\x0c\x7c\x3d\x7a\x20\xc1\x04\x08\xf6\x73\xef\xd1\xc1\xc1\x4f\x34\x8d\x55\x32\xcc\x0d\x4b\xc2\xe5\x57\x9d\xfc\x8a\xce\x2a\xe9\x76\x6f\x89\xf5\xf8\x72\x17\x6e\x2c\x35\xc3\x49\x1b\x3d\xb0\x54\x96\x4b\xe8\xe4\x58\xd1\x31\x07\x00\xc1\x4e\x19\x2a\x55\x2e\xe8\x54\x23\xd6\xce\x62\x51\x07\x89\x5d\xf9\xec\xb1\x2c\x73\xed\x34\x63\x57\x61\xd7\xb9\x1f\x7c\xcc\x6c\x60\xa1\x0c\xbf\xa1\x0d\x37\x6a\xb6\xbb\x00\x70\x70\xfa\xe4\x53\xd1\x7e\xec\x28\x78\xa1\x9a\xe1\xe0\x73\xd1\x21\x4c\x6d\x74\xa2\xf3\x8e\xe3\xe0\xc7\xa9\x6b\xfc\xd0\x17\x00\xbe\xf2\xfe\x5b\x63\x6b\x7b\xa6\xe2\x96\x43\xfc\x93\xf3\x1d\xfc\x56\x1a\xde\x02\x00\x00\xff\xff\x33\x7e\x14\x36\xa1\x01\x00\x00")

func osdCustomerMonitoring06RolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdCustomerMonitoring06RolebindingYaml,
		"osd-customer-monitoring/06-rolebinding.yaml",
	)
}

func osdCustomerMonitoring06RolebindingYaml() (*asset, error) {
	bytes, err := osdCustomerMonitoring06RolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-customer-monitoring/06-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xcc\x31\x4e\x04\x31\x0c\x85\xe1\x3e\xa7\xb0\xa6\xcf\xac\x68\x73\x08\x4a\x7a\x6f\xe6\x11\x2c\x12\x3b\x24\x9e\x11\xc7\x47\xa0\x45\xab\x29\x10\x5b\xda\xfa\xfe\xc7\x5d\x5e\x30\xa6\x98\x26\x3a\x9e\xc2\xbb\xe8\x96\xe8\x99\x1b\x66\xe7\x8c\xd0\xe0\xbc\xb1\x73\x0a\x44\xac\x6a\xce\x2e\xa6\xf3\xfb\x24\xb2\x0e\x9d\x6f\xf2\xea\xab\xd8\x45\x6d\x43\x9c\xa8\xc8\x6e\x23\xd1\xb2\x04\xa2\xca\x57\xd4\x1b\xe6\x2e\xeb\x3d\xc8\xd6\x2e\x8d\x95\x0b\xb6\x44\x8b\x8f\x1d\xcb\x8f\xba\xfd\xd6\xd3\xf4\xc4\x38\x24\x23\xd6\x6b\xfc\xd8\xcd\x39\xe2\x13\xad\xfb\x03\xa1\xdb\xe0\x82\xd8\x8f\xbf\xc3\x53\x90\xeb\x3e\x1d\x23\x56\x2b\x45\xb4\xfc\x0f\x9b\xa9\xb8\x8d\xb3\x55\x6e\x48\x77\xff\xbb\x16\xbe\x02\x00\x00\xff\xff\xda\x45\x94\xc3\x6c\x01\x00\x00")

func osdLogging00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging00NamespaceYaml,
		"osd-logging/00-namespace.yaml",
	)
}

func osdLogging00NamespaceYaml() (*asset, error) {
	bytes, err := osdLogging00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/00-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging01OperatorgroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xb1\x4e\x04\x31\x0c\x44\xfb\x7c\x85\x75\xfd\x05\x5d\x9b\x0e\x51\x20\x24\x04\x54\xf4\x66\x63\x82\x45\x62\x47\x8e\x77\xbf\x1f\xe5\x08\x12\xc5\x55\x89\xf5\x9e\x66\x06\x3b\xbf\x93\x0d\x56\x49\xa0\x9d\x0c\x5d\x6d\xc4\x4d\x8d\x74\x3e\xed\xee\xb8\x84\x6f\x96\x9c\xe0\x75\xd1\x47\xd3\xbd\x87\x46\x8e\x19\x1d\x53\x00\x40\x11\x75\x74\x56\x19\xf3\x04\xd0\xda\x62\x37\x3d\x38\x53\xbe\x7f\x7b\x1a\x09\x1e\xea\x3e\x9c\xec\x59\x4b\x61\x29\xf1\xb8\xc4\xba\xbe\xda\x49\xc6\x17\x7f\x7a\x64\x0d\x00\x15\x3f\xa8\xae\x18\xec\xfc\x0f\xcf\x31\x0d\x05\x0b\xe5\x04\x27\xb7\x9d\x4e\x01\x40\xb0\xd1\x75\xf9\xaf\x75\x5e\xb1\x8b\x8c\x8e\xdb\x4d\x3c\x3a\x6d\xb3\xc4\xd1\x0a\xf9\xcb\x9f\x7a\x2d\x3e\xdf\xf0\x7f\x02\x00\x00\xff\xff\xa9\x82\x71\x32\x27\x01\x00\x00")

func osdLogging01OperatorgroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging01OperatorgroupYaml,
		"osd-logging/01-operatorgroup.yaml",
	)
}

func osdLogging01OperatorgroupYaml() (*asset, error) {
	bytes, err := osdLogging01OperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/01-operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging02CuratorConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x56\x4d\x6f\xdb\x46\x13\xbe\xeb\x57\x0c\xfc\x26\xd0\xdb\xc2\xa2\x9c\x18\xb9\xf0\x50\xc0\x70\xd4\xd6\xa8\x63\x07\xb6\x12\x20\xa8\x5b\x62\x44\x0e\xa9\xad\x96\x3b\xc4\xee\x50\x12\x91\xe6\xbf\x17\xbb\x5c\xca\xa2\xdc\xe6\x24\x72\xe6\x99\x67\xbe\x47\xc4\x46\x7d\x26\xeb\x14\x9b\x14\xb6\x6f\x26\x05\x0a\xa6\x13\x00\xcc\x45\xb1\x71\x49\x87\xb5\x4e\xe1\xef\x09\x00\xc0\xff\x60\x36\x9b\xc5\xa7\x07\xaa\xa9\x5e\x91\x3d\x07\x4d\xb8\x25\x40\xd8\x50\x07\x54\x37\xd2\x81\x2a\x41\xd6\x64\x09\x94\x03\xc3\xb0\x45\xdd\x52\x02\x70\xc7\x86\x60\xa7\xb4\x86\x95\xc7\x3b\xb1\xca\x54\xe7\x91\xcf\xb0\x00\xc2\xc7\x4e\xd6\x6c\xe0\xcc\x43\x97\x5d\x43\x67\xbd\x36\x62\xae\xb4\x63\xb0\xd1\x31\xc8\x1a\x05\x50\x6b\xa0\x3d\xd6\x8d\x26\x07\x6b\x1f\xc8\xb4\x50\x0e\x57\x9a\xb2\x3e\x83\x29\x38\x12\x10\x86\xa5\x0d\x41\xdc\x94\xd0\x71\x1b\x09\x77\x68\x82\xae\x75\x04\xb2\x56\x2e\x66\x0d\xe8\x00\x41\xa8\x6e\x34\x0a\x9d\xfb\x70\x5d\x6b\xc9\x23\x03\x99\x47\x0a\xc3\xcf\xa8\x1d\x01\x96\x42\x36\xf2\xe5\xdc\x74\xca\x54\xa0\x24\x89\x92\x58\xc6\x34\xbe\x02\xbc\x79\x7e\x1c\x8a\x9c\x42\x41\x9a\x84\x32\x65\x0a\x95\x93\x3b\x02\x14\xe4\x72\xab\x9a\x1e\xf5\xd3\xec\x48\x03\xf0\x3e\x18\x41\xc2\x0d\x59\x0c\x5e\x20\x12\x00\xeb\xa2\x2f\x90\x81\xcb\x0b\x28\xb0\x73\xc9\xc8\xf4\xa6\x32\xec\xf3\x59\x13\x90\xb5\x6c\x63\xc7\xa0\x54\x5a\xc8\x42\xc1\xe4\x1b\x27\x23\x1b\x4b\xae\xd5\x02\xca\x00\x9a\x18\xb8\x2f\x33\x68\xe5\x04\xb8\x3c\xf8\xfe\xbf\x0a\xe4\x59\x18\x85\xcc\x6b\x7f\x18\x3b\x7f\x24\x82\xb5\x48\xe3\xd2\xf9\x7c\xb7\xdb\x25\xa4\xd1\x89\xca\x93\x9c\xe7\x55\xab\x0a\x9a\x93\x99\x47\x99\x23\xb4\xf9\x7a\x9e\x6b\x45\x46\xe6\x79\x6b\x51\xd8\xce\xdf\x25\x6f\xe7\xb4\xcf\xc6\x45\x4b\xd6\x52\xeb\x23\x3f\xdc\x9c\x14\xbe\xff\x7d\xdc\xa1\xd6\xbc\x83\xc8\x95\xd0\x3e\xa7\x80\x4c\xee\xf8\x26\x66\x70\x90\x8d\x6c\x5f\xa4\x95\x86\x91\x3a\xe1\xbf\x31\xe0\x28\x67\x53\xb8\x73\x28\xa8\xc4\x50\x32\x07\x97\x17\x17\x23\xa0\xa8\x9a\xb8\x95\x8c\xb7\x64\xad\x2a\x28\x85\x57\x5f\xaf\x3f\x3d\x5c\x2d\xef\x1f\xb2\xe5\xcd\x87\xc5\xfd\xa7\xe5\xb7\x13\xe6\xf7\x6c\xa6\x02\x2e\xc6\x8f\xa6\x03\xf6\x4b\xf6\x1c\xad\x1b\x19\xe4\x6c\x44\x99\x96\x32\x55\x66\x07\x48\xda\xcf\xec\x09\xf3\x7d\xd0\xa1\xd6\x1d\xc4\xdd\x89\xfd\x3d\xf7\x8b\x51\xb6\x1a\x4a\xb6\x50\xd0\xaa\xad\x2a\x65\xaa\x91\xf5\x78\xd9\x5e\xf2\xfb\xa5\xd5\x71\xae\x1c\xa0\x25\x58\x71\x6b\x0a\x58\x75\xa0\xb9\x52\x39\x6a\xb8\xba\x7b\x7f\x64\x10\xa1\xc7\x7d\x9b\x45\xa1\x74\x0d\xa5\xd0\xa0\x08\xd9\x71\x6f\x36\xca\x14\x29\x58\xaa\x68\x3f\x92\x87\xcb\x93\xc2\xf4\xcf\xa7\xa3\x2d\x79\x4a\x92\x1f\x5f\x4d\x47\x38\xda\xe7\xba\xf5\x5d\x38\x0d\x7f\xec\x1a\xab\xd3\xd2\x7d\x44\xeb\x4f\x87\xaa\xc9\x09\xd6\x0d\x94\x96\x6b\xbf\x09\xb4\x07\x83\xf5\x18\xed\xb8\xb5\x39\xa5\x2f\x15\x85\xb2\x14\xcb\x17\x16\xf7\xc5\xa4\xf4\x97\x32\x85\xe9\xeb\x2f\xc9\xeb\x3a\x79\x5d\x8c\xa3\x6f\x8d\x92\x34\x6c\xf9\x0b\x71\x96\x73\x6b\x24\x85\xcb\x8b\xef\xe7\x9b\xb3\x29\x55\x75\x72\xec\x6f\x39\xf4\x7b\xb8\xaf\xc3\xce\x44\xb0\xaf\x0c\x4d\x22\xb4\x35\x39\xd7\x35\x19\x01\x34\xc5\xf3\x39\x15\x86\x61\xc2\xc3\x7d\x89\x1b\xe1\xfa\x3a\x91\xd9\xc2\x16\x6d\x8c\x3a\x19\x94\x87\xd6\xf7\x0b\x7e\x34\x09\x3e\xc5\x43\x2e\x27\xf8\x31\xfc\x19\xfd\x76\x08\x51\x18\x36\x44\x0d\x70\xe3\xfc\xe8\xb9\x30\xd4\x08\x85\x2a\x4b\xb2\x3e\xf2\xa2\xed\x07\xa4\x67\x38\x1a\x98\xef\x3b\x78\x33\x38\x18\xca\xd4\xf3\x1a\xb6\x35\x6a\x68\x2c\xff\x45\x79\xbc\xa4\x75\x87\x4d\xf3\xdf\xe9\xed\x88\x36\x81\x10\x86\x52\xbf\x8b\x1d\x39\x9b\xcd\x66\x4f\xa6\x3f\x83\xe9\x93\x01\x58\xb3\x13\x17\x9e\x66\xf0\xea\xeb\xe2\x31\xfb\xf5\xfe\x71\xf9\xcd\xbf\x37\x6c\x25\xed\x65\x1f\xef\x1f\x7a\x59\xeb\x28\x73\x4e\xf7\xae\xfc\xd1\xf2\xc2\x9c\xac\xa8\x52\xe5\x28\x14\xf1\xd7\x57\x01\xdd\xbb\xc9\xbc\x7e\x50\xdc\xde\x2c\xee\x96\xd9\xf5\x22\xf2\x45\xc4\x86\xba\x9e\xf2\x18\xf4\xdb\xe2\x4b\xc0\x38\xa7\x33\xc3\xd9\x16\xb5\x2a\x82\x8b\x30\x6a\x5e\x13\x6f\xdf\xbf\x9d\x3c\xaf\xae\xd1\x09\xd9\x8c\x8d\x8e\xec\xd1\x50\xf7\xd3\x18\x92\xd6\x5c\x69\xda\x92\x3e\xe6\xb8\xbd\xff\x25\xbb\x5d\x7c\x5e\xdc\x7e\x8b\x88\xd2\x77\xc0\x2f\x46\x3f\x27\x5e\xba\xd2\x98\x6f\xc2\xed\x0e\xcc\xbf\x4f\x47\xff\x33\xd3\x73\x98\xb6\x56\x6b\xb5\xba\x9c\xfe\xe1\xe1\x4f\xe6\x6c\xd2\x9f\x96\xeb\x30\xf2\x1f\xb0\x99\xd4\x24\x38\x7c\x23\x69\x5c\x91\x8e\xe3\x81\x8d\xf2\x23\x63\xdc\x5a\x95\x92\xe4\x5c\xcf\x6b\x34\x58\x51\x91\xc2\x99\xd8\x36\x7c\xc9\xf8\xcd\x4f\x87\xde\xc6\x77\xd7\xa0\x3f\x0a\x07\xd3\x59\xcc\x73\xf2\x4f\x00\x00\x00\xff\xff\xfe\x8e\xa7\xd9\x98\x09\x00\x00")

func osdLogging02CuratorConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging02CuratorConfigmapYaml,
		"osd-logging/02-curator.configmap.yaml",
	)
}

func osdLogging02CuratorConfigmapYaml() (*asset, error) {
	bytes, err := osdLogging02CuratorConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/02-curator.configmap.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging03StorageQuotaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x3b\x8e\xc3\x30\x0c\x84\xe1\x5e\xa7\x20\xdc\xdb\xeb\x6d\xb6\xd0\x05\xb6\x4e\x8a\xf4\x8c\x34\x91\x85\x58\x0f\x8b\x54\xce\x1f\x38\x36\xd2\x11\xe0\xe0\xfb\xb9\xc6\x1b\x9a\xc4\x92\x2d\xbd\x7e\xcd\x33\x66\x6f\xe9\x0a\x29\xbd\x39\x5c\x7a\x51\x36\x09\xca\x9e\x95\xad\x21\x5a\xf9\x8e\x55\xf6\x8b\x88\x6b\x9c\x4a\x45\x96\x25\x3e\x74\x72\x25\xfd\x24\xce\x1c\xe0\x2d\x0d\xda\x3a\x06\x43\x94\x39\xc1\xd2\x5a\x42\x88\x39\x8c\xa2\xa5\x71\xc0\xb8\x7d\xdc\xe3\x2b\x95\x1d\x2c\x7d\xa1\xf1\x1c\x1b\xa9\x70\x7b\x68\xe1\xe6\x8f\x60\xc3\xd6\x21\x2a\xd3\xe9\x58\xfa\x9b\xe7\xff\x68\xde\x01\x00\x00\xff\xff\x26\x1e\x48\x63\xc4\x00\x00\x00")

func osdLogging03StorageQuotaYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging03StorageQuotaYaml,
		"osd-logging/03-storage-quota.yaml",
	)
}

func osdLogging03StorageQuotaYaml() (*asset, error) {
	bytes, err := osdLogging03StorageQuotaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/03-storage-quota.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging05RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x92\xc1\x4e\xc3\x30\x0c\x86\xef\x7d\x8a\x68\x97\x49\x48\xed\xc4\x0d\xe5\x05\xb8\x73\xe0\xee\x3a\xa6\xb3\x96\xc6\x91\x9d\x14\x89\xa7\x47\xe9\xca\xd8\xa8\x38\xf9\x6f\xeb\xfa\xfb\xac\x04\x32\xbf\x93\x1a\x4b\xf2\x4e\x47\xc0\x01\x6a\x39\x8b\xf2\x17\x14\x96\x34\x5c\x5e\x6c\x60\x39\x2d\xcf\xdd\x85\x53\xf0\xee\x4d\x22\x75\x33\x15\x08\x50\xc0\x77\xce\x45\x18\x29\x5a\x4b\xce\x41\xe6\x41\x32\x25\x3b\xf3\x47\x19\x50\xe6\xd3\x0c\x09\x26\x0a\xde\x1d\x8a\x56\x3a\x74\xce\x25\x98\xc9\xbb\x40\x81\x11\x0a\x85\x1e\xc2\xcc\xc9\xfa\xdb\x6f\x7d\x94\x69\xe2\x34\x6d\xad\x96\x01\xc9\xbb\xfd\x67\xad\x91\xcc\x77\x7d\x83\xbe\xaa\xd4\xbc\x3a\xf4\xee\xd0\x20\x4a\x26\x55\x91\xb6\x77\xb7\x41\xb6\x3e\x66\x09\xbf\xe1\x14\xa5\xb1\x16\xd2\x71\xeb\x8e\x6c\x65\x0d\x13\x5d\xeb\x27\x14\x3c\xef\x49\x9b\xc9\xdd\xc6\x2c\x7b\x36\xc6\x6a\x85\x74\x6b\xb6\x47\x14\x2a\x41\xa1\x35\x06\x8a\xf4\x10\x51\x62\x24\x6c\x87\xf0\x20\x73\xb3\xcb\xab\x55\x4b\x35\x87\x9f\x29\xff\xa8\x4a\x26\x85\x22\x6a\x03\x8a\x92\xb4\x32\xef\x55\xad\x8e\x86\xca\xb9\x31\xed\x5e\xde\x48\x17\x46\x5a\xae\xf7\xe4\xcf\x0e\xc7\xa7\x63\xf7\x1d\x00\x00\xff\xff\xa1\xac\x7b\xd0\x45\x02\x00\x00")

func osdLogging05RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging05RoleYaml,
		"osd-logging/05-role.yaml",
	)
}

func osdLogging05RoleYaml() (*asset, error) {
	bytes, err := osdLogging05RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/05-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdLogging06RolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcf\xbd\x4e\x04\x31\x0c\x04\xe0\x3e\x4f\x61\x5d\xbf\x39\xd1\xa1\x94\x34\xf4\x57\xd0\xcf\x26\xbe\x3d\x73\x89\x1d\xe5\x87\x82\xa7\x47\x0b\x12\x14\x08\xa4\xed\x2c\x79\xac\xcf\x83\x2a\x2f\xdc\xba\x98\x06\x6a\x2b\xa2\xc7\x1c\x37\x6b\xf2\x8e\x21\xa6\xfe\xfe\xd8\xbd\xd8\xf9\xed\xc1\xdd\x45\x53\xa0\x8b\x65\x7e\x12\x4d\xa2\x9b\x2b\x3c\x90\x30\x10\x1c\x51\xc6\xca\xb9\xef\x13\x11\xaa\x78\xab\xac\xfd\x26\xd7\xe1\xa3\x95\x73\x81\x62\xe3\x14\xe8\x34\xda\xe4\x93\x23\x52\x14\x0e\x94\x38\x49\xc4\xe0\xb4\x20\x15\xd1\xbe\x7c\x9f\x2d\xd9\xb6\x6d\x47\xbe\xa2\xbd\x22\x72\xa0\xdf\xeb\x66\x99\x2f\x7c\xdd\x61\x54\x79\x6e\x36\xeb\x3f\x3d\x1c\xd1\x4f\x8d\x23\x5f\xf4\xb9\xbe\x72\x1c\x3d\xb8\xe5\x90\xf3\x19\xfc\x13\x72\x1f\x01\x00\x00\xff\xff\xd8\xb5\x59\xaa\x7d\x01\x00\x00")

func osdLogging06RolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdLogging06RolebindingYaml,
		"osd-logging/06-rolebinding.yaml",
	)
}

func osdLogging06RolebindingYaml() (*asset, error) {
	bytes, err := osdLogging06RolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-logging/06-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdOauthTemplatesOsdOauthTemplatesPatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\xb1\x6a\xc3\x40\x0c\x86\xf7\x7b\x0a\xa1\x25\x4b\x9d\xd2\x55\x9b\x1f\xa0\x74\x68\xe9\x7e\xd8\x8a\x2d\x7a\x3e\x89\xd3\x39\xc5\x98\x7b\xf7\xe2\x84\x66\xcd\x26\xc4\xf7\xfd\x3f\x7f\x34\xf9\xe6\xe2\xa2\x99\x60\xd0\x7c\x91\xe9\xac\xc6\xd9\x67\xb9\xd4\xb3\xe8\xeb\xf5\x2d\x44\xb3\xb4\xbd\xeb\xc8\x04\x7d\xfa\x8d\x9b\xf7\xc7\x23\xfc\x48\x1e\x09\x3e\xfa\xb5\xce\x21\xc7\x85\x09\x86\xb4\x7a\xe5\x12\x2c\xd6\x61\x26\x38\xed\xe8\xc6\x03\xd2\x8e\x95\x17\x4b\xb1\xb2\x23\xc1\x8e\x49\x27\xc9\xb7\xeb\xf0\x90\x00\xd5\xc7\x4e\xe3\x5a\xe7\xee\x41\x76\x77\xaa\xbd\xa0\x15\xbd\xca\xc8\xe5\x93\x13\x0f\x55\x34\x23\x05\x78\x22\xff\x3b\x7e\x04\x70\x29\x5a\x9e\xf6\xdd\x28\xc7\xd6\x5a\x3b\xdd\x27\x7c\x6d\xc6\x04\x0b\x97\x89\xc3\x5f\x00\x00\x00\xff\xff\x96\x7c\x47\xec\x28\x01\x00\x00")

func osdOauthTemplatesOsdOauthTemplatesPatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdOauthTemplatesOsdOauthTemplatesPatchYaml,
		"osd-oauth-templates/osd-oauth-templates.patch.yaml",
	)
}

func osdOauthTemplatesOsdOauthTemplatesPatchYaml() (*asset, error) {
	bytes, err := osdOauthTemplatesOsdOauthTemplatesPatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-oauth-templates/osd-oauth-templates.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\x3f\xcb\xc2\x30\x10\x80\xf1\x3d\x9f\xe2\xe8\x52\x08\xa4\x2f\xef\x9a\x4d\x68\x71\x73\x50\x71\x3f\x93\x6b\x1b\xcc\x3f\x72\x57\x3f\xbf\x14\x8b\xfb\xef\x79\xb0\x86\x07\x35\x0e\x25\x5b\x78\xff\x2b\x96\x16\xf2\x32\xa2\xa0\x55\x00\xd4\x5a\x69\x3c\xac\x92\xa2\x85\x5e\x6b\x0d\xe7\xe9\x32\x5d\x4f\xf7\x69\x04\xad\x75\xaf\x5e\x21\x7b\x0b\x37\x72\x8d\x44\x25\x12\xf4\x47\x99\x31\x91\x85\xc2\xde\x14\xdc\x64\x35\x42\xa9\x46\x14\x62\xf3\x7d\x1e\x84\x2b\xba\xdd\x55\xca\xbc\x86\x59\x8c\x2b\x79\x0e\x8b\x02\x88\xf8\xa4\xc8\xfb\x0a\x00\x6b\x18\x7e\x64\x70\x25\xfd\x25\xcc\xb8\x90\xb7\xd0\x49\xdb\xa8\xfb\x04\x00\x00\xff\xff\x03\x24\x90\xcd\xc5\x00\x00\x00")

func osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYaml,
		"osd-oauth-templates-errors/osd-oauth-templates-errors.secret.yaml",
	)
}

func osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYaml() (*asset, error) {
	bytes, err := osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-oauth-templates-errors/osd-oauth-templates-errors.secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcd\x31\x4b\xc6\x30\x10\xc6\xf1\x3d\x9f\xe2\xe8\x52\x08\xa4\xe2\x9a\x4d\x68\x71\x73\x50\x71\x3f\x93\x6b\x7a\x98\x5c\x42\x72\xf5\xf3\x4b\xa5\xbc\xfb\xef\xf9\x3f\xd8\xf8\x8b\xfa\xe0\x2a\x1e\x7e\x9f\xcd\xd0\xce\x92\x56\x54\xf4\x06\x20\xd7\xc4\xb2\x1c\x5a\xb2\x87\xd9\x5a\x0b\xaf\xdb\xdb\xf6\xfe\xf2\xb9\xad\x60\xad\x9d\xcd\x0f\x4b\xf4\xf0\x41\xa1\x93\x9a\x42\x8a\xf1\x1e\x0a\x16\xf2\x50\x47\x74\x15\x4f\x3d\x9c\x52\x69\x19\x95\x86\xfb\x4f\xde\x62\x34\x0c\x17\x6b\x24\xe3\xe0\x5d\x5d\xa8\xb2\x73\xba\x8e\xf1\x9b\xf2\xb8\x4a\x00\xd8\x78\x79\x90\x25\xd4\xf2\x54\x50\x30\x51\xf4\x30\x69\x3f\x69\xfa\x0b\x00\x00\xff\xff\xf0\xac\xea\xe3\xc3\x00\x00\x00")

func osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYaml,
		"osd-oauth-templates-login/osd-oauth-templates-login.secret.yaml",
	)
}

func osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYaml() (*asset, error) {
	bytes, err := osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-oauth-templates-login/osd-oauth-templates-login.secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xcc\xbf\x6a\x80\x30\x10\x80\xf1\x3d\x4f\x71\xb8\x08\x81\x58\xba\x66\x2b\x28\xdd\x3a\xb4\xa5\xfb\x35\x39\xf5\x68\xfe\x91\x3b\x7d\xfe\x22\x88\xfb\xef\xfb\xb0\xf1\x0f\x75\xe1\x5a\x3c\x9c\xaf\x46\xb4\x73\xd9\x66\x54\xf4\x06\xa0\xf5\x7a\x72\xa4\x2e\xd3\xae\x39\x79\x18\xad\xb5\xf0\xbe\x7c\x2c\x9f\x6f\xdf\xcb\x0c\xd6\xda\xd1\xfc\x71\x89\x1e\xbe\x28\x74\x52\x93\x49\x31\xde\x71\xc1\x4c\x1e\xaa\x44\x57\xf1\xd0\xdd\x29\xe5\x96\x50\x49\xdc\xb3\xbd\x95\x34\x0c\x17\x6d\x54\x64\xe7\x55\x5d\xa8\x65\xe5\xcd\x00\x24\xfc\xa5\x24\xd7\x0d\x00\x1b\x4f\x0f\x99\x42\xcd\x2f\x19\x0b\x6e\x14\x3d\x0c\xda\x0f\x1a\xfe\x03\x00\x00\xff\xff\xfb\xa9\x37\x44\xcb\x00\x00\x00")

func osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYaml,
		"osd-oauth-templates-providers/osd-oauth-templates-providers.secret.yaml",
	)
}

func osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYaml() (*asset, error) {
	bytes, err := osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-oauth-templates-providers/osd-oauth-templates-providers.secret.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdProjectRequestTemplate00ClusterroleProjectConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8d\xb1\x6e\xc3\x30\x0c\x44\x77\x7d\x05\x91\x5d\x0a\xba\x15\x5a\x3b\x74\xef\xd0\x9d\x96\x18\x9b\x8d\x24\x0a\x14\x95\x02\xfd\xfa\x22\xb6\x87\x6c\x87\xe3\x7b\x3c\xec\xfc\x4d\x3a\x58\x5a\x04\x5d\x30\x05\x9c\xb6\x89\xf2\x1f\x1a\x4b\x0b\xf7\xf7\x11\x58\xae\x8f\x37\x77\xe7\x96\x23\x7c\x94\x39\x8c\xf4\x4b\x0a\xb9\x4a\x86\x19\x0d\xa3\x03\x68\x58\x29\x42\xa6\xcc\x09\x8d\xb2\xc7\x5c\xb9\x0d\xdf\x55\x7e\x28\x99\x4f\xd2\x6e\xbc\x3a\x80\x82\x0b\x95\xf1\x34\x00\xb0\x73\x90\x4e\x6d\x6c\x7c\xb3\x90\xa4\x5e\x2b\x36\x5c\x29\x47\xb8\x98\x4e\xba\x38\x9d\x85\x46\x74\xfe\x89\x7e\xaa\xcc\xbe\x9b\x1e\x8e\x77\x2f\x32\x8b\x03\x50\x1a\x32\x35\xd1\x09\x9d\xdb\xc3\x01\x3c\x48\x97\xb3\x5d\xc9\x8e\x2b\x5a\xda\xf6\x34\x7b\x46\xa3\x3d\xfe\xee\xe5\x7f\x00\x00\x00\xff\xff\x35\x7e\xc2\x5f\x13\x01\x00\x00")

func osdProjectRequestTemplate00ClusterroleProjectConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdProjectRequestTemplate00ClusterroleProjectConfigYaml,
		"osd-project-request-template/00-clusterrole.project-config.yaml",
	)
}

func osdProjectRequestTemplate00ClusterroleProjectConfigYaml() (*asset, error) {
	bytes, err := osdProjectRequestTemplate00ClusterroleProjectConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-project-request-template/00-clusterrole.project-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdProjectRequestTemplate01ClusterrolebindingProjectConfigYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8e\x31\x4f\x03\x31\x0c\x46\xf7\xfc\x0a\xab\xfb\xa5\x62\x43\x19\x61\x60\xef\xc0\xee\x26\xbe\xab\x69\x62\x47\xb1\x53\x09\x7e\x3d\x3a\x46\x10\x08\xc4\x68\xe9\xf9\x7b\x0f\x3b\x3f\xd3\x30\x56\x49\x30\xce\x98\x23\x4e\xbf\xe8\xe0\x37\x74\x56\x89\xd7\x7b\x8b\xac\xc7\xdb\x5d\xb8\xb2\x94\x04\x8f\x75\x9a\xd3\x38\x69\xa5\x07\x96\xc2\xb2\x85\x46\x8e\x05\x1d\x53\x00\x10\x6c\x94\xa0\x50\xe1\x8c\x4e\x65\xc1\xd2\x58\x6c\xe9\x43\x5f\x28\xfb\x92\x55\x56\xde\x02\x40\xc5\x33\x55\xdb\x3f\x00\xb0\x73\xd4\x4e\x62\x17\x5e\x3d\x66\x6d\xc7\x86\x82\x1b\x95\x04\x07\x1f\x93\x0e\x61\x68\xa5\x13\xad\x3b\x8e\x9d\x9f\x86\xce\xfe\x43\x6c\x00\xf8\xd2\xfa\xeb\x34\x9b\xe7\xfd\xb4\x14\x96\x3f\xb9\x3e\xc0\x6f\x2d\xff\x1a\xb3\x57\x73\x6a\xc9\x68\xdc\x38\x13\xe6\xac\x53\xdc\xd2\x27\x47\x78\x0f\x00\x00\xff\xff\xd0\x8c\x84\x23\xc9\x01\x00\x00")

func osdProjectRequestTemplate01ClusterrolebindingProjectConfigYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdProjectRequestTemplate01ClusterrolebindingProjectConfigYaml,
		"osd-project-request-template/01-clusterrolebinding.project-config.yaml",
	)
}

func osdProjectRequestTemplate01ClusterrolebindingProjectConfigYaml() (*asset, error) {
	bytes, err := osdProjectRequestTemplate01ClusterrolebindingProjectConfigYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-project-request-template/01-clusterrolebinding.project-config.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8e\xb1\x4e\x03\x31\x10\x44\x7b\x7f\xc5\x2a\xbd\x2f\xa2\x43\xfe\x01\x3a\x0a\x0a\xfa\x8d\x3d\xb9\x5b\x72\xf6\x1a\x7b\x1d\x24\xbe\x1e\xdd\x25\x42\x11\x74\xa3\x7d\x6f\x56\xc3\x55\xde\xd1\xba\x68\x09\xd4\x4e\x1c\x27\x1e\xb6\x68\x93\x6f\x36\xd1\x32\x5d\x9e\xfb\x24\x7a\xbc\x3e\xb9\x8b\x94\x14\xe8\x4d\x57\xb8\x0c\xe3\xc4\xc6\xc1\x11\x15\xce\x08\x94\x90\x24\xb2\x21\x79\x4e\x59\x4a\xf7\xb5\xe9\x07\xa2\xf9\x86\xcf\x81\x6e\x77\xb1\x57\x8e\x08\xa4\x15\xa5\x2f\x72\x36\x1f\xb5\x9c\x65\x76\x44\x2b\x9f\xb0\xf6\xed\x21\x11\x57\x99\x7e\x95\x29\x6a\x3e\x66\x2e\x3c\x23\x05\x3a\x58\x1b\x38\xb8\x36\x56\xf4\xe0\xfc\xa6\xbe\x34\x1d\x75\x6f\x7a\x32\xe4\xba\xb2\xe1\xa1\x2e\xea\x88\x1a\xba\x8e\x16\xf1\x47\xeb\x0f\xe8\x75\x9b\x77\xc3\xff\xb7\x5f\xd1\x4e\x77\x38\xc3\x6e\x12\x5b\x5c\xf6\x34\x6a\x62\xc3\x1e\xbf\xf6\xe3\x4f\x00\x00\x00\xff\xff\xf1\xe9\x96\x32\x53\x01\x00\x00")

func osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYaml,
		"osd-project-request-template/02-role.dedicated-admins-project-request.yaml",
	)
}

func osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYaml() (*asset, error) {
	bytes, err := osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-project-request-template/02-role.dedicated-admins-project-request.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x8f\x31\x4b\x04\x41\x0c\x46\xfb\xf9\x15\xe1\xfa\x9d\xc3\x4e\xa6\xb4\xb1\xbf\xc2\x3e\x3b\x93\xdd\x8b\xb7\x93\x8c\x93\xcc\x81\xfe\x7a\x59\x11\x05\x41\x51\x2c\x03\x8f\xef\xe5\x61\xe3\x07\xea\xc6\x2a\x09\xfa\x8c\x39\xe2\xf0\xb3\x76\x7e\x41\x67\x95\x78\xb9\xb5\xc8\x7a\xbc\xde\x84\x0b\x4b\x49\x70\xd2\x8d\xee\x58\x0a\xcb\x1a\x2a\x39\x16\x74\x4c\x01\x40\xb0\x52\x82\x42\x85\x33\x3a\x95\x09\x4b\x65\xb1\xa9\x75\x7d\xa4\xec\x53\xa7\xa7\x41\xe6\xef\xa0\x35\xcc\x94\x40\x1b\x89\x9d\x79\xf1\x29\xab\x2c\xbc\x06\x80\x0d\x67\xda\x6c\x1f\x04\xc0\xc6\xf1\x03\x89\x59\xeb\xb1\xa2\xe0\x4a\x25\xc1\xc1\xfb\xa0\x43\xe8\xba\xd1\x89\x96\x1d\xc7\xc6\xf7\x5d\x47\xfb\x21\x22\x00\x7c\x36\xfc\xfe\x65\x1b\xf3\x7e\x5b\x0a\xd3\x9f\x2c\x6f\xe0\xb7\x9a\x7f\x8d\xd9\xb3\x39\xd5\x64\xd4\xaf\x9c\x09\x73\xd6\x21\x6e\xe9\x8b\x23\xbc\x06\x00\x00\xff\xff\x8d\xbf\xb0\xaf\xdb\x01\x00\x00")

func osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYaml,
		"osd-project-request-template/03-rolebinding.dedicated-admins-project-request.yaml",
	)
}

func osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYaml() (*asset, error) {
	bytes, err := osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-project-request-template/03-rolebinding.dedicated-admins-project-request.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdProjectRequestTemplate04PatchLabelDefaultNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x31\xae\xc2\x30\x10\x84\xe1\xde\xa7\x18\x6d\xff\x8a\xd7\x6e\x97\x03\x40\x85\xe8\x87\x78\x81\x08\x3b\x59\xc5\x06\x14\x05\xdf\x1d\x05\xe8\x46\x23\xfd\xdf\x6d\x18\xa3\x62\xcf\x6c\xc5\xd9\x5b\xa0\x0f\x47\x9b\xcb\x30\x8d\x8a\xc7\x7f\x18\x99\x4d\x11\xed\xcc\x7b\xaa\x81\xee\x69\xd9\x4d\xd1\x14\x5d\x7a\x72\x29\xdd\x76\x04\x67\xed\xaf\x8a\xd7\x5f\x00\x56\x48\xb6\xca\xc8\x4a\x51\xac\x92\x78\xb2\x54\x3e\x73\xb3\x44\xe5\x87\x49\x43\x43\xfb\xb6\x87\xc5\x4d\x91\x6d\xbe\x58\x78\x07\x00\x00\xff\xff\x43\x3b\x90\x63\x91\x00\x00\x00")

func osdProjectRequestTemplate04PatchLabelDefaultNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdProjectRequestTemplate04PatchLabelDefaultNamespaceYaml,
		"osd-project-request-template/04-patch.label-default-namespace.yaml",
	)
}

func osdProjectRequestTemplate04PatchLabelDefaultNamespaceYaml() (*asset, error) {
	bytes, err := osdProjectRequestTemplate04PatchLabelDefaultNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-project-request-template/04-patch.label-default-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdRegistryRegistryDefaultroutePatchYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xc1\x4a\xc4\x30\x10\x86\xef\x79\x8a\xa1\x7b\xd8\x53\x1b\x16\x3c\xe5\xb6\x78\xf6\x22\xe2\x55\x42\x3a\x4d\x07\x93\x4c\x98\x4c\xd5\xb2\xec\xbb\x4b\x75\x2b\x82\xe0\x2d\x7c\x99\xf9\xfe\xf9\x7d\xa5\x67\x94\x46\x5c\x1c\x50\xf6\x11\x05\x23\x35\x95\x75\xe0\x8a\xe2\x95\x65\x7b\x94\x36\xd3\xa4\x03\xb1\x7d\x3b\x19\x5f\x6b\x5a\x1f\x78\x44\x07\xe7\xf4\xee\xd7\x76\xde\x80\x79\xa5\x32\x3a\xb8\xe7\x32\x51\x34\xc5\x67\x74\x10\xd2\xd2\x14\xc5\x1c\xa0\x7a\x0d\x33\xec\x6e\x50\x06\xfc\xa8\xdc\x10\x46\x9c\xfc\x92\x14\x84\x17\x45\x07\xb3\x6a\x6d\xce\xda\x91\x43\xfb\x15\x1c\x38\xdb\xc0\x45\x3d\x15\x94\xbe\x26\xaf\x13\x4b\xb6\x77\xc3\xc9\xee\xce\xed\x7f\xa2\xb8\x08\x95\xd8\xef\xb0\xff\x29\x31\x6b\x4e\x87\x3f\xb8\xbf\xc5\xf7\x41\xc6\x97\x7f\x05\xe6\xab\x81\x83\xe3\xa5\x6b\x15\x43\xe7\x2e\xdd\x6d\xf7\x71\xbb\xbc\x73\x2a\x0b\x5e\xaf\xc7\xef\xb9\xa7\xb5\xa2\x83\x8c\x12\xd1\x7c\x06\x00\x00\xff\xff\xd4\x4e\xa5\x23\x62\x01\x00\x00")

func osdRegistryRegistryDefaultroutePatchYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdRegistryRegistryDefaultroutePatchYaml,
		"osd-registry/registry-defaultRoute.patch.yaml",
	)
}

func osdRegistryRegistryDefaultroutePatchYaml() (*asset, error) {
	bytes, err := osdRegistryRegistryDefaultroutePatchYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-registry/registry-defaultRoute.patch.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdStrimziOperator00NamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xca\xb1\x12\xc2\x20\x0c\x00\xd0\x9d\xaf\xc8\xb1\xb7\x3d\x57\x3e\xc2\xd1\x3d\x42\xc4\x9c\x90\x70\x24\x75\xf0\xeb\x3d\x1d\xec\xe2\xfe\x70\xf0\x85\xa6\xb1\x4a\x82\xe7\x29\x3c\x58\x4a\x82\x33\x76\xb2\x81\x99\x42\x27\xc7\x82\x8e\x29\x00\x08\x76\x4a\xa0\x83\xc4\xee\x7c\xf3\xc5\x7c\x72\x7f\x71\x00\x40\x11\x75\x74\x56\xb1\x0f\x84\x03\xad\xac\x9b\x68\xa1\xc5\xa8\x51\x76\x9d\x09\x62\x0c\x00\x0d\xaf\xd4\xfe\xe1\xdc\x76\x73\x9a\x4b\xd3\x5a\x59\x6a\x82\xe8\x73\xa7\xf8\x85\x38\x78\x3d\x70\xd6\xbe\x75\x14\xac\x54\x7e\xea\x1d\x00\x00\xff\xff\x1c\xe1\x6a\x75\xce\x00\x00\x00")

func osdStrimziOperator00NamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdStrimziOperator00NamespaceYaml,
		"osd-strimzi-operator/00-namespace.yaml",
	)
}

func osdStrimziOperator00NamespaceYaml() (*asset, error) {
	bytes, err := osdStrimziOperator00NamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-strimzi-operator/00-namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdStrimziOperator01OperatorgroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8e\xb1\x4e\xc5\x30\x0c\x45\xf7\x7c\x85\xf5\xf6\x57\xc4\x9a\x8d\x89\x0d\x16\xc4\x6e\x52\x53\x2c\x12\x3b\xb2\x9d\x0e\x7c\x3d\x4a\x29\x88\x01\xb2\x64\x38\xf7\xfa\x1e\xec\xfc\x4c\xe6\xac\x92\x41\x3b\x19\x86\x9a\x2f\x45\x8d\x74\x7e\xed\x66\xbf\x4d\xef\x2c\x6b\x86\xc7\x93\xde\x9b\x8e\x9e\x1a\x05\xae\x18\x98\x13\x80\x60\xa3\xa3\x2d\xfe\xc6\xaf\x71\xf5\x30\x6e\x1f\x7c\x12\xef\x58\xfe\xc1\x15\x5f\xa8\xfa\x3c\x01\x80\x9d\x97\x9f\xcc\xb1\xdc\x50\x70\xa3\x35\xc3\x25\x6c\xd0\x25\x79\xa7\x32\xb3\x4e\xb6\x73\xa1\xbb\x52\x74\x48\x7c\xb5\x7f\xeb\xcc\x57\x8c\x30\x58\xe5\x89\x1b\x79\x60\xeb\x19\x64\xd4\x9a\x00\x02\x6d\xa3\x78\xf8\x16\x3b\xd6\xaf\x7f\xd8\x7d\x06\x00\x00\xff\xff\x9c\xe9\x73\x0d\x19\x01\x00\x00")

func osdStrimziOperator01OperatorgroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdStrimziOperator01OperatorgroupYaml,
		"osd-strimzi-operator/01-operatorgroup.yaml",
	)
}

func osdStrimziOperator01OperatorgroupYaml() (*asset, error) {
	bytes, err := osdStrimziOperator01OperatorgroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-strimzi-operator/01-operatorgroup.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdStrimziOperator05RoleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x52\xbd\xce\xdb\x30\x0c\xdc\xfd\x14\x82\xc7\x02\x56\xd0\xad\xf0\x0b\x74\xef\xd0\x9d\x91\x18\x87\x88\x24\x0a\x24\xe5\x02\xdf\xd3\x17\xfe\x69\x1a\xc4\xee\xcf\xa4\xa3\x4c\xf1\x8e\x77\x86\x4a\xdf\x51\x94\xb8\x8c\x4e\xae\x10\x3c\x34\xbb\xb3\xd0\x07\x18\x71\xf1\x8f\x2f\xea\x89\x2f\xf3\xe7\xee\x41\x25\x8e\xee\x1b\x27\xec\x32\x1a\x44\x30\x18\x3b\xe7\x0a\x64\x1c\x5d\xc4\x48\x01\x0c\xe3\x00\x31\x53\xd1\x81\x2b\x16\xbd\xd3\xcd\x06\x35\xa1\xfc\x41\x7b\xab\x56\x08\x38\xba\xb3\xcf\x09\xae\x98\x74\x99\xe9\x1c\x54\xf2\xcf\x1e\x1f\x38\x5f\x32\x14\x98\x30\x8e\xae\x37\x69\xd8\x77\xd2\x12\xea\xd8\x0d\x4b\xeb\x57\xe1\x56\xd7\x97\x83\xeb\xfb\xce\x39\x41\xe5\x26\x01\xf7\xbb\x27\xb1\xae\x65\xe5\xf8\x1b\x5c\x12\x4f\x6b\x81\x33\x16\x5b\xee\x67\x94\xeb\xfe\x30\x91\xda\x0a\x26\xdc\xce\x1f\x60\xe1\x7e\x24\xe5\x8a\x02\xc6\xa2\x3e\xb0\x20\x2f\x47\x3e\xca\xd0\x76\xd5\x20\x54\x17\x63\x37\x01\x21\x35\x35\x14\x45\x99\x29\xe0\xbc\xe5\xf0\xa6\xa1\xff\xd4\x9f\x6c\x99\xb9\x90\xb1\x50\x99\x5e\x28\x4f\x56\xaf\xc2\x19\xed\x8e\x4d\x57\xc3\x36\x1d\x1b\xdd\x3e\xe2\x69\xc5\x4b\xfd\x4f\xfa\x13\x26\xc5\x20\xf8\x6e\x60\x10\x04\xc3\x15\xb6\x1a\x17\xf8\x5f\xb3\x02\x97\x1b\x4d\x19\xea\x9f\xc7\x45\x4c\xb8\xc3\x5f\xe1\x3c\xd3\xaa\x6b\x4a\x2f\xa4\x7f\x89\xee\x01\xb7\x07\xf8\xfd\x2f\xf4\xc4\x47\x31\x8b\x03\x07\x4b\x7e\x06\x00\x00\xff\xff\x6d\xf3\x51\x14\x37\x03\x00\x00")

func osdStrimziOperator05RoleYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdStrimziOperator05RoleYaml,
		"osd-strimzi-operator/05-role.yaml",
	)
}

func osdStrimziOperator05RoleYaml() (*asset, error) {
	bytes, err := osdStrimziOperator05RoleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-strimzi-operator/05-role.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _osdStrimziOperator06RolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\xb1\x4e\x03\x41\x0c\x44\xfb\xfd\x0a\x2b\xfd\x6d\x44\x87\xb6\xa4\xa1\x4f\x41\xef\x5b\x3b\x89\xc9\xad\xbd\x5a\xfb\x28\xf2\xf5\xe8\x00\x51\x41\xa4\xab\xe7\x69\x34\xf3\xb0\xcb\x1b\x0f\x17\xd3\x02\x63\xc6\x9a\x71\x8d\xab\x0d\xb9\x63\x88\x69\xbe\x3d\x7b\x16\x3b\x7e\x3c\xa5\x9b\x28\x15\x38\xd9\xc2\x2f\xa2\x24\x7a\x49\x8d\x03\x09\x03\x4b\x02\x50\x6c\x5c\x80\x98\xa4\x62\x30\x4d\x48\x4d\xd4\x27\xeb\xac\x7e\x95\x73\x4c\x1e\x43\xda\x5d\x7e\x50\xef\x58\xb9\xc0\x5f\xf1\x82\x33\x2f\xbe\x75\x02\x60\x97\xfc\xcb\xe4\x6a\xed\xd8\x50\xf1\xc2\x54\xe0\x10\x63\xe5\x43\xf2\x75\x7e\xe7\x1a\x5e\xd2\xb4\xd1\xaf\xc3\xd6\xfe\xe0\x48\x02\xf8\xfe\xf1\x05\xfe\xbb\x3b\x0d\x5b\xf8\xc4\xe7\x6d\xc5\x9e\xd6\xcd\xce\x1e\x19\x9f\x01\x00\x00\xff\xff\xc5\x38\x6c\x8a\x7d\x01\x00\x00")

func osdStrimziOperator06RolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_osdStrimziOperator06RolebindingYaml,
		"osd-strimzi-operator/06-rolebinding.yaml",
	)
}

func osdStrimziOperator06RolebindingYaml() (*asset, error) {
	bytes, err := osdStrimziOperator06RolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "osd-strimzi-operator/06-rolebinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceQuotas10PatchNamespaceOpenshiftEtcdYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x3d\x4e\xc5\x30\x10\x84\x7b\x9f\x62\xe5\xde\x0f\xd1\x6e\x97\x03\x40\x85\xe8\x97\x78\x48\x2c\xfc\xb3\xd8\x9b\x40\x04\xdc\x1d\x45\x91\x9e\xa6\x99\x99\xe2\xfb\x3e\x52\x8d\x4c\xcf\x52\x30\x54\x66\x38\xd1\xf4\x8a\x3e\x52\xab\x4c\xfb\xa3\xab\x52\xc0\xd4\x14\x75\xac\xe9\xdd\x02\x6c\x8e\x4e\x54\xf3\xf1\xd4\x22\x98\xa6\xfc\x25\xc7\x98\xce\xc3\xa9\xd8\xbc\x32\xfd\x06\x47\xf4\x43\xbe\xc0\x24\x8a\x89\xe7\x73\x65\x79\x43\x1e\x57\x2f\x52\x65\x41\xbc\xdd\xb1\xb7\xd4\x1e\x86\xb5\x2e\x0b\x82\xee\xe1\x73\x6b\x26\x01\xdf\x28\x6a\x9e\xbd\xf5\x0d\x9e\xfe\xce\x5c\x8e\x97\x43\xc1\x54\xd0\x17\xb8\xff\x00\x00\x00\xff\xff\x1f\xc5\xb8\xea\xc0\x00\x00\x00")

func resourceQuotas10PatchNamespaceOpenshiftEtcdYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourceQuotas10PatchNamespaceOpenshiftEtcdYaml,
		"resource-quotas/10-patch.namespace.openshift-etcd.yaml",
	)
}

func resourceQuotas10PatchNamespaceOpenshiftEtcdYaml() (*asset, error) {
	bytes, err := resourceQuotas10PatchNamespaceOpenshiftEtcdYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource-quotas/10-patch.namespace.openshift-etcd.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceQuotas10PatchNamespaceOpenshiftIngressYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\xbd\x4e\xc4\x30\x10\x06\x7b\x3f\xc5\xca\xbd\x0f\xd1\x6e\x77\x0f\x00\x15\xa2\xdf\x8b\x3f\x12\x0b\xff\x2c\x5e\x27\x10\x85\xbc\x3b\x02\xa4\xeb\x46\x53\xcc\xbc\xa7\x1a\x99\x9e\xa5\xc0\x54\x26\x38\xd1\xf4\x8a\x6e\xa9\x55\xa6\xed\xd1\x55\x29\x60\x6a\x8a\x6a\x4b\x7a\x1b\x21\xd5\xb9\xc3\xcc\x89\x6a\xde\x9f\x5a\x04\xd3\x35\x7f\xca\x6e\xd7\x5f\xe1\x54\xc6\xb4\x30\x7d\x07\x47\x74\x90\x2f\x18\x12\x65\x88\x67\x3a\x7c\x96\x1b\xb2\xfd\x61\x91\x2a\x33\xe2\xe5\xde\xbd\xa4\xf6\x60\xe8\x5b\x9a\x10\xf2\x2d\x7c\xac\x6d\x48\xc0\x17\x8a\x0e\xcf\x7e\xf4\x15\xfe\xa4\x93\xce\xff\xc1\xcb\xae\x60\x2a\xe8\x33\xdc\x4f\x00\x00\x00\xff\xff\x2d\xe6\xbd\xa7\xc0\x00\x00\x00")

func resourceQuotas10PatchNamespaceOpenshiftIngressYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourceQuotas10PatchNamespaceOpenshiftIngressYaml,
		"resource-quotas/10-patch.namespace.openshift-ingress.yaml",
	)
}

func resourceQuotas10PatchNamespaceOpenshiftIngressYaml() (*asset, error) {
	bytes, err := resourceQuotas10PatchNamespaceOpenshiftIngressYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource-quotas/10-patch.namespace.openshift-ingress.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceQuotas10PatchNamespaceOpenshiftMonitoringYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x31\x4e\x43\x31\x10\x44\x7b\x9f\x62\xe5\xde\x41\xb4\xdb\xe5\x00\x50\x21\xfa\x25\x1e\x1c\x0b\xdb\xbb\xd8\x9b\xc0\x17\x70\x77\xf4\x15\x29\x9a\x66\x66\x8a\xf7\x3e\xea\xc8\x4c\xcf\xd2\xb1\x4c\x4e\x08\x62\xf5\x15\x73\x55\x1d\x4c\xd7\xc7\x30\xa4\x83\x49\x0d\x63\x9d\xeb\xbb\xa7\xae\xa3\xba\xce\x3a\x4a\x10\xb3\xb6\x3d\x69\x06\xd3\xb1\x7d\xc9\xb6\x8e\xfb\x11\x4c\xfc\x74\x66\xfa\x4d\x81\xe8\x87\x62\x87\x4b\x16\x97\xc8\xfb\x6a\xf2\x86\xb6\x6e\xbd\xcb\x90\x82\x7c\xb8\xc3\x0f\x55\x1f\x96\xeb\x94\x82\x64\xd7\xf4\x79\x51\x97\x84\x6f\x74\xf3\xc8\xd1\xe7\x05\x91\xfe\xf6\xdc\x1c\x2f\x9b\x81\xa9\x63\x16\x84\xff\x00\x00\x00\xff\xff\x6e\xa3\x46\x75\xc6\x00\x00\x00")

func resourceQuotas10PatchNamespaceOpenshiftMonitoringYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourceQuotas10PatchNamespaceOpenshiftMonitoringYaml,
		"resource-quotas/10-patch.namespace.openshift-monitoring.yaml",
	)
}

func resourceQuotas10PatchNamespaceOpenshiftMonitoringYaml() (*asset, error) {
	bytes, err := resourceQuotas10PatchNamespaceOpenshiftMonitoringYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource-quotas/10-patch.namespace.openshift-monitoring.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceQuotas11ClusterLbQuotaYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\xbf\x6a\xc3\x30\x10\xc6\x77\x3f\xc5\x91\x25\x20\xb0\x43\x57\x6d\xa5\x31\xdd\x02\x0d\xa5\xfb\x59\xbe\xd6\x22\x92\x4e\xd5\x9d\x83\xfb\xf6\xc5\x8e\x0a\xee\xfa\xe9\xf7\xfd\xd1\xdd\x7c\x1a\x2d\xbc\x84\x59\x94\xca\x95\x84\xe7\xe2\xe8\x6d\x66\xc5\x06\xb3\xff\xa0\x22\x9e\x93\x85\xef\x55\xe9\x38\x53\x92\xc9\x7f\x6a\xe7\xf9\x74\x7f\x6a\x22\x29\x8e\xa8\x68\x1b\x80\x84\x91\x2c\x04\xc6\x71\xc0\x80\xc9\x51\x69\x37\x53\x03\x10\x70\xa0\x20\x2b\x04\x80\xd9\xef\x62\x1c\xc7\x53\xc4\x84\x5f\x34\x5a\x38\x68\x99\xe9\xd0\x48\x26\xb7\xb2\x42\x81\x9c\x72\xa9\xbe\x94\x58\x51\x3d\x27\xb1\x90\xe6\x10\x36\x75\x9f\x0c\x10\x51\xdd\xd4\x2f\xb9\x90\xc8\x06\x56\xbd\x85\x1b\xfd\x58\xa8\x45\xff\x7f\x21\x54\xee\xde\x51\x1b\x86\xc7\xdc\x96\x16\x8a\x59\xab\x13\x80\x33\x15\x5c\x57\xc0\x99\x49\x2e\xac\xfd\xe2\x65\x7d\xde\xe8\x47\xc3\x84\x65\xfc\xeb\xaa\x79\xd2\xed\x2f\x21\x16\x8e\xc6\x18\x78\xed\x2f\xfd\xf5\xf9\xbd\x3f\x83\x31\xe6\xf8\x1b\x00\x00\xff\xff\x74\x7b\xda\xdc\x7b\x01\x00\x00")

func resourceQuotas11ClusterLbQuotaYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourceQuotas11ClusterLbQuotaYaml,
		"resource-quotas/11-cluster-lb-quota.yaml",
	)
}

func resourceQuotas11ClusterLbQuotaYaml() (*asset, error) {
	bytes, err := resourceQuotas11ClusterLbQuotaYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource-quotas/11-cluster-lb-quota.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _resourceQuotas11ClusterStorageQuotasYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xc1\x6a\xf3\x30\x10\x84\xef\x7e\x8a\x25\x97\x80\xc1\x09\xff\x55\xb7\x9f\xc6\xf4\x16\x68\x28\xbd\x6f\xed\x69\x22\x22\x69\x15\xed\x2a\xb8\x6f\x5f\xec\xb8\x90\x5e\x47\xdf\x37\xb3\xba\xfa\x34\x3a\x7a\x09\x55\x0d\xe5\x04\x95\x5a\x06\xbc\x55\x31\x6e\x38\xfb\x0f\x14\xf5\x92\x1c\xdd\xe6\x64\x27\x19\x49\x2f\xfe\xcb\x76\x5e\xf6\xf7\x7f\x4d\x84\xf1\xc8\xc6\xae\x21\x4a\x1c\xe1\x28\xcf\x82\x1a\x92\x75\x77\x09\x35\xa2\x5b\xcc\x86\x28\xf0\x27\x82\xce\x24\x11\x67\xff\xd4\x35\x48\xdc\x47\x4e\x7c\xc6\xe8\x68\x63\xa5\x62\xd3\x68\xc6\x30\xb3\x8a\x80\xc1\xa4\xac\x5e\x4a\x62\x6c\x5e\x92\x3a\x4a\x35\x84\x25\x7d\x6e\x26\x8a\x6c\xc3\xa5\x9f\x72\x81\xea\x02\xae\x79\x47\x57\x7c\x3b\x5a\x87\xfe\x7e\x45\x4d\x0a\x9f\xd1\xe5\xfb\xe3\xdc\x0e\x13\x62\xb6\xd5\x24\x92\x8c\xc2\xf3\x15\x74\x10\xe8\x51\xac\x9f\xbc\xce\xcf\x0b\xfd\x58\xb8\x70\x19\x7f\xb7\x0a\x6e\x15\x6a\xba\x5b\x8b\x1d\x6d\xdb\xb6\xa5\xd7\xfe\xd8\x9f\xfe\xbf\xf7\x07\x6a\xdb\x76\xfb\x13\x00\x00\xff\xff\xc3\x25\x9f\x61\x7a\x01\x00\x00")

func resourceQuotas11ClusterStorageQuotasYamlBytes() ([]byte, error) {
	return bindataRead(
		_resourceQuotas11ClusterStorageQuotasYaml,
		"resource-quotas/11-cluster-storage-quotas.yaml",
	)
}

func resourceQuotas11ClusterStorageQuotasYaml() (*asset, error) {
	bytes, err := resourceQuotas11ClusterStorageQuotasYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "resource-quotas/11-cluster-storage-quotas.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sreAuthorization00OsdSreClusterAdminsClusterrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xb1\x4e\x03\x31\x0c\xc6\xf1\x3d\x4f\x61\x75\xbf\x54\x6c\x28\x23\x0c\xec\x1d\xd8\x7d\x17\xb7\x35\x4d\xec\xc8\x76\x18\x78\x7a\x74\x20\x21\x21\x24\x10\x9b\x07\xeb\xf7\xfd\x71\xf0\x33\x99\xb3\x4a\x01\x5b\x71\xcb\x38\xe3\xaa\xc6\x6f\x18\xac\x92\x6f\xf7\x9e\x59\x8f\xaf\x77\xe9\xc6\x52\x0b\x3c\xb6\xe9\x41\x76\xd2\x46\x0f\x2c\x95\xe5\x92\x3a\x05\x56\x0c\x2c\x09\xa0\xe1\x4a\xcd\xf7\x0b\x00\x07\x67\x1d\x24\x7e\xe5\x73\xe4\x4d\xfb\xb1\xa3\xe0\x85\x6a\x81\x43\xd8\xa4\x43\x02\x10\xec\x54\x40\xbd\x2e\x6e\xb4\x6c\x9f\xf8\x82\xb5\xb3\x78\x32\x6d\x74\xa2\xf3\xae\xe1\xe0\x27\xd3\x39\x7e\x69\x4c\x00\x3f\x12\xbf\x16\xbe\xc9\xc9\xe7\xfa\x42\x5b\x78\x49\xcb\xbf\xe4\x8f\xc7\xbf\xaa\xdf\x03\x00\x00\xff\xff\x63\x10\x8d\xad\x51\x01\x00\x00")

func sreAuthorization00OsdSreClusterAdminsClusterrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_sreAuthorization00OsdSreClusterAdminsClusterrolebindingYaml,
		"sre-authorization/00-osd-sre-cluster-admins.ClusterRoleBinding.yaml",
	)
}

func sreAuthorization00OsdSreClusterAdminsClusterrolebindingYaml() (*asset, error) {
	bytes, err := sreAuthorization00OsdSreClusterAdminsClusterrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-authorization/00-osd-sre-cluster-admins.ClusterRoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sreAuthorization00OsdSreClusterAdminsGroupYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x31\xae\xc2\x30\x0c\x80\xe1\xdd\xa7\xb0\xba\xb7\xd5\x5b\x7d\x81\x77\x03\x16\xc4\x60\x1a\x03\x16\x89\x1d\xd9\x09\xe7\x47\xdd\xd8\xfe\xe5\xd7\xc7\x5d\x2f\x12\xa9\x6e\x84\x33\x25\x36\xef\x62\xf9\xd2\xc7\xd8\xd4\xf7\xcf\x1f\xbc\xd5\x0a\xe1\x7f\xf8\xec\xd0\x64\x70\xe1\xc1\x04\x88\x95\xef\x52\xf3\x2c\x44\xee\xfa\xf3\x1d\xde\xf6\xc6\xc6\x4f\x29\x84\xcb\x88\x29\x0b\x20\x1a\x37\x21\xf4\x2c\x6b\x86\xac\x47\x9d\x39\x24\x56\x2e\x4d\x2d\xe1\x94\x93\xf0\x7a\x83\x6f\x00\x00\x00\xff\xff\x1a\x23\x2c\x0e\x90\x00\x00\x00")

func sreAuthorization00OsdSreClusterAdminsGroupYamlBytes() ([]byte, error) {
	return bindataRead(
		_sreAuthorization00OsdSreClusterAdminsGroupYaml,
		"sre-authorization/00-osd-sre-cluster-admins.Group.yaml",
	)
}

func sreAuthorization00OsdSreClusterAdminsGroupYaml() (*asset, error) {
	bytes, err := sreAuthorization00OsdSreClusterAdminsGroupYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-authorization/00-osd-sre-cluster-admins.Group.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sreAuthorization01OsdSreAdminClusterroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x95\xb1\x8e\xdb\x30\x0c\x86\x77\x3f\x85\x90\xe5\x80\x02\x49\xd0\xad\xf0\xda\xa1\x4b\xa7\x03\xda\x9d\x96\x18\x87\x17\x59\x54\x45\xca\xe9\xdd\xd3\x17\xb6\x13\x34\x8e\x9d\xc4\xd7\xeb\x14\x45\xfa\xfd\x91\x22\x7f\xd3\x10\xe9\x27\x26\x21\x0e\xa5\x49\x15\xd8\x0d\x64\xdd\x73\xa2\x37\x50\xe2\xb0\x39\x7c\x91\x0d\xf1\xb6\xfd\x5c\x1c\x28\xb8\xd2\x7c\xf5\x59\x14\xd3\x33\x7b\x2c\x1a\x54\x70\xa0\x50\x16\xc6\x78\xa8\xd0\x4b\xb7\x32\x06\x22\x6d\x38\x62\x90\x3d\xed\x74\x63\xb9\xd9\x36\x10\xa0\x46\x57\x9a\x95\xa6\x8c\xab\xc2\x98\x00\x0d\x96\x86\xc5\xad\x25\xe1\x1a\x5c\x43\xa1\x48\xd9\xa3\x94\xc5\xba\x03\x7c\x4b\x9c\x63\xcf\x5b\x9b\xa7\x4f\x4f\x85\x31\x09\x85\x73\xb2\x38\xda\x6c\x31\x55\xa7\x8d\x1a\xb5\xff\xf5\x24\xc3\xe2\x08\x6a\xf7\x53\xda\x6a\x35\x85\x05\x76\x28\x63\x5c\x5c\xfe\x74\x64\x27\x5b\x6c\xc9\x76\x15\x1b\x53\x6c\x42\x50\x7c\x0f\xe6\x37\xda\x65\x88\xaa\x4f\x70\x42\x79\xe1\xea\xea\x26\x0e\x3d\x2a\x5e\x2c\x2d\x7b\x8f\x43\xb2\x53\x6a\x26\xef\x2e\xba\x47\x3c\x0d\xd1\x6b\x3e\x12\xc4\x72\xd8\x51\xfd\x20\x4a\x4c\xfc\x82\x56\xaf\xe2\x74\x6d\x9f\xf0\x4e\xd2\xff\x07\x9c\xf5\x08\x34\x28\x11\x6c\x6f\x94\xcb\xbf\xdb\x1d\x05\xf0\xf4\x86\xff\x08\xee\xfa\xfe\xd7\x00\xa0\x0a\x7d\x5f\x3f\xe0\xa2\xd9\xd6\x4c\x9e\x16\xb4\x39\x91\xbe\x3e\x2a\x1b\xbb\xb3\x32\xb2\x27\xfb\x9a\xb0\x25\x3c\xca\xfc\xa1\xa0\xdf\x49\xae\xba\x42\xdf\xd7\x5d\x6b\x16\x5c\x37\x0b\xa6\x07\xc9\xd6\xbd\x7c\xee\x4d\xee\x01\xd1\xcd\x82\x17\xf9\xd1\x0e\x93\xaf\x1d\x86\xe5\xbb\x63\x8c\xc7\xea\xfd\x50\x9e\x2d\xf8\xf3\x1e\x58\x8b\x22\xf7\x0b\x15\x38\x3c\x9f\xe4\x3f\x9e\xbf\xdf\x9a\x90\xb3\x8e\xf4\x5c\xd7\x14\x1e\x5d\x7e\x19\xcb\x62\x52\xda\x91\x05\x45\x39\x7d\x39\x66\xea\x78\x21\xa2\x3a\x50\xa8\x13\xfe\xca\x28\x2a\x5b\x88\x31\x71\x0b\x7e\x1c\xea\x56\x45\x5b\xf4\x98\x78\x7e\x42\x81\x3d\x4c\x7c\x70\xcb\x56\x77\x38\xc3\xab\x33\xd0\xce\x59\x0e\x07\x7c\x0c\x9e\xc1\x8d\x36\x65\x70\x87\x82\x66\xb9\x38\xb8\xaa\xda\x9f\x00\x00\x00\xff\xff\xd1\xcf\xe3\xd3\x71\x07\x00\x00")

func sreAuthorization01OsdSreAdminClusterroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_sreAuthorization01OsdSreAdminClusterroleYaml,
		"sre-authorization/01-osd-sre-admin.ClusterRole.yaml",
	)
}

func sreAuthorization01OsdSreAdminClusterroleYaml() (*asset, error) {
	bytes, err := sreAuthorization01OsdSreAdminClusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-authorization/01-osd-sre-admin.ClusterRole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sreAuthorization02OsdSreAdminClusterrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xce\xbb\x4e\x04\x31\x0c\x85\xe1\x3e\x4f\x61\x6d\x3f\x59\xd1\xa1\x94\x50\xd0\x6f\x41\xef\x99\x78\x77\xcd\x24\x76\x64\x3b\x14\x3c\x3d\x1a\x5a\x2e\x12\xdd\x29\x8e\x3e\xfd\x38\xf8\x95\xcc\x59\xa5\x80\xad\xb8\x65\x9c\x71\x57\xe3\x0f\x0c\x56\xc9\xfb\xa3\x67\xd6\xf3\xfb\x43\xda\x59\x6a\x81\xe7\x36\x3d\xc8\x2e\xda\xe8\x89\xa5\xb2\xdc\x52\xa7\xc0\x8a\x81\x25\x01\x34\x5c\xa9\xf9\xb1\x00\x70\x70\xd6\x41\xe2\x77\xbe\x46\xde\xb4\x9f\x3b\x0a\xde\xa8\x16\x38\x85\x4d\x3a\x25\x00\xc1\x4e\x05\xd4\xeb\xe2\x46\x0b\xd6\xce\x92\x4c\x1b\x5d\xe8\x7a\x20\x38\xf8\xc5\x74\x8e\x3f\xd2\x12\xc0\xb7\xb2\x5f\x60\x9f\xeb\x1b\x6d\xe1\x25\x2d\xff\x92\xbf\x8e\x3f\x9b\x9e\x3e\x03\x00\x00\xff\xff\x5d\x5e\xe6\x46\x40\x01\x00\x00")

func sreAuthorization02OsdSreAdminClusterrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_sreAuthorization02OsdSreAdminClusterrolebindingYaml,
		"sre-authorization/02-osd-sre-admin.ClusterRoleBinding.yaml",
	)
}

func sreAuthorization02OsdSreAdminClusterrolebindingYaml() (*asset, error) {
	bytes, err := sreAuthorization02OsdSreAdminClusterrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-authorization/02-osd-sre-admin.ClusterRoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _sreAuthorization10OsdLdapCaConfigmapConfigmapYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x95\x49\xb7\xb2\x48\x12\x86\xf7\xf7\x57\x78\x6a\xeb\xb9\x9f\x38\xe0\x70\x77\x99\x64\x82\x09\x24\x92\x8c\xc2\x0e\x19\x95\x51\x51\x01\x4f\xff\xf8\x3e\xe2\xd7\x55\xd5\xdd\xc5\x92\xf7\x8d\x27\x93\x88\x20\x22\x68\xce\x4e\x7c\x6b\xcf\x75\xf5\x33\x79\xce\xbf\xa2\xe0\x1e\xfc\x7c\x4d\x26\x61\xf0\x2b\xbc\xdd\x7f\x26\xff\xfa\xfe\x9a\x4c\x26\x93\xef\xf7\x03\xb1\x44\xb4\x89\x80\x0d\x8b\x88\x44\x00\x16\x1e\xdf\x8e\x3a\x25\x04\x6b\x48\x10\x40\x3f\xa4\xa0\x23\x10\xa4\x44\x06\xda\xa3\x22\x1c\x5a\xaf\x17\x61\x45\x01\x27\x09\xe6\x55\x32\xc9\x69\x89\x18\x86\x42\x67\x03\x4a\xa4\x82\xb2\xb6\x13\x98\x87\x46\x88\xc3\x98\x84\x3b\xd9\xb1\x5f\xf8\x48\xa1\x2d\x81\xb9\x8d\x05\xd0\x1d\xac\x72\x37\x44\x52\x9a\xb2\x85\x38\x9c\x16\x7d\x73\x2a\x71\x8f\x11\x38\xc0\x54\x73\x20\x08\x29\x9c\xcb\xd9\x49\x72\x9a\x11\xe2\x2f\xd2\x5e\xbc\x00\xfb\x23\xd6\x14\x39\x72\xe1\x0b\x90\x78\x47\xd6\x12\x5c\x3c\xbc\x61\xd5\xe3\x17\x30\x3e\x7a\x4b\x85\xe2\x4f\x3d\x35\x1d\xd6\x8f\x10\xe9\x05\xfc\x8f\x81\x52\xfc\xdf\x86\xd4\x2e\x77\xcf\x48\x80\x88\x59\x38\xa3\x70\xfb\xf7\xcf\x92\x81\xe1\x99\x81\xcb\x97\x23\xe4\xb4\xd4\x0a\x8f\x83\x83\xef\x1a\xb5\x77\x64\x0f\x6f\xb1\xbb\x53\x01\x1c\x91\x85\xe7\x14\x85\x9d\x76\xc1\x4b\xfa\x4a\x7b\xea\xd4\x1e\x7a\x91\x4e\xb3\xec\x4e\xbb\x90\x05\xb5\xc2\xd7\x01\xe1\xcf\x4d\xdc\x8b\x00\x1b\x0b\xab\x14\xe4\x63\x3e\x60\x46\x05\xc7\xa1\xbd\xf8\x02\xce\xe7\x86\x29\x45\x39\xff\x0c\x2b\xa3\x26\x58\xcb\xc2\x72\xd7\x06\x2e\x9f\x51\x03\x74\x28\xfd\x2b\xb1\x7b\x04\x22\xd3\x73\xfb\x22\x70\xa3\x9a\x1a\x5e\x27\x02\x0f\x39\x8c\x29\x08\xcc\x4d\xdf\x65\xa9\x29\x89\x9c\x2a\x40\xf9\x54\xd2\x07\x35\x68\x87\xd9\xa8\xab\x08\x34\xe6\x27\xb1\xbf\x4d\x04\x17\x36\x35\xda\x4e\xfa\x18\x10\x82\xb2\xf9\x77\x8d\x88\xf2\xf3\xb4\x64\x29\xe3\x70\x4f\x2c\x90\xc0\x34\xbf\x66\xf9\x59\x1a\x21\xbb\x8e\x83\x02\xc3\x2e\x2e\x8b\x87\x5f\xee\x5e\xbe\xab\x81\xb0\x74\xf2\xe0\x7d\x7a\xa9\x3d\x4f\x96\x20\x00\x93\x74\x88\x79\xb2\x52\xfb\x24\x7b\x86\x1a\x60\x18\x42\x06\x50\x9a\x62\x7d\x84\x80\x77\xa3\xb1\x5a\x48\x53\x0c\x81\xca\xee\xbb\x83\xcc\xb2\xb5\x24\xf0\xaa\x35\x4f\xb7\xdc\x55\xcb\xb8\x07\xcf\x41\xb6\x6a\xfd\xd9\xe0\x6f\x03\x6c\xf5\xf7\x29\x5f\x54\xba\x73\x5c\xd3\xbd\xf2\xfa\x54\x27\xe9\xc8\xba\x3a\xcc\x03\x2a\xad\x2f\xbb\x93\xd9\x4d\xd7\xb6\x3d\xe8\x70\xaf\x6f\x76\xeb\xa9\x68\xcd\x1a\xcb\x9c\x2a\x5c\xd7\x22\x67\x13\xee\x8e\xcf\x7d\xdd\xcb\x50\x96\xed\xe5\x36\x8c\xd4\x9c\x2c\x46\x48\x38\x3b\x6f\x0a\x74\xb5\x12\x2b\x4c\x54\x75\x51\x0d\x36\x8c\x16\x09\x43\xf9\x1c\x72\x49\x7f\x6b\xf3\x4c\x22\xc4\x5f\x9e\x13\x7d\xae\xb7\xab\xe2\x6e\xe5\xcf\x6d\x66\x98\xf5\x69\xe9\xdc\xb5\xab\x59\x7f\x9a\xad\xcf\x95\xe4\x89\x16\xba\x72\xb1\xf4\x1e\xe9\xae\x37\xdc\x1e\xc3\xee\x7c\x53\xfd\x73\x4d\x93\xe4\xbc\x3c\xcf\x52\xe1\x71\xe7\x7c\xf7\x0e\x86\xc3\x92\x3a\x7b\xfe\xea\x8a\xb3\xb8\x52\xba\x54\xc7\x9f\xea\x1c\x77\x4d\x3d\xb5\x22\xe1\x69\xc0\x99\x61\x1f\x4e\x30\xa0\x9b\xf5\x1c\x87\x37\xd5\xa4\x73\xe9\xba\xd7\x1e\xb1\x99\x5c\xab\xac\x5e\x82\x8b\xca\xd6\x11\xac\x74\xb7\xa8\xd7\xcb\xad\x5f\xce\x9d\xf8\xa4\x8c\x10\x88\xd5\x21\xcb\x55\x97\x9a\x62\xae\x74\xa8\xac\x62\xee\xc2\xb8\x85\xb7\x4a\xb9\x0d\xff\x14\x94\xa7\xd0\x0a\xa0\xc3\x00\x04\xda\x85\x4a\xb8\xdb\xbf\x5b\xc0\xe0\x0e\x10\x7a\x58\xdc\x6f\x8c\x11\xb2\x1a\x84\xa9\x1d\x67\x84\xe8\xf1\x43\xdd\xfa\xd7\x6e\xa9\xbf\x4e\x69\xe8\xbf\xff\x15\x30\xb7\x23\xd2\x31\x8f\xc2\x00\xbc\x03\xfe\xc9\xfb\xa9\xce\x3b\x00\x7c\x02\x70\x87\xe1\xac\x63\x22\x05\x14\x82\x64\x3b\xb6\xb5\x63\x70\x3a\x60\xfb\x19\x04\x0c\x81\x54\x92\xfe\x77\xbe\x8c\x90\xf7\x90\x01\x2b\x02\x01\x83\x48\x7b\xa2\x85\x53\xee\x5a\xc0\x83\x1d\x28\x0e\xb2\xb1\x9d\xc6\x15\x7f\x7c\xed\xb2\x63\xd8\xcb\x90\x6f\xb2\x3e\xf4\xd9\xf6\x22\xd6\x12\xb7\x72\xda\xec\x19\x71\xf1\x08\x51\x71\x65\xdf\x68\x98\x88\x29\xf1\x57\xd5\x85\x2a\x16\x13\xe8\xca\x17\x6d\x1d\x9c\xe3\x41\xed\x57\x09\xbf\xd8\x3f\x50\xdd\x34\xcb\x98\x97\x07\x42\x13\x77\xaa\x88\xa1\x46\x1a\xa5\x13\xda\x20\x1f\x21\xb5\x59\x2b\x77\x62\x1f\x5a\x5b\x56\x36\x57\xe8\xf8\x7d\x78\x23\x43\xcc\x9c\xc5\x35\xf4\x0e\xb1\x9f\xdd\x4d\xbe\x83\x57\xd2\x1d\x40\x26\x76\x85\x80\xad\x8d\x1f\xf3\x5b\xb6\x2f\xcd\xd5\xb6\x2d\x2e\x23\xc4\xdc\x29\x9c\x0c\xc2\xa6\x5d\xf4\x51\x25\x3d\xb8\x24\x7f\x65\x26\xeb\xbd\xad\xa4\x33\x4d\xb4\x8a\xdb\xfa\xe6\x15\x11\x3f\x25\x68\x96\xed\x63\x73\xb3\x4e\xaf\x9c\x27\x2d\xaf\x6b\x43\x75\x8d\x7c\x9f\x7c\xaa\x13\x5b\xb9\x71\x39\x3f\x41\x81\xfb\x9b\xf8\x52\xc2\xe2\x22\xac\x82\x5e\x61\x45\x75\x78\x3a\xe0\xf5\x9a\x4a\xe5\x72\x61\x73\xbd\x0e\xc5\x15\x1c\x62\xdd\xe9\x05\xd9\xde\x77\x73\xab\x1d\xac\x32\x2e\x46\x88\xd1\x6b\xb8\xd9\x0c\xfb\xfa\x18\x76\xd5\x34\x39\x56\xc1\xf4\xce\xcb\x6e\x36\x4f\x7b\xdb\xbf\x0f\xcb\xbf\x56\x06\xd6\xd0\xff\x2f\x8c\xfc\x5c\x45\x3f\x13\xa1\xae\x92\x73\x4a\x83\xe6\xab\x8c\xef\xc1\x7f\xf6\x4e\x15\x94\xf1\xcf\xa4\x6e\xa3\xef\x22\x0a\x9a\xef\x30\xf8\x0e\x47\x5f\x19\x34\xbf\xd5\xb6\x09\xc2\xb7\xa5\x89\xab\x36\x3b\x27\xf7\xdf\x86\xaf\xc9\xa4\x08\x4e\x71\xd1\xfe\x8c\xa7\x07\xcd\xf9\xd7\x9f\x96\x5f\x61\x5d\xce\xca\xa0\x0a\xd2\x38\xfa\x99\xfc\x71\xbf\x3d\xe2\x3f\xfe\x1d\x00\x00\xff\xff\xe5\x9a\x90\x36\xf8\x06\x00\x00")

func sreAuthorization10OsdLdapCaConfigmapConfigmapYamlBytes() ([]byte, error) {
	return bindataRead(
		_sreAuthorization10OsdLdapCaConfigmapConfigmapYaml,
		"sre-authorization/10-osd-ldap-ca-configmap.ConfigMap.yaml",
	)
}

func sreAuthorization10OsdLdapCaConfigmapConfigmapYaml() (*asset, error) {
	bytes, err := sreAuthorization10OsdLdapCaConfigmapConfigmapYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-authorization/10-osd-ldap-ca-configmap.ConfigMap.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100CheckFullCustPvPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x54\x5d\x4f\xdc\x46\x14\x7d\xdf\x5f\x71\xeb\x82\x04\x88\xb5\x97\x8f\xf2\xe0\xd2\x97\xd2\x22\x55\x95\x2a\x44\x09\x2f\x21\x5a\x5d\xdb\xd7\xf6\x84\xf1\xcc\x68\xee\x9d\x85\x15\x90\xdf\x1e\x79\x76\x31\x9b\x88\x04\xa4\x20\x90\xb2\x0f\xeb\xf1\xcc\xf1\xb9\xe7\x7e\x9c\x41\xa7\xce\xc9\xb3\xb2\x26\x87\xce\x1a\x25\xd6\x2b\xd3\xa4\xa5\xf5\x64\x39\x2d\x6d\x97\xcd\x76\x46\x97\xca\x54\x39\x9c\x78\xdb\x91\xb4\x14\xf8\x34\x68\x1a\x75\x24\x58\xa1\x60\x3e\x02\xd0\x58\x90\xe6\x7e\x05\xe0\x06\x58\x0e\xec\x69\x5c\x2b\x4d\x3c\xe7\x3a\x68\x1d\xcf\xbd\xd5\x94\x03\x6a\xf2\x32\xf6\x41\x13\xc7\x5d\x74\x2a\xb5\x8e\x0c\xb7\xaa\x96\x18\xb7\x43\x83\x0d\x55\x39\x24\xe2\x03\x25\x23\x00\x83\x1d\x3d\xc6\xd9\xef\xb3\xc3\x92\x72\x18\x28\xc6\x0f\xc9\x8c\xd8\x51\xd9\x6b\x6b\xbc\x0d\x2e\xaa\x1c\x7f\x93\x0b\x20\x6a\x5a\xa4\x02\xf0\x2b\x9c\xb5\x8a\xa1\x43\x29\x5b\x62\xb8\x52\xd2\x82\xb4\x04\x15\xd5\x18\xb4\xc0\xbf\xa1\xa0\x93\xbe\x7e\x2c\x64\xe4\xdc\xea\xd0\xd1\x3b\xc6\x86\x8e\xbc\x12\x55\xa2\xfe\x1d\xa4\x27\xe8\x49\x41\x99\x19\x79\xe1\x48\xe0\xa9\xa1\xeb\x05\x6f\x1a\x63\x8d\x17\x25\xc9\x23\xe5\x51\x60\xb1\x1d\xf9\xef\x52\xff\x7f\xfa\xf7\x52\x25\x5d\x3b\x9f\xc3\xed\xf2\x0d\x60\x67\x32\x19\xd6\x5b\x70\x19\x0a\xd2\x24\xd3\x59\xa4\x98\xb2\xa0\xf0\x14\x67\xa8\x34\x16\x9a\xa6\xc5\x5c\x88\x6f\x3e\xda\xe2\x8f\x64\x89\x4c\xb6\x87\x8a\xfe\xf2\x29\xd9\x78\xa8\x69\xba\x75\xdb\x43\xfa\xe7\xb2\x00\xb7\xda\x36\x8d\x32\xcd\x66\x72\x37\x44\xcc\x1e\x8f\x58\xa2\xc3\x52\xc9\xfc\xe5\x03\x1e\xc2\xde\x72\xbd\x3a\x87\xfd\x8f\x69\x46\x5e\xc9\x3c\x87\x2b\xf4\xa6\x9f\x85\xfb\x93\xa7\x66\x66\x81\x42\x63\xac\xa0\x28\x6b\x56\x48\x3b\xe2\xbe\x0d\x39\x24\x67\x2d\x41\xb9\x6c\x15\x7c\xdd\x2b\x28\x35\xaa\x8e\x2a\x28\xe6\x70\x73\x03\x6b\x0b\x6d\xa9\x1b\x60\x8b\xea\x44\x14\xdc\xdd\x81\x32\xf0\xdf\xbd\xa8\xd5\x0f\x06\xa5\x11\xc4\x60\x8d\x8e\x84\xce\x2b\x23\x35\x5c\x24\xeb\x93\x74\xb7\xbe\x48\x60\x6d\x86\x3a\xf4\xa8\x75\xa8\x3d\x51\x9a\x0c\x8a\xb5\x32\x97\x39\x24\xad\x88\xe3\x3c\xcb\x1a\x25\x6d\x28\xa2\xc9\x86\xdc\x33\xeb\x78\xcc\xd6\x65\x85\xb6\x45\xd6\x21\x0b\xf9\x6c\xb6\x9f\xc5\xa1\xe4\xec\xd9\x43\x99\x76\x55\x32\xfa\x01\xf3\x1c\x07\xad\xff\x31\xc7\x36\xf8\xbf\x70\xce\x2f\xeb\x9e\x2f\xb9\x9f\x6b\x9f\x8d\x9f\xd5\x3f\x9b\x2b\x06\xda\xf9\x0d\xd0\x54\xe0\x3c\x55\xaa\x94\xa9\x56\x86\xd0\xbf\x56\xe6\xef\x0f\xda\x0f\xdb\x83\x98\x7d\xd8\x82\xdd\xfe\x6f\xef\x60\x32\xd9\x84\x43\x98\xbc\x8d\xb9\xff\x44\xa6\x0a\xac\x01\x4f\x25\x19\x01\xc6\xce\x69\x65\x9a\xed\x38\x81\xaf\x6e\x7b\xba\x76\x54\x0a\x55\x20\x16\x6a\xa5\x35\x04\x17\x1d\xa5\x0c\xd4\x36\x78\xa8\x70\xce\x29\x1c\x05\xef\xc9\xc8\xd3\x37\x84\x62\x18\x1a\xf9\x86\x37\xc5\xe7\x00\x00\x00\xff\xff\x33\x26\x40\x81\x7f\x08\x00\x00")

func srePrometheus100CheckFullCustPvPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100CheckFullCustPvPrometheusruleYaml,
		"sre-prometheus/100-check-full-cust-pv.PrometheusRule.yaml",
	)
}

func srePrometheus100CheckFullCustPvPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100CheckFullCustPvPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-check-full-cust-pv.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100ClusterOperatorPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x90\xbf\x4e\x33\x31\x10\xc4\xfb\x7b\x8a\x55\x9a\x54\xce\xf7\xa5\xa0\xb1\x74\x15\x50\x07\x05\x89\x36\x5a\xec\xbd\x8b\x85\xed\xb5\xd6\x76\x00\x21\xde\x1d\xdd\x9f\x1c\x54\x24\x0d\x57\xed\xad\x67\xc6\xf3\x33\x26\xf7\x44\x92\x1d\x47\x0d\x81\xa3\x2b\x2c\x2e\xf6\x1b\xc3\x42\x9c\x37\x86\xc3\xbf\xd3\xb6\x79\x71\xd1\x6a\x78\x10\x0e\x54\x8e\x54\xf3\xbe\x7a\x6a\x02\x15\xb4\x58\x50\x37\x00\x1e\x9f\xc9\xe7\x61\x02\x48\x8b\x4c\x43\x16\x52\xc6\xd7\x5c\x48\x14\x27\x12\x2c\x2c\xca\xf2\x6b\x54\xe8\x49\x4a\x1e\x0d\xc2\x9e\x34\x8c\x0b\x25\xd5\xd3\xb4\xc5\xe4\x36\x9c\x28\xe6\xa3\xeb\xca\x58\x24\x60\xc4\x9e\xac\x86\x55\x91\x4a\xab\x06\x20\x62\xa0\xab\x2e\x19\x84\x39\xa1\x21\x0d\x4b\xa6\xfa\xc6\x6d\x72\x22\x33\xb4\xef\x85\x6b\x1a\x39\xd4\xf5\xe1\x00\x63\xeb\x89\x5e\x4d\x20\x1a\x6e\x27\xd3\x6e\xf6\xec\xba\xce\xbb\x48\x8f\xfb\xfb\x51\x06\x40\x6f\x49\x34\xcc\xd1\x87\x73\xf4\xa1\x26\x68\x5b\xf8\x3f\x8b\x3a\x16\x0d\xdb\x9b\x30\xff\xfe\x7c\xe6\xe1\xcb\x74\x22\x71\xe5\x5d\x83\x11\x57\x9c\x41\xbf\x1c\x5d\x22\xfe\xad\xeb\x1d\xf5\x82\x96\xec\xc5\xb2\x86\xa3\x75\xc5\x71\xcc\x1f\xcb\xd8\xae\xcf\xf6\xf5\xe7\x80\xb2\xfd\x73\x94\xaf\x00\x00\x00\xff\xff\x30\x30\xf6\x53\xc3\x02\x00\x00")

func srePrometheus100ClusterOperatorPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100ClusterOperatorPrometheusruleYaml,
		"sre-prometheus/100-cluster-operator.PrometheusRule.yaml",
	)
}

func srePrometheus100ClusterOperatorPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100ClusterOperatorPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-cluster-operator.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\x31\x4f\xfb\x30\x10\xc5\xf7\x7c\x8a\x53\xa6\xff\x7f\x70\x51\x07\x16\x4b\x0c\x08\x31\x17\x15\x89\xfd\xea\x5e\xd2\x13\xb6\xcf\x3a\xdb\x15\x08\xf1\xdd\x51\x9c\x10\xba\x55\x82\x4c\xf1\x9d\xef\xf7\xee\x3d\x63\xe2\x17\xd2\xcc\x12\x2d\x04\x89\x5c\x44\x39\x8e\x1b\x27\x4a\x92\x37\x4e\xc2\xcd\x79\xdb\xbd\x72\x3c\x5a\x78\x52\x09\x54\x4e\x54\xf3\xbe\x7a\xea\x02\x15\x3c\x62\x41\xdb\x01\x78\x3c\x90\xcf\xd3\x1f\x40\x5a\xaf\x59\xc8\x4a\xc6\x49\x1c\x78\xac\x4a\x06\x3d\x69\x09\x18\x71\x24\x35\x92\x48\xb1\x88\x1a\x19\x06\xcf\x71\xe9\xe6\x86\x50\xf1\x64\xa1\x15\x8c\x56\x4f\x73\x15\x13\x6f\x24\x51\xcc\x27\x1e\x4a\x5b\x6d\x66\x1d\x2d\xf4\x45\x2b\xf5\x1d\x40\xc4\x40\xbf\x94\x9d\x46\x73\x42\x47\x16\x56\x15\xf3\x13\x49\x97\x13\xb9\xc9\xe1\xa8\x52\x53\xf3\x6a\xfe\x22\x07\xd0\x9c\xcd\x99\x99\xd9\xac\x85\x87\x6f\xcc\xfd\x05\x65\xb7\x40\x76\x33\xe3\x79\xff\xd8\x86\x00\xe8\x2d\xa9\x05\x3c\x64\x8a\xe5\x5f\x4d\x1f\x99\xf4\xcc\x8e\xee\xfa\x2b\xdb\xf4\x9f\xff\x17\xc2\x20\x6a\x61\x7b\x1b\x96\xe3\xe5\x3b\x4e\x5f\xa6\x33\x29\x97\x77\x0b\x4e\xb9\xb0\x43\xbf\xb6\xae\xc5\xf5\x15\x00\x00\xff\xff\xe4\xd0\x57\x75\x59\x02\x00\x00")

func srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYaml,
		"sre-prometheus/100-configure-alertmanager-operator.PrometheusRule.yaml",
	)
}

func srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-configure-alertmanager-operator.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100DedicatedAdminOperatorPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\x31\x4f\x04\x21\x10\x85\xfb\xfd\x15\x93\xad\xb4\xe0\xcc\x15\x36\x24\x16\x26\x5a\x9f\x39\x13\xfb\x39\x78\x7b\x47\x04\x86\x0c\xec\x45\x63\xfc\xef\x66\x77\xcf\xd3\xc6\x18\xa5\x82\x61\x3e\x1e\xef\x0d\x97\xf0\x04\xad\x41\xb2\xa5\x24\x39\x34\xd1\x90\xf7\x2b\x27\x0a\xa9\x2b\x27\xe9\xea\xb8\xee\x9e\x43\xf6\x96\x1e\x54\x12\xda\x01\x63\xdd\x8e\x11\x5d\x42\x63\xcf\x8d\x6d\x47\x14\x79\x87\x58\xa7\x1d\x51\x39\xb7\x59\xaa\x0a\xe3\xe1\x83\xe3\x06\x6f\xd8\xa7\x90\x8d\x14\x28\x37\x51\x23\xc3\x10\x43\x86\xe1\x08\x6d\x75\x66\x55\x22\x2c\xcd\x05\xa3\x63\xc4\x52\xe5\x12\x56\x52\x90\xeb\x21\x0c\x6d\xfe\x53\xe2\xcc\x7b\x78\x4b\x7d\xd3\x11\x7d\x47\x94\x39\xe1\xaf\x7a\x13\x53\x0b\x3b\x58\x3a\x3f\x6f\xbe\x42\xe8\x6a\x81\x9b\x3c\xed\x55\xc6\x32\xbb\x33\xff\xd2\x21\x9a\xbd\x2c\xf1\x98\xc5\x9e\xa5\xbb\x4f\xfe\x76\xc2\x37\x27\x7a\xb3\xc0\x8f\xdb\xfb\xb9\x9b\x08\x2f\x45\x2d\xf1\xae\x22\xb7\x8b\xb1\xbc\x55\xe8\x31\x38\xdc\xf4\x3f\xe9\xf7\xef\x97\x27\x74\x10\xb5\xb4\xbe\x4e\xa7\xe3\xf7\x21\x4d\xab\xe2\x08\x0d\xed\xd5\x92\xd3\xd0\x82\xe3\x78\xbe\xfa\x2d\x99\x8f\x00\x00\x00\xff\xff\xd4\xc6\x2f\xe7\x36\x02\x00\x00")

func srePrometheus100DedicatedAdminOperatorPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100DedicatedAdminOperatorPrometheusruleYaml,
		"sre-prometheus/100-dedicated-admin-operator.PrometheusRule.yaml",
	)
}

func srePrometheus100DedicatedAdminOperatorPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100DedicatedAdminOperatorPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-dedicated-admin-operator.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100DnsLatencyPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x3f\x4f\xc3\x30\x10\xc5\xf7\x7c\x8a\x53\x27\x18\x12\x42\xa5\x2e\x1e\x98\xe8\xc6\x3f\xb5\x12\x0b\x42\xd1\xe1\x5c\xdb\x13\xfe\xa7\x3b\x27\x6a\xbf\x3d\x4a\x82\x02\x42\x45\x2c\x78\xb1\xf5\xee\xf9\xf9\xf7\x8c\x89\x9f\x49\x94\x63\x30\xe0\x63\xe0\x1c\x85\xc3\xbe\xb2\x51\x28\x6a\x65\xa3\xbf\xea\xaf\x8b\x77\x0e\xad\x81\x27\x89\x9e\xf2\x81\x3a\xdd\x74\x8e\x0a\x4f\x19\x5b\xcc\x68\x0a\x00\x87\x6f\xe4\x74\x38\x01\xa4\xd9\x66\x40\x85\xca\x36\x68\x89\x8e\x24\xeb\x38\x96\xe8\xc8\xc0\x28\x94\xd2\x39\x9a\x54\x4c\x5c\xc5\x44\x41\x0f\xbc\xcb\xe3\xb3\x1e\x03\xee\xa9\x35\xb0\xc8\xd2\xd1\xa2\x00\x08\xe8\xe9\x4c\xe4\x20\x6b\x42\x4b\x06\xe6\x84\xf2\xab\x4a\xa1\x89\xec\x40\xb6\x97\xd8\xa5\x91\xb1\xfc\x2d\x0a\x60\x24\x9a\x7a\x94\x13\xa4\x81\xdb\x87\xed\x1d\x66\x0a\xf6\xf4\xd8\x93\x2c\xeb\xda\xeb\xea\x9e\xc3\x76\xb3\x1e\x7d\x00\x74\x4c\x62\xc0\xe3\xb1\x89\x3d\x49\x93\xd9\xd3\x45\x1b\xb4\x71\xd3\xad\xc6\xb3\x73\xac\x64\x63\x68\xb5\xd1\xce\xbf\xac\xfc\xeb\x25\xdc\x40\x5d\x2d\x3f\x13\xbe\xff\xdf\xb0\x94\x7a\x12\xce\x27\x03\x56\x38\xb3\x45\x37\x8f\xfe\xaa\xfb\x13\x7d\x2d\x12\x45\xeb\x73\xc4\x82\x79\x02\xdd\x21\xbb\x4e\x68\xde\x73\xcc\xe8\x66\xca\x7f\x67\xfc\x08\x00\x00\xff\xff\x16\xf6\xa1\xc7\x74\x02\x00\x00")

func srePrometheus100DnsLatencyPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100DnsLatencyPrometheusruleYaml,
		"sre-prometheus/100-dns-latency.PrometheusRule.yaml",
	)
}

func srePrometheus100DnsLatencyPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100DnsLatencyPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-dns-latency.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100ExcessiveMemoryPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x91\x4f\x6f\xd3\x40\x10\xc5\xef\xfe\x14\x83\xd5\x03\x20\xec\xa4\x84\x5e\x56\x2a\x97\x52\x71\x42\x54\xad\x04\xb7\x56\x53\x7b\xe2\x8e\xea\xdd\xb1\x66\xd6\xa1\x51\x30\x9f\x1d\xd9\x4e\xed\x80\xf8\x7b\x6b\x0e\x1b\x7b\xf6\xed\xdb\xf7\xf3\xc3\x86\x3f\x91\x1a\x4b\x70\xe0\x25\x70\x14\xe5\x50\xe5\x85\x28\x89\xe5\x85\xf8\xc5\xe6\x38\xb9\xe7\x50\x3a\xb8\x50\xf1\x14\xef\xa8\xb5\xcb\xb6\xa6\xc4\x53\xc4\x12\x23\xba\x04\xa0\xc6\x5b\xaa\xad\x7f\x02\x68\x26\x99\x03\x53\xca\xe8\xa1\x20\x33\xde\x50\xe6\xc9\x8b\x6e\x07\x91\x4a\x4d\x0e\xb0\x26\x8d\x99\xb6\x35\xd9\x30\xc5\x86\x73\x69\x28\xd8\x1d\xaf\xe3\x70\xb9\xc7\x80\x15\x95\x0e\xd2\xa8\x2d\xa5\x09\x40\x40\x4f\xbf\x35\xee\x37\xad\xc1\x82\x1c\x4c\x3e\xd9\x8c\x95\x58\x43\x45\x9f\xb2\x52\x69\x9b\x21\x6f\xf6\x67\x43\x80\x21\xdd\x48\x96\x8d\x81\x1d\x9c\x3f\x0a\xcf\x24\x44\xe4\x40\xfa\x61\x38\xf0\x19\x35\x70\xa8\xae\x2e\xcf\x07\x3d\x00\x3d\x34\xea\xa0\x78\x54\xdd\x8c\xbe\x37\x6a\xb6\x9b\xa2\x9e\x7e\x4b\x9f\x5f\xcf\xd4\x2f\xbf\x5e\xdf\xb7\xb7\xd4\xff\x97\xb4\xc6\xb6\x8e\x47\x2f\xd2\x57\xb3\x45\x7f\xee\xd9\x69\xfa\x8b\xd1\xc5\xc7\x77\x69\xb7\x38\x5e\xbe\x7e\x33\x2f\x6f\x57\xfb\x24\x6b\x51\x07\xab\xa5\xdf\xbf\x1e\x16\xd6\xff\x8c\x36\xa4\x1c\xb7\x0e\xbe\x8c\x0c\xfb\x1d\x0c\x41\x22\x46\x96\x70\x20\xf6\x64\x86\x15\x39\xb8\xda\x5a\x24\x3f\xf3\xc1\x6e\x07\x47\xa3\x75\x3e\xf1\x41\xd7\x2d\x0e\xe6\x8d\x94\x43\xe0\x9f\xc6\x3f\xd2\x40\xd7\x4d\xb7\x01\xb0\x41\x6b\x1c\x2a\xe0\x00\x63\x47\x20\x6b\x58\xbd\xef\xd7\xf1\x8b\xf6\x78\x20\x1b\x52\x58\x2d\xc1\x73\x68\x23\x59\xfe\x6f\x9d\x9d\x29\x47\x2e\xb0\x7e\x4a\xa5\x9d\xfc\x6f\x69\xc5\x1e\xe2\xe9\xb7\x76\xf2\xd7\xd6\xbe\x07\x00\x00\xff\xff\x57\x2c\x54\x98\x92\x04\x00\x00")

func srePrometheus100ExcessiveMemoryPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100ExcessiveMemoryPrometheusruleYaml,
		"sre-prometheus/100-excessive-memory.PrometheusRule.yaml",
	)
}

func srePrometheus100ExcessiveMemoryPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100ExcessiveMemoryPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-excessive-memory.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100KubeapilatencyhighCustomPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x92\x4f\x6b\xdb\x4c\x10\xc6\xef\xfa\x14\x13\x91\xc3\xfb\x42\xa4\x36\x85\x42\xbd\x90\x16\x63\x02\x31\x0d\x89\x71\x4c\xff\x5c\x6a\xc6\xd2\x58\xda\x66\xb5\xbb\x99\xd9\x55\x1b\x6c\xf7\xb3\x17\x49\xb6\x9a\x53\xbb\x07\xa1\x9d\x99\xe7\xd9\xdf\x23\x2d\x7a\xfd\x89\x58\xb4\xb3\x0a\x1a\x67\x75\x70\xac\x6d\x95\x17\x8e\xc9\x49\x5e\xb8\xe6\x55\x7b\x99\x3c\x6a\x5b\x2a\x58\xb0\x6b\x28\xd4\x14\x65\x19\x0d\x25\x0d\x05\x2c\x31\xa0\x4a\x00\x0c\x6e\xc8\x48\xf7\x06\xe0\xc7\x31\x05\x8f\xef\xa4\xaf\xb1\x33\xa4\x00\x0d\x71\xc8\x38\x1a\x1a\xaa\xe8\x75\xee\x3c\x59\xa9\xf5\x36\xf4\x67\x35\x68\xb1\xa2\x52\x41\x1a\x38\x52\x9a\x00\x58\x6c\x48\x81\x30\x65\xae\xf0\x99\x6b\x89\x59\x97\xbd\xbe\xeb\x88\xc7\x82\x14\x8c\x26\xd9\x9f\x08\x89\x78\x2a\x3a\xa2\x8a\x5d\xf4\x3d\x5b\xf6\x17\x37\x80\x9e\x6b\x88\x90\x0d\xa8\x0a\x3e\xc6\x0d\x4d\x17\xf3\x5b\x0c\x64\x8b\xe7\x1b\x5d\xd5\x0f\xcb\xeb\x7e\x04\x00\xad\x75\x01\x83\x76\xf6\xa8\xea\x56\x43\x22\x58\x91\x82\x55\x4d\x30\x5d\xcc\x41\x88\x5b\x62\xa8\x51\x00\x61\x32\x09\x35\x78\xe2\x82\x6c\xd0\x86\xc0\x0c\xbe\xe0\xb6\xb0\xdb\xc1\x79\x8b\x26\x12\x1c\x0e\x20\x54\x38\x5b\xca\xe8\x0a\xb0\x75\xdc\x8f\x0c\x1f\x3a\x6f\x89\x37\xdd\xe0\x8b\x12\x93\xb8\xc8\x45\xa7\xcf\x8f\x42\xfa\xe9\x59\xc1\x7e\xb4\x29\x4c\x94\x40\xbc\x7e\x8a\xd8\x9f\xaf\xd0\xeb\x81\x6f\xcd\xf4\x14\x49\xc2\xba\x8c\xdc\x47\x5a\x1f\x11\x54\xad\x25\xb8\x8a\xb1\x19\x55\xbb\xef\x6e\x73\x95\x8e\xd2\xf4\xe2\xd4\xb8\x4a\x5f\xe7\x93\x49\x7a\x21\x71\x73\x82\x39\xbb\x4a\x8d\xab\xd2\x8b\x8e\xf7\xec\x57\xfa\xed\xbf\x0f\xea\x76\xfe\xb0\xda\x7f\x9e\xae\x66\x37\xc3\xb3\xdf\x2f\x96\xf7\x5f\xbe\xee\x67\xf7\x77\x77\xd7\xb3\xd5\xff\xe7\xe9\x01\xde\xc3\x65\x32\x46\x57\xf0\xe6\x6d\x73\xdc\xbe\xbc\x6a\xdd\x12\x6a\x89\x75\x78\x56\xf0\x03\xd9\x76\x3f\xfe\xd4\xf9\xd7\x05\xf9\x1d\x00\x00\xff\xff\x4e\xeb\xed\xd5\xfb\x02\x00\x00")

func srePrometheus100KubeapilatencyhighCustomPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100KubeapilatencyhighCustomPrometheusruleYaml,
		"sre-prometheus/100-kubeapilatencyhigh-custom.PrometheusRule.yaml",
	)
}

func srePrometheus100KubeapilatencyhighCustomPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100KubeapilatencyhighCustomPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-kubeapilatencyhigh-custom.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100MachineApiPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x90\x4f\x6b\x14\x41\x10\xc5\xef\xfb\x29\x1e\x8b\x28\x08\xb3\x6e\x08\x7a\x68\xc8\x49\xf4\x66\x94\x28\x7a\x0c\x95\x9e\xca\x4c\xe9\x74\x57\xdb\x55\x13\x95\x90\xef\x2e\xf3\xc7\x75\xf1\xb2\xb9\x3a\xa7\xe9\xee\xc7\xfb\xf3\xa3\x22\x9f\xb9\x9a\x68\x0e\x48\x9a\xc5\xb5\x4a\xee\x76\x51\x2b\xab\xed\xa2\xa6\x17\x77\x67\x9b\x6f\x92\xdb\x80\x0f\x55\x13\x7b\xcf\xa3\x5d\x8d\x03\x6f\x12\x3b\xb5\xe4\x14\x36\xc0\x40\x37\x3c\xd8\xf4\x07\x94\x83\x2c\xc0\x2a\x37\x89\x62\x2f\x99\x1b\x2a\xd2\x64\x6d\xb9\x49\x62\x89\x3c\xf6\xb3\xba\xea\xc0\x01\x34\x70\xf5\xa6\x8e\x03\xdb\x7c\x4b\x45\x76\x5a\x38\x5b\x2f\xb7\x3e\xb7\x48\x94\xa9\xe3\x36\x60\xeb\x75\xe4\xed\x06\xc8\x94\xf8\x74\xc2\xa4\xb2\x42\x91\x03\x0e\x86\xcd\xdf\xa1\x1b\x2b\x1c\xa7\xde\x5d\xd5\xb1\xcc\x0b\x9a\x47\x3a\x03\x73\xdf\x65\x74\xb3\x4c\x08\xb8\xd4\x4b\x6d\xf9\xfd\xcd\x57\x8e\xfe\x56\xeb\xbb\xc5\xe0\x0b\xd5\x2c\xb9\xfb\x78\xf5\x66\x56\x03\xfc\xb3\xd4\x80\xa7\x13\xab\xef\x03\xd6\x98\x6b\x2a\x72\x6d\x4e\x3e\x1a\x2e\x2e\xb0\x5f\xb5\xb7\x5a\x03\xce\x5e\xa6\xf5\x78\xcc\x7a\xfa\x8c\xef\xb8\x8a\xff\x0a\xf8\xb1\xa4\x1c\x5e\x4e\x6d\x5f\x54\x94\xb3\x3a\xb9\x68\x3e\x32\x4d\x6c\x46\x1d\x07\x6c\x3f\xf5\x8c\x75\x05\x74\x9e\x85\xfb\x7b\x3c\x59\x5a\xec\xfe\x34\x9f\xa2\xf0\xf0\x80\x9e\x2c\x3f\x73\xf4\xd4\x82\x32\xc8\x4c\xa3\x90\x73\x8b\x89\xca\xb4\x04\xde\x33\x0a\x99\xe3\x7c\x8f\x24\x79\x74\xb6\xdd\xf6\x31\x0c\x5f\x57\x71\x89\x34\xfc\x0b\xf1\xf9\x02\xf1\x18\xd6\xf9\xfe\x34\xac\xb8\xda\xfd\x27\xb4\x5e\x1d\xd3\xfa\x1d\x00\x00\xff\xff\x0a\x77\x6a\x50\xb5\x03\x00\x00")

func srePrometheus100MachineApiPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100MachineApiPrometheusruleYaml,
		"sre-prometheus/100-machine-api.PrometheusRule.yaml",
	)
}

func srePrometheus100MachineApiPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100MachineApiPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-machine-api.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100NodeUnschedulablePrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\x3f\x8f\x9c\x40\x0c\xc5\x7b\x3e\x85\x85\xd2\x02\x39\xa5\x9b\x22\x5d\xaa\x48\x51\x74\xf9\xd3\xae\x0c\x78\x99\xd1\x0e\xf6\xc8\x9e\xd9\x24\x3a\xdd\x77\x8f\x18\x2e\xdc\xa6\xb9\xa5\xc2\xf8\xe9\xf9\xf7\x1e\x98\xc2\x4f\x52\x0b\xc2\x0e\x56\xe1\x90\x45\x03\x2f\xfd\x24\x4a\x62\xfd\x24\xeb\x70\x7d\x68\x2e\x81\x67\x07\x5f\x55\x56\xca\x9e\x8a\x3d\x96\x48\xcd\x4a\x19\x67\xcc\xe8\x1a\x80\x88\x23\x45\xdb\xde\x00\xd2\x21\x73\x60\x4a\x1d\xcb\x4c\x5d\x61\x9b\x3c\xcd\x25\xe2\x18\xa9\xca\x54\x22\x39\xc0\x48\x9a\x3b\x2d\x91\xac\x7e\xc5\x14\x7a\x49\xc4\xe6\xc3\x39\xd7\xf3\x2b\x32\x2e\x34\x3b\x68\xb3\x16\x6a\x1b\x00\xc6\x95\xde\xb0\xde\xd6\x96\x70\x22\x07\x87\x53\xf7\x1a\xad\xb1\x44\xd3\x46\xba\xa8\x94\x54\x99\xbb\x7b\x96\x00\x95\x70\xcf\xd7\xed\xd0\x0e\x3e\x97\x91\xbe\xc8\x4c\x3f\x6e\xd5\xdf\x1e\x3f\x55\x15\x00\xfd\x4e\xea\xe0\x52\x46\x3a\x6d\xa6\xa7\xed\xee\xe9\x3f\x67\xf8\x08\xef\x5f\xc4\x67\x51\x07\x0f\xfe\x65\xba\xad\x73\x7b\x8c\xae\xa4\x21\xff\x71\xf0\x0b\x95\xb7\x10\xff\x36\xf7\xc2\xee\x2a\x64\x96\x8c\x39\x08\xdf\x98\xae\x64\x86\x0b\x39\x68\xbf\x7b\x82\x0d\x11\x9e\x9e\xe0\xdd\x7e\xbb\xaf\xf3\xf3\x33\x78\x34\x18\x89\x18\x36\xf2\x03\xfc\x2c\x0a\xab\x28\x41\xf6\xc8\x80\x0c\x5e\x8a\xf6\xed\xe1\x1d\x03\x5f\x1c\xb4\x3e\xe7\x64\x6e\x18\x96\x90\x7d\x19\xeb\xef\x3c\x28\x07\x49\xd6\x99\xa4\x61\x8c\x32\x0e\x2b\x5a\x26\x1d\xae\x1f\x86\x5a\xae\xbd\xea\xf6\xf2\x58\xf2\xe9\xa6\xb9\x1e\x6d\x0a\x61\x96\xa9\x6d\xfe\x06\x00\x00\xff\xff\xaf\x98\xe0\x51\xc1\x02\x00\x00")

func srePrometheus100NodeUnschedulablePrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100NodeUnschedulablePrometheusruleYaml,
		"sre-prometheus/100-node-unschedulable.PrometheusRule.yaml",
	)
}

func srePrometheus100NodeUnschedulablePrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100NodeUnschedulablePrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-node-unschedulable.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100RouterHealthPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x52\x3d\x6f\xdb\x40\x0c\xdd\xf5\x2b\x08\x4d\x76\x11\x29\x0e\x82\x2c\x87\xa6\x45\x87\x6e\x1d\x02\xb7\xe8\x52\x14\x02\x7d\x62\xac\x43\xee\x8e\x07\x1e\x4f\x8d\xd1\x8f\xdf\x5e\x58\x4e\xd4\x0e\x46\xed\xa5\x5b\x34\x51\xe2\xe3\xe3\x7b\x7a\xc4\xe4\x3e\x93\x64\xc7\xd1\x40\xe0\xe8\x94\xc5\xc5\x6d\x6b\x59\x88\x73\x6b\x39\x5c\x8e\x57\xd5\x83\x8b\xbd\x81\x3b\xe1\x40\x3a\x50\xc9\xeb\xe2\xa9\x0a\xa4\xd8\xa3\xa2\xa9\x00\x3c\x6e\xc8\xe7\x7d\x05\x90\x66\x98\x81\x2c\xd4\x08\x17\x25\x69\x06\x42\xaf\xc3\x84\x10\xf6\x64\x00\x3d\x89\x36\x52\x3c\xe5\xe9\x2b\x26\xd7\x72\xa2\x98\x07\x77\xaf\xd3\xe6\x80\x11\xb7\xd4\x1b\xa8\x55\x0a\xd5\x15\x40\xc4\x40\xc7\x59\xf7\x9d\x9c\xd0\x92\x81\x99\xa4\xf9\x63\xa8\xca\x89\xac\x01\xa8\x00\xb6\xc2\x25\x4d\x5a\x9b\x7f\xf0\x01\x4c\xca\x0e\x96\x9a\x83\x58\x03\xeb\x09\xf5\x6e\x44\xe7\x71\xe3\xbc\xd3\xdd\x87\x4f\x37\xab\x3b\xab\x1f\xd7\xef\x27\x24\x00\x3d\x26\x31\xf0\xe3\xe9\x0d\x60\x91\x4b\x58\xe0\xb8\xed\x78\x24\xe9\xd4\x05\x5a\x3c\x94\x0d\x75\x42\xc9\x3b\x8b\xea\x38\x5a\x8e\x2a\xec\x3d\x49\x97\x15\xb5\xe4\x4e\x08\xfb\xdd\x33\x24\x7f\xb9\x1a\xbe\x2e\x97\xb0\xd9\xc1\xe2\xe8\xd4\xc5\x6c\x7e\x09\xf3\xde\xcb\xb9\xe2\x78\x72\x6c\xc6\x06\x7c\x3c\x4b\xde\x41\xd8\xf7\x99\xe1\xb6\xee\xe9\x1e\x8b\xd7\xfa\xe2\xe8\xe4\xed\xaf\xfa\xf0\x87\xdb\xb7\x4d\xfb\xaa\xfe\x09\x6f\x56\xe7\x19\x5a\xc2\x6b\x58\xb5\x37\x4f\x02\xff\xbe\xb3\xfd\x93\x69\x24\x71\xba\x33\xf0\x0d\x25\xee\x73\x7e\xee\x9c\xba\x87\x93\xb1\x5e\xbf\xc4\xfa\xdf\x63\xbd\x3e\x19\xab\x15\xa7\xce\xa2\x3f\x37\xd7\xdf\x01\x00\x00\xff\xff\x1a\xa2\x7c\xcc\xcf\x04\x00\x00")

func srePrometheus100RouterHealthPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100RouterHealthPrometheusruleYaml,
		"sre-prometheus/100-router-health.PrometheusRule.yaml",
	)
}

func srePrometheus100RouterHealthPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100RouterHealthPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-router-health.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100SrePruningPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xc1\x8a\xdb\x40\x0c\x86\xef\x7e\x8a\x9f\xd0\xab\xbd\x5b\x7a\x1b\x68\x2f\x25\x97\x9e\x4a\x16\x7a\x0d\xca\x44\xeb\x4c\xe3\x19\x0d\x1a\x4d\xe8\x12\xfc\xee\xc5\x4e\xd6\x6b\x96\xf8\x64\x4b\xf2\xa7\xef\x17\xe5\xf0\x87\xb5\x04\x49\x0e\x51\x52\x30\xd1\x90\xfa\xce\x8b\xb2\x94\xce\x4b\x7c\xba\x7c\x6d\xce\x21\x1d\x1d\x7e\xab\x44\xb6\x13\xd7\xb2\xab\x03\x37\x91\x8d\x8e\x64\xe4\x1a\x60\xa0\x03\x0f\x65\x7a\x03\xf2\x32\xe6\x50\x94\xdb\xac\x35\x85\xd4\xcf\x3d\x95\x81\x1d\x68\x60\xb5\x56\xeb\xc0\x65\xae\x52\x0e\x9d\x64\x4e\xe5\x14\x5e\x6d\xde\x19\x29\x51\xcf\x47\x87\x8d\x69\xe5\x4d\x03\x24\x8a\xfc\x99\x37\xd5\x4a\x26\xcf\x0e\xcb\xef\xed\x47\x88\xa6\x64\xf6\x93\x53\xaf\x52\xf3\x6c\xd7\x3e\xe4\x00\xb3\xcb\x4d\xbf\xbd\xe9\x4d\x71\xe7\xfe\x4f\x95\xf4\x57\x0e\x5b\x55\xd1\x97\xdd\x76\x9e\x01\xf8\x5f\x56\x87\x73\x3d\xf0\xde\xdf\x06\xf6\xc5\xc8\x6a\xd9\x93\xb7\x70\xe1\xeb\xe2\xf6\x7d\xf3\xe1\xb6\x5a\xbb\x19\x7f\x3c\xdf\x59\xaf\xa2\x0e\xdf\x9e\xe3\xfd\x73\x7d\xcb\xe9\x29\x7c\x61\x0d\xf6\xe6\xe0\x35\x58\xf0\x34\x2c\xad\x87\x07\xf8\x9c\x0d\xa0\x94\xc4\xc8\x82\xa4\x15\x36\x72\x29\xd4\xb3\xc3\xcb\x6e\xfb\x9e\x15\xbf\xe4\x80\xeb\x15\x5f\x6e\x0e\xdd\xc2\xc7\x38\x3e\xad\xea\xf7\xc8\x18\xc7\x05\x07\x84\x02\xa3\xf3\x44\x89\xa2\x0c\x3b\x51\x82\x9d\x82\xda\x1b\x62\x48\xd5\xb8\xc0\x04\x5e\x62\x1e\xd8\xb8\x6b\xfe\x07\x00\x00\xff\xff\xf8\x57\x95\x16\x7a\x02\x00\x00")

func srePrometheus100SrePruningPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100SrePruningPrometheusruleYaml,
		"sre-prometheus/100-sre-pruning.PrometheusRule.yaml",
	)
}

func srePrometheus100SrePruningPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100SrePruningPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-sre-pruning.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100StuckBuildsPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4d\x4b\x03\x31\x10\x86\xef\xfb\x2b\x86\x3d\xb5\x87\xd4\x16\x2f\x12\xd4\x83\xe0\xd1\x22\x2d\x78\x5d\xa6\xd9\xb1\x0d\xcd\x17\x33\x49\xab\x88\xff\x5d\x92\x6a\xf5\x64\x73\x0a\x79\x5f\x9e\x3c\x33\x98\xec\x0b\xb1\xd8\x18\x34\xf8\x18\x6c\x8e\x6c\xc3\x76\x66\x22\x53\x94\x99\x89\xfe\xea\xb0\xe8\xf6\x36\x8c\x1a\x9e\x39\x7a\xca\x3b\x2a\xb2\x2a\x8e\x3a\x4f\x19\x47\xcc\xa8\x3b\x00\x87\x1b\x72\x52\x6f\x00\xe9\x5c\xd3\x20\x4c\x0a\x1d\x71\x16\x25\xb9\x98\xbd\xda\x14\xeb\x46\x69\x3d\x8e\x8e\x34\xb4\x54\x71\x71\x74\x7a\xc5\x64\x67\x31\x51\x90\x9d\x7d\xcd\xed\x7f\x8f\x01\xb7\x34\x6a\xe8\x33\x17\xea\x3b\x80\x80\x9e\xfe\x63\xd7\x5c\x12\x1a\xd2\x70\x46\xa9\xdf\xe1\x3a\x49\x64\xaa\xeb\x96\x63\x49\xcd\x5a\x5d\x64\x02\x34\xc7\xd3\x88\xea\xa4\xad\x61\x5d\x4b\x4b\x3a\x3e\xb4\xda\xf5\x93\x0d\xeb\xd5\x63\xab\x00\xd0\x5b\x62\x0d\x26\x96\x90\x27\x67\x8d\xa1\x01\x07\x34\xd9\x1e\x68\xc8\xd6\xd3\x20\x64\x62\x18\xe5\x23\xed\x50\xe8\xae\x5f\xd2\xb1\xff\x84\x5b\xa8\xd9\x64\x0a\x0a\x16\x37\xf3\x29\xdc\xc3\xfc\x1b\xfb\x77\xd5\xf5\x08\x1d\x88\x6d\x7e\xd7\x70\x44\x0e\x75\xbc\x9f\xe4\xc2\x1a\xbe\x02\x00\x00\xff\xff\x90\x7f\xd7\xbc\xfa\x01\x00\x00")

func srePrometheus100StuckBuildsPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100StuckBuildsPrometheusruleYaml,
		"sre-prometheus/100-stuck-builds.PrometheusRule.yaml",
	)
}

func srePrometheus100StuckBuildsPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100StuckBuildsPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-stuck-builds.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheus100TelemeterClientPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x4f\xeb\xd3\x40\x10\x86\xef\xf9\x14\x63\x4e\xed\x21\xb5\x15\x7a\x59\xd0\x8b\xe8\x4d\x90\x16\xbc\x88\x94\xe9\xe6\x6d\xba\xb8\xff\x9c\x99\x14\x45\xfc\xee\x92\xa4\x54\x11\x54\x7e\x39\x65\x77\xde\x79\xf6\x99\x5d\xae\xe1\x03\x44\x43\xc9\x8e\x52\xc9\xc1\x8a\x84\x3c\x6c\x7c\x11\x14\xdd\xf8\x92\x9e\xdf\x76\xcd\xe7\x90\x7b\x47\xef\xa5\x24\xd8\x15\xa3\x1e\xc6\x88\x26\xc1\xb8\x67\x63\xd7\x10\x45\x3e\x23\xea\xf4\x47\x54\x1f\x31\x47\x2a\xe8\x0c\x11\x09\x06\xe9\x7c\x0c\xc8\x36\x87\xa4\x44\x38\xe2\x08\xb1\x4e\xc6\x08\x9d\x77\xb9\x86\x4d\xa9\xc8\x7a\x0d\x17\x9b\x0f\x4f\x9c\x79\x40\xef\xa8\x35\x19\xd1\x36\x44\x99\x13\xfe\x0a\x9e\x8a\x5a\xd9\xc3\xd1\x83\xd3\xfd\x1a\xab\xd1\x0a\x3f\x59\x0e\x52\xc6\x3a\xfb\x76\xff\x06\x12\xcd\x76\xcb\x64\xdd\x22\xec\xe8\x1d\x4c\x82\xd7\xd7\x73\xea\x88\xdc\xbf\xe5\x10\x43\x1e\x8e\x87\x37\x73\x90\x08\x5f\xab\x38\xe2\xb3\x22\xdb\x4a\xd8\xb0\x4a\x4b\xcf\x42\x3e\x09\xbe\x8c\x50\x3b\x29\x72\xff\x5d\x8d\x6d\xd4\x93\x2f\x3d\x5e\xb6\x2f\xb6\xdb\xf6\xc7\xc7\x7d\xfa\xb4\xa6\x57\xb4\x5d\x53\x11\x7a\x42\xff\xb3\x3f\x01\x77\x9f\x4b\x11\x47\xbb\x7d\xba\x2f\x7f\x7f\xaf\xe9\x53\xdc\x20\xc1\xbe\x39\xf2\x12\x2c\x78\x8e\x8f\xd2\xff\xae\xf4\x67\x00\x00\x00\xff\xff\xe9\xb0\xdb\x64\x41\x02\x00\x00")

func srePrometheus100TelemeterClientPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheus100TelemeterClientPrometheusruleYaml,
		"sre-prometheus/100-telemeter-client.PrometheusRule.yaml",
	)
}

func srePrometheus100TelemeterClientPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheus100TelemeterClientPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/100-telemeter-client.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheusAws100EbsIopsBurstbalancePrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x6f\x32\x31\x0c\x86\xf7\xfb\x15\x16\xd3\xf7\x0d\x47\x29\x42\x1d\xa2\x4e\x48\x6c\x1d\x10\xad\x58\x91\x2f\x67\x8e\xa8\x49\x1c\xd9\x09\x6d\xff\x7d\x95\x83\xd2\x4e\x2d\x64\x4a\xe2\x47\xaf\x9e\xd7\x98\xdc\x96\x44\x1d\x47\x03\x81\xa3\xcb\x2c\x2e\x0e\x53\xcb\x42\xac\x53\xcb\xe1\xee\x78\xdf\xbc\xba\xd8\x1b\x58\x0b\x07\xca\x07\x2a\xba\x29\x9e\x9a\x40\x19\x7b\xcc\x68\x1a\x00\x8f\x1d\x79\xad\x37\x80\x74\xc1\x0c\xa8\x50\x4b\x9d\xb6\x8e\x93\xb6\x5d\x11\xcd\x1d\x7a\x8c\x96\x46\x52\xd8\x93\x01\xf4\x24\xb9\x95\xe2\x49\xc7\x5f\x4c\x6e\xca\x89\xa2\x1e\xdc\x3e\x8f\x06\x01\x23\x0e\xd4\x1b\x98\x64\x29\x34\x69\x00\x22\x06\xfa\x3d\xbd\x12\x9a\xd0\x92\x81\x4b\x58\xfb\x5d\xb0\xd1\x44\xb6\xfa\x0e\xc2\x25\x8d\xe6\xed\x15\xa9\x00\xa3\xe7\xa9\x68\x7b\x52\x37\xb0\xea\x74\xcb\xbe\x04\x5a\x56\x7a\x79\xa2\x9f\x5e\x16\xb3\xb5\xcd\xcf\x9b\xd5\x08\x03\xd0\x7b\x12\x03\x78\x1c\xfe\x51\xa7\xbb\x9a\xbe\xb3\x42\xbd\xcb\xfa\x1f\x1e\x61\x31\x3b\x63\x7b\x16\x03\x0f\xb3\x70\x7e\xfe\xdc\x6c\x3d\x4a\x47\x12\x97\x3f\x0c\xbc\xa1\xc4\xda\xe4\x6b\xf2\x57\xe3\x6b\x94\xe7\xb7\x28\xcf\x6f\x56\xb6\xe2\xb2\xb3\xe8\xaf\x75\xfe\x0c\x00\x00\xff\xff\xe6\x34\x18\x92\x9d\x02\x00\x00")

func srePrometheusAws100EbsIopsBurstbalancePrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheusAws100EbsIopsBurstbalancePrometheusruleYaml,
		"sre-prometheus/aws/100-ebs-iops-burstbalance.PrometheusRule.yaml",
	)
}

func srePrometheusAws100EbsIopsBurstbalancePrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheusAws100EbsIopsBurstbalancePrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/aws/100-ebs-iops-burstbalance.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePrometheusAws100StuckVolumesPrometheusruleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x91\x3d\x6b\xf3\x40\x10\x84\x7b\xfd\x8a\x45\xd5\xfb\x16\x72\xac\xc2\xcd\x81\x8b\x40\x5c\x06\x82\x0d\x6e\x42\x10\xeb\xd3\x46\x3e\x7c\x5f\xdc\xae\x94\x84\x90\xff\x1e\x24\x7f\xc4\xa4\x88\x5d\x28\xe4\xaa\x63\x77\x18\xe6\xd9\xc1\x68\xd6\x94\xd8\x04\xaf\xc0\x05\x6f\x24\x24\xe3\x9b\x89\x0e\x89\x02\x4f\x74\x70\x37\x5d\x99\xed\x8c\xaf\x15\x3c\xa4\xe0\x48\xb6\xd4\xf2\xb2\xb5\x94\x39\x12\xac\x51\x50\x65\x00\x16\x37\x64\xb9\xff\x01\xc4\x93\x4c\x01\x27\x2a\xd0\x52\x12\x2e\x58\x5a\xbd\x2b\xba\x60\x5b\x47\x3c\x08\x53\xb0\xa4\x60\x58\x17\xa9\xb5\x87\x29\x46\x33\x09\x91\x3c\x6f\xcd\xb3\x0c\x01\x1c\x7a\x6c\xa8\x56\x90\x4b\x6a\x29\xcf\x00\x3c\x3a\xfa\xd1\xbc\x17\x70\x44\x4d\x0a\x4e\x5e\xc5\x17\x5e\xc6\x91\x74\x9f\xb6\x49\xa1\x8d\x43\xee\xe2\xb2\x29\xc0\x90\x72\x4f\x59\xec\x83\x2b\x58\x6c\x78\x3d\x48\x56\xbd\xfc\x56\x04\xf5\xd6\xf8\x66\x76\x6f\xfc\x6a\xb9\x18\xb4\x00\xf4\x1a\x93\x02\x67\x7c\x15\x3a\x4a\x95\x18\x47\xff\x68\xc3\xd5\xde\xbc\x62\x41\xa1\xf7\xef\x83\x79\x8e\x47\xb7\xfc\xe3\x71\xe6\x9e\xfe\xc3\x7c\x0e\xe5\xc1\xf2\xfc\xe4\xfd\x63\xea\x28\x19\x79\x53\xf0\x82\xc9\xf7\x90\xc7\xcd\xa5\x63\x5c\x83\x53\x4e\xc7\xe6\x29\xa7\x57\x03\xe9\x64\xc4\x68\xb4\x63\x10\xdd\xd1\x98\x05\xd5\xf4\xc7\x05\x9d\x70\xc6\x29\xe8\x9c\xe7\x17\x0b\xfa\x0c\x00\x00\xff\xff\x7f\xfc\xdd\x82\x75\x04\x00\x00")

func srePrometheusAws100StuckVolumesPrometheusruleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePrometheusAws100StuckVolumesPrometheusruleYaml,
		"sre-prometheus/aws/100-stuck-volumes.PrometheusRule.yaml",
	)
}

func srePrometheusAws100StuckVolumesPrometheusruleYaml() (*asset, error) {
	bytes, err := srePrometheusAws100StuckVolumesPrometheusruleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-prometheus/aws/100-stuck-volumes.PrometheusRule.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning100PruningNamespaceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\xca\x31\x0e\xc2\x30\x10\x04\xc0\xde\xaf\x58\xa5\x4f\x10\xad\x1f\x41\x49\xbf\x24\x4b\x38\x11\x9f\x2d\x9f\xc3\xfb\x11\x0d\xdd\x14\xc3\x66\x77\xf5\xb0\xea\x19\x9f\x6b\x7a\x9b\x6f\x19\x37\x16\x45\xe3\xaa\x54\x34\xb8\x71\x30\x27\xe0\xe0\x43\x47\xfc\x04\xb0\xd9\x52\x9b\x3c\x5e\xf6\x1c\xcb\x5a\xcb\xa5\xd0\xb9\x6b\xcb\x98\x46\x3f\x35\x25\xc0\x59\x94\xf1\x5f\x73\x74\xcd\xad\x9f\x6e\xbe\xa7\x6f\x00\x00\x00\xff\xff\x35\x4e\x64\x6f\x77\x00\x00\x00")

func srePruning100PruningNamespaceYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning100PruningNamespaceYaml,
		"sre-pruning/100-pruning.Namespace.yaml",
	)
}

func srePruning100PruningNamespaceYaml() (*asset, error) {
	bytes, err := srePruning100PruningNamespaceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/100-pruning.Namespace.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning105PruningBuildsCluserrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x8f\x31\x4f\x03\x31\x0c\x85\xf7\xfc\x0a\xab\xfb\xa5\x62\x43\xd9\x80\x81\xbd\x48\xec\xbe\xc4\x6d\x4d\x73\x76\x64\x27\x95\xe0\xd7\xa3\x43\x07\x0b\x88\x6e\xd6\x93\xf5\xbd\xf7\x61\xe3\x57\x32\x67\x95\x04\x36\x63\x8e\x38\xfa\x59\x8d\x3f\xb0\xb3\x4a\xbc\xdc\x7b\x64\xdd\x5f\xef\xc2\x85\xa5\x24\x78\xaa\xc3\x3b\xd9\x41\x2b\x3d\xb2\x14\x96\x53\x58\xa8\x63\xc1\x8e\x29\x00\x54\x9c\xa9\xfa\x7a\x01\x60\xe3\xa8\x8d\xc4\xcf\x7c\xec\x31\xeb\xb2\x5f\x50\xf0\x44\x25\xc1\xae\xdb\xa0\x5d\x00\x10\x5c\x28\x81\x1b\x4d\xcd\x86\x90\x4d\xf3\xe0\x5a\xbc\x50\xab\xfa\xee\x5f\xe1\x5a\x61\x5a\xe9\x40\xc7\x95\x8b\x8d\x9f\x4d\x47\xfb\x67\x6d\x00\xf8\x35\xf6\x76\x57\xb6\xe0\x63\x7e\xa3\xdc\x3d\x85\x69\x23\xbc\x90\x5d\x39\xd3\x43\xce\x3a\xa4\xff\x05\x71\xdc\x52\x6f\x98\x29\xc1\x8f\xf1\xf4\xfd\xb4\x0a\x84\xcf\x00\x00\x00\xff\xff\x2a\xee\x16\x6c\x67\x01\x00\x00")

func srePruning105PruningBuildsCluserrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning105PruningBuildsCluserrolebindingYaml,
		"sre-pruning/105-pruning-builds.cluserRoleBinding.yaml",
	)
}

func srePruning105PruningBuildsCluserrolebindingYaml() (*asset, error) {
	bytes, err := srePruning105PruningBuildsCluserrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/105-pruning-builds.cluserRoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning105PruningBuildsClusterroleYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x31\x4f\x3b\x31\x0c\xc5\xf7\x7c\x8a\xa8\xfb\x5d\xf5\xdf\xfe\xca\xca\xc0\xce\xc0\xee\x4b\xdc\xd6\xaa\x2f\x8e\x6c\xa7\x12\x7c\x7a\x74\xa1\x02\x44\x91\x28\xdb\x93\xe3\xfc\xde\xf3\x83\x46\xcf\xa8\x46\x52\x53\xd4\x05\xf2\x0c\xdd\x4f\xa2\xf4\x0a\x4e\x52\xe7\xf3\x7f\x9b\x49\xf6\x97\x7f\xe1\x4c\xb5\xa4\xf8\xc0\xdd\x1c\xf5\x49\x18\xc3\x8a\x0e\x05\x1c\x52\x88\x91\x61\x41\xb6\x4d\xc5\x08\x8d\x66\x69\x58\xed\x44\x07\x9f\xb3\xac\xfb\x15\x2a\x1c\xb1\xa4\xb8\x73\xed\xb8\x0b\x31\x56\x58\x31\x45\x53\x9c\x9a\xf6\x8a\x3a\x2d\x9d\xb8\x58\xc1\xc6\xf2\x62\x53\xd6\xa0\x9d\xd1\x52\x98\x36\xdc\xa3\x4a\x6f\x83\x3e\xc5\xdd\xf6\x5d\xd1\xa4\x6b\xc6\xeb\xac\x49\xb1\x21\x14\x1b\x53\x1e\xd1\xb3\x54\x57\x61\x46\xdd\x9e\x2e\xa8\xcb\x75\x99\xc9\x7c\x88\x23\xfa\x7d\xf8\x7b\xa8\x05\x19\x1d\x6f\x79\xd0\x9a\x7d\x69\x83\xe4\x16\xff\x7e\xf4\x8a\xd5\xb3\xd4\x03\x1d\xbf\x91\xb7\x98\x1f\xb9\x6f\xf8\xa3\xb7\x5f\x0c\xc6\xce\x27\xfb\x3a\xf8\x53\x2d\x77\xdb\xfc\x58\xcb\x5b\x00\x00\x00\xff\xff\x52\xc4\xad\xae\x65\x02\x00\x00")

func srePruning105PruningBuildsClusterroleYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning105PruningBuildsClusterroleYaml,
		"sre-pruning/105-pruning-builds.clusterRole.yaml",
	)
}

func srePruning105PruningBuildsClusterroleYaml() (*asset, error) {
	bytes, err := srePruning105PruningBuildsClusterroleYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/105-pruning-builds.clusterRole.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning105PruningImagesClusterrolebindingYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\xb1\x4e\xc3\x40\x0c\x86\xf7\x7b\x0a\xab\x7b\x52\xb1\xa1\xdb\x80\x81\xbd\x48\xec\xce\xc5\x4d\x4d\x73\xf6\xc9\xf6\x55\x82\xa7\x47\x45\x01\x06\x50\x37\xcb\xb2\xbf\xff\xfb\xb1\xf1\x2b\x99\xb3\x4a\x06\x9b\xb0\x8c\xd8\xe3\xa4\xc6\x1f\x18\xac\x32\x9e\xef\x7d\x64\xdd\x5f\xee\xd2\x99\x65\xce\xf0\xb4\x76\x0f\xb2\x83\xae\xf4\xc8\x32\xb3\x2c\xa9\x52\xe0\x8c\x81\x39\x01\xac\x38\xd1\xea\xd7\x09\x00\x1b\x8f\xda\x48\xfc\xc4\xc7\x18\x8b\xd6\x7d\x45\xc1\x85\xe6\x0c\xbb\xb0\x4e\xbb\x04\x20\x58\x29\x83\x1b\x0d\xcd\xba\x90\x0d\x5c\x71\x21\x4f\xa6\x2b\x1d\xe8\x78\x05\x61\xe3\x67\xd3\xde\x6e\xe8\x25\x80\x3f\x76\xbf\xf0\x77\x0f\xaa\xf9\x0b\xbc\xa5\x24\xef\xd3\x1b\x95\xf0\x9c\x86\xed\xf3\x85\xec\xc2\x85\x1e\x4a\xd1\x2e\xf1\x9f\x99\xe3\xb6\xf5\x86\x85\x32\xfc\x54\x1b\xbe\x8f\x58\x96\xcf\x00\x00\x00\xff\xff\xa6\x4e\xd4\x98\x4e\x01\x00\x00")

func srePruning105PruningImagesClusterrolebindingYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning105PruningImagesClusterrolebindingYaml,
		"sre-pruning/105-pruning-images.clusterRoleBinding.yaml",
	)
}

func srePruning105PruningImagesClusterrolebindingYaml() (*asset, error) {
	bytes, err := srePruning105PruningImagesClusterrolebindingYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/105-pruning-images.clusterRoleBinding.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning105PruningServiceaccountYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8c\xb1\x0e\xc2\x30\x0c\x05\xf7\x7c\x85\xd5\xbd\x45\xac\xde\xf8\x06\x24\x76\x93\x3e\x8a\x45\xe3\x44\x76\xd2\xef\x47\x48\xc0\x76\x3a\x9d\x4e\x9a\xde\xe0\xa1\xd5\x98\x8e\x73\x7a\xa9\xad\x4c\x57\xf8\xa1\x19\x97\x9c\xeb\xb0\x9e\x0a\xba\xac\xd2\x85\x13\xd1\x2e\x77\xec\xf1\x21\x22\x69\xba\xd4\x06\x8b\xa7\x3e\xfa\x92\x6b\x39\x15\x31\xd9\xb0\x32\x4d\xdd\x07\xa6\x44\x64\x52\xc0\x14\x8e\xb9\xf9\x30\xf8\x1c\xf2\xb5\xd1\x24\x83\xe9\x3f\x98\x7f\x91\xda\xf6\x0e\x00\x00\xff\xff\x87\xe9\xee\x12\x96\x00\x00\x00")

func srePruning105PruningServiceaccountYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning105PruningServiceaccountYaml,
		"sre-pruning/105-pruning.serviceAccount.yaml",
	)
}

func srePruning105PruningServiceaccountYaml() (*asset, error) {
	bytes, err := srePruning105PruningServiceaccountYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/105-pruning.serviceAccount.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning110PruningBuildsCronjobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x92\x4d\x6b\xdc\x40\x0c\x86\xef\xfe\x15\x22\xc7\xc0\xc4\xbb\xa5\xb9\x0c\xe4\x10\x7a\x29\xa1\x84\x50\x4a\xef\xb2\xac\xb5\xd5\xcc\x17\x1a\x79\x8b\xff\x7d\xf1\x6e\x9d\xee\xba\x2b\x1f\x6c\x9e\x57\x7e\x67\xf4\x81\x45\x7e\xb2\x56\xc9\xc9\x43\x87\x46\x63\x7b\xdc\x77\x6c\xb8\x6f\xde\x25\xf5\x1e\xbe\x68\x4e\x2f\xb9\x6b\x22\x1b\xf6\x68\xe8\x1b\x80\x80\x1d\x87\xba\x7c\x01\x60\x91\x87\x5c\x38\xd5\x51\x0e\xf6\x40\x39\xb6\x11\x13\x0e\xdc\x7b\xb8\x33\x9d\xf8\xae\x01\x48\x18\xd9\x43\x37\x49\xe8\xab\x2b\x3a\x25\xd6\xbf\xb4\x16\x24\xf6\xf0\x61\xe0\xaa\xf2\x29\x43\xd2\xd0\xd4\xc2\xb4\x1c\x42\x39\xd1\xa4\xca\x89\xe6\xb7\x1c\x84\x66\x0f\xdf\xb9\x04\x24\x6e\x00\x0e\x28\x81\xfb\x97\xdc\xd5\xaf\x52\x2d\xeb\xfc\x4d\xa2\x98\x87\xc7\x06\xe0\x57\xee\x7e\x70\x2c\x01\x8d\xcf\x97\x5d\x1d\x97\xb0\x2b\x65\xab\x2e\x41\x39\x19\x4a\x62\xad\x97\xd4\x01\xe5\x18\x31\xf5\x97\x70\xc1\x99\x36\x00\xfb\xb8\x21\xa7\xda\x37\xec\xdc\x96\x0d\x74\xee\x9d\xb9\xb8\x39\x4f\x69\x60\x75\x36\x62\x7a\xfa\xf4\x79\xbc\x9d\x45\x39\x96\xc0\xc6\x4f\xfb\xdb\xfa\xb9\x45\x37\x54\xca\xe9\x20\x7a\x7d\x49\x89\x38\xb0\x3f\xbf\x9c\xf2\x20\xd5\x74\xfe\x37\x61\xb7\x11\xea\x91\xfc\xe3\x6e\xb7\x6b\x3f\x32\x5a\x0a\xe2\x97\xc6\x56\xfb\xdf\xf8\x6d\x0a\x61\x9d\xe1\x73\xf8\x8d\xf3\x75\xe1\xb7\x17\x65\x0d\xe5\x6a\xa8\xb6\xfe\xff\xca\xc7\x2b\xb9\xb2\x1e\x85\xf8\x99\x28\x4f\xc9\x5e\x4f\x56\xeb\x3a\xb1\xba\x8a\x0d\x40\xa5\x91\xfb\x29\xb0\x87\x1d\xdc\xb7\x7b\xb8\x5f\x9e\xe6\x4f\x00\x00\x00\xff\xff\xdf\x07\xc6\x06\x04\x03\x00\x00")

func srePruning110PruningBuildsCronjobYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning110PruningBuildsCronjobYaml,
		"sre-pruning/110-pruning-builds.CronJob.yaml",
	)
}

func srePruning110PruningBuildsCronjobYaml() (*asset, error) {
	bytes, err := srePruning110PruningBuildsCronjobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/110-pruning-builds.CronJob.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning110PruningDeploymentsCronjobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x92\x4f\x6b\xdc\x4c\x0c\xc6\xef\xfe\x14\x22\xc7\xc0\xc4\xbb\x2f\x6f\x2e\x03\x39\x84\x5e\x4a\x28\x21\x94\xd2\xbb\x2c\x6b\xed\x69\x66\x46\x83\x46\xde\xe2\x6f\x5f\xbc\x5b\xa7\xbb\xee\x52\xf9\x60\xf3\xfc\xc4\x63\xfd\xc3\x12\xbe\xb3\xd6\x20\xd9\x43\x87\x46\x63\x7b\xdc\x77\x6c\xb8\x6f\xde\x43\xee\x3d\x7c\x52\xc9\x2f\xd2\x35\x89\x0d\x7b\x34\xf4\x0d\x40\xc4\x8e\x63\x5d\xbe\x00\xb0\x84\x07\x29\x9c\xeb\x18\x0e\xf6\x40\x92\xda\x84\x19\x07\xee\x3d\xdc\x99\x4e\x7c\xd7\x00\x64\x4c\xec\xa1\xe7\x12\x65\x4e\x9c\xad\xba\xa2\x53\x66\xfd\x8d\x6a\x41\x62\x0f\x1f\x2e\xae\x2a\x9f\x32\x42\x1e\x9a\x5a\x98\x96\x3f\x91\x64\x9a\x54\x39\xd3\xfc\x26\x31\xd0\xec\xe1\x2b\x97\x88\xc4\x0d\xc0\x01\x43\xe4\xfe\x45\xba\xfa\x39\x54\x13\x9d\xbf\x84\x14\xcc\xc3\x63\x03\xf0\x43\xba\x6f\x9c\x4a\x44\xe3\x73\xc5\xab\xe3\x12\x76\x45\xb6\x74\x09\x92\x6c\x18\x32\x6b\xbd\x54\x1d\x90\xa4\x84\xb9\xbf\x14\x17\x59\x68\x23\x60\x9f\x36\xca\xa9\xf7\x8d\x76\x31\x9b\x0d\x71\xee\x9d\xb9\x38\x92\x54\x22\x1b\x3f\xed\x6f\xf3\x59\xa6\x3c\xb0\x3a\x1b\x31\x3f\xfd\xf7\xff\x78\x3b\xeb\x3c\xa7\x1b\x1e\x24\xf9\x10\xf4\xba\xd2\x90\x70\x60\x7f\x7e\x39\xe5\x21\x54\xd3\xf9\xcf\xae\xdd\x06\xd4\x23\xf9\xc7\xdd\x6e\xd7\x7e\x64\xb4\x14\x83\x5f\xa6\x5b\xed\x6f\xe3\xb7\x29\xc6\x75\x91\xcf\xf1\x27\xce\xd7\x8d\xff\xe3\x64\xd6\x50\xae\x86\x6a\xab\xc9\x2b\x1f\xaf\x70\x65\x3d\x06\xe2\x67\x22\x99\xb2\xbd\x9e\xfc\xd6\xc3\x62\x75\x15\x1b\x80\x4a\x23\xf7\x53\x64\x0f\x3b\xb8\x6f\xf7\x70\xbf\x3c\xcd\xaf\x00\x00\x00\xff\xff\xc8\xfb\xba\x64\x13\x03\x00\x00")

func srePruning110PruningDeploymentsCronjobYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning110PruningDeploymentsCronjobYaml,
		"sre-pruning/110-pruning-deployments.CronJob.yaml",
	)
}

func srePruning110PruningDeploymentsCronjobYaml() (*asset, error) {
	bytes, err := srePruning110PruningDeploymentsCronjobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/110-pruning-deployments.CronJob.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _srePruning110PruningImagesCronjobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x52\xc1\x4e\xdb\x40\x10\xbd\xfb\x2b\x46\x88\x03\x20\x2d\x1b\xaa\x72\x59\x29\x07\x8a\x22\x51\x5a\x01\x0a\x29\x57\x34\xde\x4c\xec\x6d\xd6\xbb\xd6\xcc\xd8\x95\xff\xbe\x72\x82\x69\x13\x18\x5f\xac\xf7\xde\xbc\x59\xcd\x3c\x6c\xc3\x0b\xb1\x84\x9c\x1c\x94\xa8\xbe\xb6\xfd\x55\x49\x8a\x57\xc5\x36\xa4\xb5\x83\x5b\xce\xe9\x3e\x97\x45\x43\x8a\x6b\x54\x74\x05\x40\xc4\x92\xa2\x8c\x7f\x00\xd8\x86\xcb\xdc\x52\x92\x3a\x6c\xf4\xd2\xe7\xc6\x36\x98\xb0\xa2\xb5\x83\x13\xe5\x8e\x4e\x0a\x80\x84\x0d\x39\x08\x0d\x56\x64\x5a\xee\x12\xf1\x1b\x28\x2d\x7a\x72\xf0\xde\x6f\x84\xf7\x8a\x90\xaa\x42\x5a\xf2\xe3\x0c\x9f\x93\xef\x98\x29\xf9\xe1\x29\xc7\xe0\x07\x07\x4b\x6a\x23\x7a\x2a\x00\x36\x18\x22\xad\xef\x73\x29\x77\x41\x34\xf3\xf0\x33\x34\x41\x1d\x5c\x17\x00\xbf\x73\xb9\xa2\xa6\x8d\xa8\xb4\x7f\xeb\xe4\x38\x96\x1e\x30\xc7\xec\x58\x3e\x27\xc5\x90\x88\xe5\x7f\xd4\x00\x72\x75\x80\x8c\x98\x2d\x43\xb2\x25\x4a\x7d\x84\x1b\x7f\x04\x64\x0f\xb8\x6e\x60\xb7\x85\xfd\x46\x04\x8c\xd1\xbc\xa5\x34\x3f\x3d\x3d\xf3\xa8\x60\x7b\x64\xcb\x5d\xb2\x42\x9e\x49\xc5\x6e\xbb\x92\x38\x91\x92\x5c\x86\x6c\x85\xb8\x0f\x9e\xd0\xfb\xdc\x25\xb5\xbb\xd6\xf3\x83\x29\x00\xc6\x8c\x2a\xe2\x79\xad\xda\x8a\xb3\xf6\xf4\xec\xc7\xaf\x6f\x8b\xe5\xc3\x62\xb5\x78\x7e\x7d\x5e\x2c\x5f\xbe\xdf\x2e\x5e\xef\x1e\x9f\x57\xe7\xee\x53\xea\xe9\x71\xb9\xfa\x68\xba\x25\x6a\xcd\x90\xbb\x54\x11\x1b\xad\x31\xcd\xbf\x7c\xad\x27\x5c\xb1\x32\x4c\x7d\x18\xa3\x24\xf3\x6b\x30\x26\x24\x21\xdf\x31\x19\xd9\x86\xd6\x68\x14\xd3\x13\x87\xcd\x30\x1f\x73\xf1\xc1\xdc\xe7\xb4\x09\xdc\x1c\xe0\xbb\x05\x4d\xc9\x61\xaa\x82\x28\x0f\xff\xe2\x66\x8e\x08\xe9\xbd\xbb\x9e\xcd\x66\xf6\x5d\x61\x7d\x0c\x6e\x3c\xb3\xe8\x47\xe3\xa7\x2e\xc6\x29\x51\x37\xf1\x0f\x0e\x72\xa0\xf9\x34\xb5\x53\x31\x89\x22\xeb\xd4\xfe\x40\xfd\x01\xfd\x76\xa4\x9b\xfd\x91\x1e\x76\x4e\x53\xb6\x89\x8d\x60\x01\x20\xbe\xa6\x75\x17\xc9\xc1\x0c\x2e\xec\x15\x5c\x8c\x5f\xf1\x37\x00\x00\xff\xff\x1b\x95\x4f\xa1\x90\x03\x00\x00")

func srePruning110PruningImagesCronjobYamlBytes() ([]byte, error) {
	return bindataRead(
		_srePruning110PruningImagesCronjobYaml,
		"sre-pruning/110-pruning-images.CronJob.yaml",
	)
}

func srePruning110PruningImagesCronjobYaml() (*asset, error) {
	bytes, err := srePruning110PruningImagesCronjobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "sre-pruning/110-pruning-images.CronJob.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _veleroConfiguration100VeleroVeleroYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x3d\x0e\xc2\x30\x14\x03\xe0\x3d\xa7\x78\xea\x4e\xab\xae\xef\x20\xdd\x4d\x62\xe8\x13\xf9\x53\x92\xf6\xfc\x08\x51\x21\x36\x7b\xf8\x6c\x54\xdb\xd8\xba\x95\xac\x92\x90\xf1\x64\x98\x4b\x65\xee\xbb\x3d\xc6\x6c\x65\x39\x57\xc4\xba\x63\x75\x2f\xcb\x41\x65\x63\x64\x2b\x2e\x71\x20\x60\x40\x9d\x48\xc4\x9d\xb1\x7f\x92\x08\xaa\xfd\x71\x5f\xd2\x72\x8d\xaa\x4c\xa3\x1d\x9c\x9c\x48\x46\xa2\x8a\x8f\x47\x1f\x6c\x57\xef\x15\x9e\x2a\x3f\x7a\x3b\xbf\x3f\xef\x00\x00\x00\xff\xff\xc7\xc4\xda\xc2\x9f\x00\x00\x00")

func veleroConfiguration100VeleroVeleroYamlBytes() ([]byte, error) {
	return bindataRead(
		_veleroConfiguration100VeleroVeleroYaml,
		"velero-configuration/100-velero.Velero.yaml",
	)
}

func veleroConfiguration100VeleroVeleroYaml() (*asset, error) {
	bytes, err := veleroConfiguration100VeleroVeleroYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "velero-configuration/100-velero.Velero.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _veleroConfiguration110VeleroSchedulesDailyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x3d\x6b\xf3\x30\x10\xde\xfd\x2b\x0e\x2f\x81\x80\xf3\xb1\xbc\xbc\x68\xed\x5a\x3a\x34\xd0\xfd\x22\x5d\x62\x91\x93\x4e\xe8\x4e\xa1\xfd\xf7\x25\x8e\x53\x12\x30\x5e\xcc\xf3\x2d\x09\x4b\xfc\xa2\xaa\x51\xb2\x83\x2b\x31\x55\xd9\x44\xd9\x5e\xf7\xdd\x25\xe6\xe0\xe0\xe0\x47\x0a\x8d\xa9\x4b\x64\x18\xd0\xd0\x75\x00\x8c\x47\x62\xbd\xfd\x01\x60\x89\x1b\x29\x94\x75\x8c\x27\xdb\x78\x49\xdb\x84\x19\xcf\x14\x1c\xf4\x56\x1b\xf5\x1d\x40\xc6\x44\x0e\x02\x46\xfe\x19\x4e\x8d\x79\x38\xa2\xbf\xb4\x32\x33\x5a\xd0\x93\x83\xbf\x90\xe1\x3e\xa3\xd3\x42\xfe\xd6\xa1\xf3\x04\x07\x3b\xd8\xc3\xfa\xf6\x75\x00\x46\xa9\x30\x1a\xdd\x57\xd0\xb7\xe7\x16\x28\x7c\x3c\xf2\xd4\x41\x6e\xcc\x2f\xe4\x27\xa9\xb4\xfa\xca\x8d\x22\x97\xf9\x24\x00\x75\x41\x10\xf3\x64\x7e\xe3\xa6\x46\x75\x29\x62\x56\x3c\x77\x4f\xf8\x00\xab\xf5\xea\x45\xb1\xe4\x9e\xee\xf2\x40\x4c\xde\xa4\x3e\xe1\x6a\x52\xf1\x4c\xef\xe2\xd1\xa6\xc7\xe9\xfb\x09\x37\x63\x07\xfb\x7f\xff\xc7\x5d\xda\xe9\x84\x5c\x85\x5b\xa2\x43\xc6\xa2\xa3\xd8\xc3\x30\x77\xfc\x06\x00\x00\xff\xff\x66\x74\xb6\x44\xdf\x01\x00\x00")

func veleroConfiguration110VeleroSchedulesDailyYamlBytes() ([]byte, error) {
	return bindataRead(
		_veleroConfiguration110VeleroSchedulesDailyYaml,
		"velero-configuration/110-velero.Schedules-daily.yaml",
	)
}

func veleroConfiguration110VeleroSchedulesDailyYaml() (*asset, error) {
	bytes, err := veleroConfiguration110VeleroSchedulesDailyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "velero-configuration/110-velero.Schedules-daily.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _veleroConfiguration110VeleroSchedulesHourlyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\xbd\x6a\xc3\x30\x10\xde\xfd\x14\x87\x97\x40\xc0\xf9\x29\x85\x82\xd6\xae\xa5\x43\x03\xd9\x2f\xf2\x25\x76\x73\xd2\x09\xdd\x29\xb4\x6f\x5f\x22\x3b\x25\x81\xe0\xc5\x7c\xff\x92\x30\x8d\x7b\xca\x3a\x4a\x74\x70\x21\xa6\x2c\xab\x51\xd6\x97\x6d\x73\x1e\x63\xef\x60\xe7\x07\xea\x0b\x53\x13\xc8\xb0\x47\x43\xd7\x00\x30\x1e\x88\xf5\xfa\x07\x80\x69\x5c\x49\xa2\xa8\xc3\x78\xb4\x95\x97\xb0\x0e\x18\xf1\x44\xbd\x83\xd6\x72\xa1\xb6\x01\x88\x18\xc8\xc1\x20\x25\xf3\x6f\x27\x87\x6f\xf2\xd6\x1d\xd0\x9f\x4b\x9a\x49\x4d\xe8\xc9\xc1\x7f\x4e\x37\x2d\x69\x34\x91\xbf\xd6\xe8\xbc\xc2\xc1\xf6\x0d\x96\xd3\xd7\x00\x18\x85\xc4\x68\x34\x2d\xa1\x1f\xcf\xa5\xa7\xfe\xf3\x16\xa8\x0e\x62\x61\x7e\x20\xbf\x48\xa5\xe4\x47\x6e\x10\x39\xcf\xa7\x01\xc8\x4f\x04\x63\xac\xe6\x77\x2e\x6a\x94\x9f\x45\xcc\x8a\xfb\xee\x8a\x77\xb0\x58\x2e\x1e\x14\xcf\xdc\xf5\x3e\x77\xc4\xe4\x4d\xf2\x1d\xae\x11\x93\x0e\x62\x7b\xe1\x12\xae\x8e\x23\xb2\xd2\x44\x99\x64\x3c\xd1\x87\x78\xb4\xfa\x76\x6d\x5b\x71\x33\x76\xf0\xf2\x3a\x6c\xc2\x46\x2b\x70\xa9\xde\xdd\x9c\x74\xd3\xcf\xed\x7f\x01\x00\x00\xff\xff\x2d\x69\xb6\xbd\xfd\x01\x00\x00")

func veleroConfiguration110VeleroSchedulesHourlyYamlBytes() ([]byte, error) {
	return bindataRead(
		_veleroConfiguration110VeleroSchedulesHourlyYaml,
		"velero-configuration/110-velero.Schedules-hourly.yaml",
	)
}

func veleroConfiguration110VeleroSchedulesHourlyYaml() (*asset, error) {
	bytes, err := veleroConfiguration110VeleroSchedulesHourlyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "velero-configuration/110-velero.Schedules-hourly.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _veleroConfiguration110VeleroSchedulesWeeklyYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x51\x4d\x6b\x32\x31\x10\xbe\xef\xaf\x18\xf6\x22\x08\xab\xab\x97\x17\x72\x7d\xaf\xa5\x87\x0a\xbd\x8f\xd9\x47\x37\xec\xe4\x83\x64\x62\xdb\x7f\x5f\x5c\xd7\xa2\xe0\x2d\x3c\xdf\x49\x38\xb9\x4f\xe4\xe2\x62\x30\x74\x81\x20\xc7\x8d\x8b\xdb\xcb\xae\x99\x5c\x18\x0c\x1d\xec\x88\xa1\x0a\x1a\x0f\xe5\x81\x95\x4d\x43\x24\x7c\x84\x94\xeb\x89\x88\x93\xdb\xc4\x84\x50\x46\x77\xd2\x8d\x8d\x7e\xeb\x39\xf0\x19\x83\xa1\x56\x73\x45\xdb\x10\x05\xf6\x30\xf4\x05\x4c\xf2\xd3\x9d\xaa\x48\x77\x64\x3b\xd5\xb4\x50\x25\xb1\x85\xa1\xbf\x94\xee\xb6\xa3\x29\x09\xf6\x5a\x52\x96\x0d\x86\x7a\xda\xd3\x9a\xd6\xb4\x6b\x88\x14\x3e\x09\x2b\x6e\x33\xf0\x6d\xa5\x0e\x18\xde\xef\x79\xc5\x50\xa8\x22\x4f\xe4\x07\x4a\xac\xf9\x99\x1b\x63\x9c\x96\xab\x10\xe5\x17\x02\x17\x66\xf3\x7f\xa9\x45\x91\x5f\x45\x2c\x8a\xc7\xee\x19\xef\x68\xb5\x5e\x3d\x29\x5e\xb9\xe7\xc7\x3c\x40\x60\x35\xe6\x07\xbc\x68\xcc\x7c\xc6\x5b\xb4\xac\xf3\xef\xb4\xed\x8c\xab\x8a\xa1\x7f\xfb\x7e\xec\x7d\x5f\x66\xe4\x12\xa5\x7a\x1c\x02\xa7\x32\x46\xbd\x1b\xee\x1d\xbf\x01\x00\x00\xff\xff\x44\x42\xff\x9a\xe1\x01\x00\x00")

func veleroConfiguration110VeleroSchedulesWeeklyYamlBytes() ([]byte, error) {
	return bindataRead(
		_veleroConfiguration110VeleroSchedulesWeeklyYaml,
		"velero-configuration/110-velero.Schedules-weekly.yaml",
	)
}

func veleroConfiguration110VeleroSchedulesWeeklyYaml() (*asset, error) {
	bytes, err := veleroConfiguration110VeleroSchedulesWeeklyYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "velero-configuration/110-velero.Schedules-weekly.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"UPSERT/osd-operatorhub-crd/00-operatorhub.crd.yaml":                                upsertOsdOperatorhubCrd00OperatorhubCrdYaml,
	"cluster-monitoring-config/cluster-monitoring-config.yaml":                          clusterMonitoringConfigClusterMonitoringConfigYaml,
	"kubelet-config/01-patch.machineconfigpool.yaml":                                    kubeletConfig01PatchMachineconfigpoolYaml,
	"kubelet-config/02-patch.machineconfigpool.yaml":                                    kubeletConfig02PatchMachineconfigpoolYaml,
	"kubelet-config/03-kubelet-config.yaml":                                             kubeletConfig03KubeletConfigYaml,
	"managed-velero-operator/050-velero.CustomResourceDefinition.yaml":                  managedVeleroOperator050VeleroCustomresourcedefinitionYaml,
	"managed-velero-operator/100-velero.Namespace.yaml":                                 managedVeleroOperator100VeleroNamespaceYaml,
	"managed-velero-operator/105-velero.ServiceAccount.yaml":                            managedVeleroOperator105VeleroServiceaccountYaml,
	"managed-velero-operator/110-velero.ClusterRole.yaml":                               managedVeleroOperator110VeleroClusterroleYaml,
	"managed-velero-operator/110-velero.Role.yaml":                                      managedVeleroOperator110VeleroRoleYaml,
	"managed-velero-operator/111-velero.Role.yaml":                                      managedVeleroOperator111VeleroRoleYaml,
	"managed-velero-operator/112-velero.Role.yaml":                                      managedVeleroOperator112VeleroRoleYaml,
	"managed-velero-operator/115-velero.ClusterRoleBinding.yaml":                        managedVeleroOperator115VeleroClusterrolebindingYaml,
	"managed-velero-operator/115-velero.RoleBinding.yaml":                               managedVeleroOperator115VeleroRolebindingYaml,
	"managed-velero-operator/116-velero.RoleBinding.yaml":                               managedVeleroOperator116VeleroRolebindingYaml,
	"managed-velero-operator/117-velero.RoleBinding.yaml":                               managedVeleroOperator117VeleroRolebindingYaml,
	"managed-velero-operator/120-velero.ServiceAccount.yaml":                            managedVeleroOperator120VeleroServiceaccountYaml,
	"managed-velero-operator/125-velero.RoleBinding.yaml":                               managedVeleroOperator125VeleroRolebindingYaml,
	"managed-velero-operator/130-velero.CredentialRequest.yaml":                         managedVeleroOperator130VeleroCredentialrequestYaml,
	"managed-velero-operator/135-velero.Deployment.yaml":                                managedVeleroOperator135VeleroDeploymentYaml,
	"osd-aquasec-operator/00-namespace.yaml":                                            osdAquasecOperator00NamespaceYaml,
	"osd-aquasec-operator/01-operatorgroup.yaml":                                        osdAquasecOperator01OperatorgroupYaml,
	"osd-aquasec-operator/01-role.yaml":                                                 osdAquasecOperator01RoleYaml,
	"osd-aquasec-operator/02-rolebinding.yaml":                                          osdAquasecOperator02RolebindingYaml,
	"osd-aquasec-operator/10-clusterrole-image-scanner.yaml":                            osdAquasecOperator10ClusterroleImageScannerYaml,
	"osd-aquasec-operator/11-clusterrolebinding-image-scanner.yaml":                     osdAquasecOperator11ClusterrolebindingImageScannerYaml,
	"osd-codeready-workspaces/00-namespace.yaml":                                        osdCodereadyWorkspaces00NamespaceYaml,
	"osd-codeready-workspaces/01-operatorgroup.yaml":                                    osdCodereadyWorkspaces01OperatorgroupYaml,
	"osd-codeready-workspaces/05-role.yaml":                                             osdCodereadyWorkspaces05RoleYaml,
	"osd-codeready-workspaces/06-rolebinding.yaml":                                      osdCodereadyWorkspaces06RolebindingYaml,
	"osd-console-branding/osd-branding.console.yaml":                                    osdConsoleBrandingOsdBrandingConsoleYaml,
	"osd-curated-operators/00-cvo-overrides.patch.yaml":                                 osdCuratedOperators00CvoOverridesPatchYaml,
	"osd-curated-operators/10-curated-certified-operators.patch.yaml":                   osdCuratedOperators10CuratedCertifiedOperatorsPatchYaml,
	"osd-curated-operators/10-curated-community-operators.patch.yaml":                   osdCuratedOperators10CuratedCommunityOperatorsPatchYaml,
	"osd-curated-operators/10-curated-redhat-operators.patch.yaml":                      osdCuratedOperators10CuratedRedhatOperatorsPatchYaml,
	"osd-curated-operatorsources/00-operatorhub.cr.yaml":                                osdCuratedOperatorsources00OperatorhubCrYaml,
	"osd-curated-operatorsources/10-curated-certified-operators.OperatorSource.yaml":    osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYaml,
	"osd-curated-operatorsources/10-curated-community-operators.OperatorSource.yaml":    osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYaml,
	"osd-curated-operatorsources/10-curated-redhat-operators.OperatorSource.yaml":       osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYaml,
	"osd-customer-monitoring/00-namespace.yaml":                                         osdCustomerMonitoring00NamespaceYaml,
	"osd-customer-monitoring/01-operatorgroup.yaml":                                     osdCustomerMonitoring01OperatorgroupYaml,
	"osd-customer-monitoring/05-role.yaml":                                              osdCustomerMonitoring05RoleYaml,
	"osd-customer-monitoring/06-rolebinding.yaml":                                       osdCustomerMonitoring06RolebindingYaml,
	"osd-logging/00-namespace.yaml":                                                     osdLogging00NamespaceYaml,
	"osd-logging/01-operatorgroup.yaml":                                                 osdLogging01OperatorgroupYaml,
	"osd-logging/02-curator.configmap.yaml":                                             osdLogging02CuratorConfigmapYaml,
	"osd-logging/03-storage-quota.yaml":                                                 osdLogging03StorageQuotaYaml,
	"osd-logging/05-role.yaml":                                                          osdLogging05RoleYaml,
	"osd-logging/06-rolebinding.yaml":                                                   osdLogging06RolebindingYaml,
	"osd-oauth-templates/osd-oauth-templates.patch.yaml":                                osdOauthTemplatesOsdOauthTemplatesPatchYaml,
	"osd-oauth-templates-errors/osd-oauth-templates-errors.secret.yaml":                 osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYaml,
	"osd-oauth-templates-login/osd-oauth-templates-login.secret.yaml":                   osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYaml,
	"osd-oauth-templates-providers/osd-oauth-templates-providers.secret.yaml":           osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYaml,
	"osd-project-request-template/00-clusterrole.project-config.yaml":                   osdProjectRequestTemplate00ClusterroleProjectConfigYaml,
	"osd-project-request-template/01-clusterrolebinding.project-config.yaml":            osdProjectRequestTemplate01ClusterrolebindingProjectConfigYaml,
	"osd-project-request-template/02-role.dedicated-admins-project-request.yaml":        osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYaml,
	"osd-project-request-template/03-rolebinding.dedicated-admins-project-request.yaml": osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYaml,
	"osd-project-request-template/04-patch.label-default-namespace.yaml":                osdProjectRequestTemplate04PatchLabelDefaultNamespaceYaml,
	"osd-registry/registry-defaultRoute.patch.yaml":                                     osdRegistryRegistryDefaultroutePatchYaml,
	"osd-strimzi-operator/00-namespace.yaml":                                            osdStrimziOperator00NamespaceYaml,
	"osd-strimzi-operator/01-operatorgroup.yaml":                                        osdStrimziOperator01OperatorgroupYaml,
	"osd-strimzi-operator/05-role.yaml":                                                 osdStrimziOperator05RoleYaml,
	"osd-strimzi-operator/06-rolebinding.yaml":                                          osdStrimziOperator06RolebindingYaml,
	"resource-quotas/10-patch.namespace.openshift-etcd.yaml":                            resourceQuotas10PatchNamespaceOpenshiftEtcdYaml,
	"resource-quotas/10-patch.namespace.openshift-ingress.yaml":                         resourceQuotas10PatchNamespaceOpenshiftIngressYaml,
	"resource-quotas/10-patch.namespace.openshift-monitoring.yaml":                      resourceQuotas10PatchNamespaceOpenshiftMonitoringYaml,
	"resource-quotas/11-cluster-lb-quota.yaml":                                          resourceQuotas11ClusterLbQuotaYaml,
	"resource-quotas/11-cluster-storage-quotas.yaml":                                    resourceQuotas11ClusterStorageQuotasYaml,
	"sre-authorization/00-osd-sre-cluster-admins.ClusterRoleBinding.yaml":               sreAuthorization00OsdSreClusterAdminsClusterrolebindingYaml,
	"sre-authorization/00-osd-sre-cluster-admins.Group.yaml":                            sreAuthorization00OsdSreClusterAdminsGroupYaml,
	"sre-authorization/01-osd-sre-admin.ClusterRole.yaml":                               sreAuthorization01OsdSreAdminClusterroleYaml,
	"sre-authorization/02-osd-sre-admin.ClusterRoleBinding.yaml":                        sreAuthorization02OsdSreAdminClusterrolebindingYaml,
	"sre-authorization/10-osd-ldap-ca-configmap.ConfigMap.yaml":                         sreAuthorization10OsdLdapCaConfigmapConfigmapYaml,
	"sre-prometheus/100-check-full-cust-pv.PrometheusRule.yaml":                         srePrometheus100CheckFullCustPvPrometheusruleYaml,
	"sre-prometheus/100-cluster-operator.PrometheusRule.yaml":                           srePrometheus100ClusterOperatorPrometheusruleYaml,
	"sre-prometheus/100-configure-alertmanager-operator.PrometheusRule.yaml":            srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYaml,
	"sre-prometheus/100-dedicated-admin-operator.PrometheusRule.yaml":                   srePrometheus100DedicatedAdminOperatorPrometheusruleYaml,
	"sre-prometheus/100-dns-latency.PrometheusRule.yaml":                                srePrometheus100DnsLatencyPrometheusruleYaml,
	"sre-prometheus/100-excessive-memory.PrometheusRule.yaml":                           srePrometheus100ExcessiveMemoryPrometheusruleYaml,
	"sre-prometheus/100-kubeapilatencyhigh-custom.PrometheusRule.yaml":                  srePrometheus100KubeapilatencyhighCustomPrometheusruleYaml,
	"sre-prometheus/100-machine-api.PrometheusRule.yaml":                                srePrometheus100MachineApiPrometheusruleYaml,
	"sre-prometheus/100-node-unschedulable.PrometheusRule.yaml":                         srePrometheus100NodeUnschedulablePrometheusruleYaml,
	"sre-prometheus/100-router-health.PrometheusRule.yaml":                              srePrometheus100RouterHealthPrometheusruleYaml,
	"sre-prometheus/100-sre-pruning.PrometheusRule.yaml":                                srePrometheus100SrePruningPrometheusruleYaml,
	"sre-prometheus/100-stuck-builds.PrometheusRule.yaml":                               srePrometheus100StuckBuildsPrometheusruleYaml,
	"sre-prometheus/100-telemeter-client.PrometheusRule.yaml":                           srePrometheus100TelemeterClientPrometheusruleYaml,
	"sre-prometheus/aws/100-ebs-iops-burstbalance.PrometheusRule.yaml":                  srePrometheusAws100EbsIopsBurstbalancePrometheusruleYaml,
	"sre-prometheus/aws/100-stuck-volumes.PrometheusRule.yaml":                          srePrometheusAws100StuckVolumesPrometheusruleYaml,
	"sre-pruning/100-pruning.Namespace.yaml":                                            srePruning100PruningNamespaceYaml,
	"sre-pruning/105-pruning-builds.cluserRoleBinding.yaml":                             srePruning105PruningBuildsCluserrolebindingYaml,
	"sre-pruning/105-pruning-builds.clusterRole.yaml":                                   srePruning105PruningBuildsClusterroleYaml,
	"sre-pruning/105-pruning-images.clusterRoleBinding.yaml":                            srePruning105PruningImagesClusterrolebindingYaml,
	"sre-pruning/105-pruning.serviceAccount.yaml":                                       srePruning105PruningServiceaccountYaml,
	"sre-pruning/110-pruning-builds.CronJob.yaml":                                       srePruning110PruningBuildsCronjobYaml,
	"sre-pruning/110-pruning-deployments.CronJob.yaml":                                  srePruning110PruningDeploymentsCronjobYaml,
	"sre-pruning/110-pruning-images.CronJob.yaml":                                       srePruning110PruningImagesCronjobYaml,
	"velero-configuration/100-velero.Velero.yaml":                                       veleroConfiguration100VeleroVeleroYaml,
	"velero-configuration/110-velero.Schedules-daily.yaml":                              veleroConfiguration110VeleroSchedulesDailyYaml,
	"velero-configuration/110-velero.Schedules-hourly.yaml":                             veleroConfiguration110VeleroSchedulesHourlyYaml,
	"velero-configuration/110-velero.Schedules-weekly.yaml":                             veleroConfiguration110VeleroSchedulesWeeklyYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"UPSERT": {nil, map[string]*bintree{
		"osd-operatorhub-crd": {nil, map[string]*bintree{
			"00-operatorhub.crd.yaml": {upsertOsdOperatorhubCrd00OperatorhubCrdYaml, map[string]*bintree{}},
		}},
	}},
	"cluster-monitoring-config": {nil, map[string]*bintree{
		"cluster-monitoring-config.yaml": {clusterMonitoringConfigClusterMonitoringConfigYaml, map[string]*bintree{}},
	}},
	"kubelet-config": {nil, map[string]*bintree{
		"01-patch.machineconfigpool.yaml": {kubeletConfig01PatchMachineconfigpoolYaml, map[string]*bintree{}},
		"02-patch.machineconfigpool.yaml": {kubeletConfig02PatchMachineconfigpoolYaml, map[string]*bintree{}},
		"03-kubelet-config.yaml":          {kubeletConfig03KubeletConfigYaml, map[string]*bintree{}},
	}},
	"managed-velero-operator": {nil, map[string]*bintree{
		"050-velero.CustomResourceDefinition.yaml": {managedVeleroOperator050VeleroCustomresourcedefinitionYaml, map[string]*bintree{}},
		"100-velero.Namespace.yaml":                {managedVeleroOperator100VeleroNamespaceYaml, map[string]*bintree{}},
		"105-velero.ServiceAccount.yaml":           {managedVeleroOperator105VeleroServiceaccountYaml, map[string]*bintree{}},
		"110-velero.ClusterRole.yaml":              {managedVeleroOperator110VeleroClusterroleYaml, map[string]*bintree{}},
		"110-velero.Role.yaml":                     {managedVeleroOperator110VeleroRoleYaml, map[string]*bintree{}},
		"111-velero.Role.yaml":                     {managedVeleroOperator111VeleroRoleYaml, map[string]*bintree{}},
		"112-velero.Role.yaml":                     {managedVeleroOperator112VeleroRoleYaml, map[string]*bintree{}},
		"115-velero.ClusterRoleBinding.yaml":       {managedVeleroOperator115VeleroClusterrolebindingYaml, map[string]*bintree{}},
		"115-velero.RoleBinding.yaml":              {managedVeleroOperator115VeleroRolebindingYaml, map[string]*bintree{}},
		"116-velero.RoleBinding.yaml":              {managedVeleroOperator116VeleroRolebindingYaml, map[string]*bintree{}},
		"117-velero.RoleBinding.yaml":              {managedVeleroOperator117VeleroRolebindingYaml, map[string]*bintree{}},
		"120-velero.ServiceAccount.yaml":           {managedVeleroOperator120VeleroServiceaccountYaml, map[string]*bintree{}},
		"125-velero.RoleBinding.yaml":              {managedVeleroOperator125VeleroRolebindingYaml, map[string]*bintree{}},
		"130-velero.CredentialRequest.yaml":        {managedVeleroOperator130VeleroCredentialrequestYaml, map[string]*bintree{}},
		"135-velero.Deployment.yaml":               {managedVeleroOperator135VeleroDeploymentYaml, map[string]*bintree{}},
	}},
	"osd-aquasec-operator": {nil, map[string]*bintree{
		"00-namespace.yaml":                        {osdAquasecOperator00NamespaceYaml, map[string]*bintree{}},
		"01-operatorgroup.yaml":                    {osdAquasecOperator01OperatorgroupYaml, map[string]*bintree{}},
		"01-role.yaml":                             {osdAquasecOperator01RoleYaml, map[string]*bintree{}},
		"02-rolebinding.yaml":                      {osdAquasecOperator02RolebindingYaml, map[string]*bintree{}},
		"10-clusterrole-image-scanner.yaml":        {osdAquasecOperator10ClusterroleImageScannerYaml, map[string]*bintree{}},
		"11-clusterrolebinding-image-scanner.yaml": {osdAquasecOperator11ClusterrolebindingImageScannerYaml, map[string]*bintree{}},
	}},
	"osd-codeready-workspaces": {nil, map[string]*bintree{
		"00-namespace.yaml":     {osdCodereadyWorkspaces00NamespaceYaml, map[string]*bintree{}},
		"01-operatorgroup.yaml": {osdCodereadyWorkspaces01OperatorgroupYaml, map[string]*bintree{}},
		"05-role.yaml":          {osdCodereadyWorkspaces05RoleYaml, map[string]*bintree{}},
		"06-rolebinding.yaml":   {osdCodereadyWorkspaces06RolebindingYaml, map[string]*bintree{}},
	}},
	"osd-console-branding": {nil, map[string]*bintree{
		"osd-branding.console.yaml": {osdConsoleBrandingOsdBrandingConsoleYaml, map[string]*bintree{}},
	}},
	"osd-curated-operators": {nil, map[string]*bintree{
		"00-cvo-overrides.patch.yaml":               {osdCuratedOperators00CvoOverridesPatchYaml, map[string]*bintree{}},
		"10-curated-certified-operators.patch.yaml": {osdCuratedOperators10CuratedCertifiedOperatorsPatchYaml, map[string]*bintree{}},
		"10-curated-community-operators.patch.yaml": {osdCuratedOperators10CuratedCommunityOperatorsPatchYaml, map[string]*bintree{}},
		"10-curated-redhat-operators.patch.yaml":    {osdCuratedOperators10CuratedRedhatOperatorsPatchYaml, map[string]*bintree{}},
	}},
	"osd-curated-operatorsources": {nil, map[string]*bintree{
		"00-operatorhub.cr.yaml":                             {osdCuratedOperatorsources00OperatorhubCrYaml, map[string]*bintree{}},
		"10-curated-certified-operators.OperatorSource.yaml": {osdCuratedOperatorsources10CuratedCertifiedOperatorsOperatorsourceYaml, map[string]*bintree{}},
		"10-curated-community-operators.OperatorSource.yaml": {osdCuratedOperatorsources10CuratedCommunityOperatorsOperatorsourceYaml, map[string]*bintree{}},
		"10-curated-redhat-operators.OperatorSource.yaml":    {osdCuratedOperatorsources10CuratedRedhatOperatorsOperatorsourceYaml, map[string]*bintree{}},
	}},
	"osd-customer-monitoring": {nil, map[string]*bintree{
		"00-namespace.yaml":     {osdCustomerMonitoring00NamespaceYaml, map[string]*bintree{}},
		"01-operatorgroup.yaml": {osdCustomerMonitoring01OperatorgroupYaml, map[string]*bintree{}},
		"05-role.yaml":          {osdCustomerMonitoring05RoleYaml, map[string]*bintree{}},
		"06-rolebinding.yaml":   {osdCustomerMonitoring06RolebindingYaml, map[string]*bintree{}},
	}},
	"osd-logging": {nil, map[string]*bintree{
		"00-namespace.yaml":         {osdLogging00NamespaceYaml, map[string]*bintree{}},
		"01-operatorgroup.yaml":     {osdLogging01OperatorgroupYaml, map[string]*bintree{}},
		"02-curator.configmap.yaml": {osdLogging02CuratorConfigmapYaml, map[string]*bintree{}},
		"03-storage-quota.yaml":     {osdLogging03StorageQuotaYaml, map[string]*bintree{}},
		"05-role.yaml":              {osdLogging05RoleYaml, map[string]*bintree{}},
		"06-rolebinding.yaml":       {osdLogging06RolebindingYaml, map[string]*bintree{}},
	}},
	"osd-oauth-templates": {nil, map[string]*bintree{
		"osd-oauth-templates.patch.yaml": {osdOauthTemplatesOsdOauthTemplatesPatchYaml, map[string]*bintree{}},
	}},
	"osd-oauth-templates-errors": {nil, map[string]*bintree{
		"osd-oauth-templates-errors.secret.yaml": {osdOauthTemplatesErrorsOsdOauthTemplatesErrorsSecretYaml, map[string]*bintree{}},
	}},
	"osd-oauth-templates-login": {nil, map[string]*bintree{
		"osd-oauth-templates-login.secret.yaml": {osdOauthTemplatesLoginOsdOauthTemplatesLoginSecretYaml, map[string]*bintree{}},
	}},
	"osd-oauth-templates-providers": {nil, map[string]*bintree{
		"osd-oauth-templates-providers.secret.yaml": {osdOauthTemplatesProvidersOsdOauthTemplatesProvidersSecretYaml, map[string]*bintree{}},
	}},
	"osd-project-request-template": {nil, map[string]*bintree{
		"00-clusterrole.project-config.yaml":                   {osdProjectRequestTemplate00ClusterroleProjectConfigYaml, map[string]*bintree{}},
		"01-clusterrolebinding.project-config.yaml":            {osdProjectRequestTemplate01ClusterrolebindingProjectConfigYaml, map[string]*bintree{}},
		"02-role.dedicated-admins-project-request.yaml":        {osdProjectRequestTemplate02RoleDedicatedAdminsProjectRequestYaml, map[string]*bintree{}},
		"03-rolebinding.dedicated-admins-project-request.yaml": {osdProjectRequestTemplate03RolebindingDedicatedAdminsProjectRequestYaml, map[string]*bintree{}},
		"04-patch.label-default-namespace.yaml":                {osdProjectRequestTemplate04PatchLabelDefaultNamespaceYaml, map[string]*bintree{}},
	}},
	"osd-registry": {nil, map[string]*bintree{
		"registry-defaultRoute.patch.yaml": {osdRegistryRegistryDefaultroutePatchYaml, map[string]*bintree{}},
	}},
	"osd-strimzi-operator": {nil, map[string]*bintree{
		"00-namespace.yaml":     {osdStrimziOperator00NamespaceYaml, map[string]*bintree{}},
		"01-operatorgroup.yaml": {osdStrimziOperator01OperatorgroupYaml, map[string]*bintree{}},
		"05-role.yaml":          {osdStrimziOperator05RoleYaml, map[string]*bintree{}},
		"06-rolebinding.yaml":   {osdStrimziOperator06RolebindingYaml, map[string]*bintree{}},
	}},
	"resource-quotas": {nil, map[string]*bintree{
		"10-patch.namespace.openshift-etcd.yaml":       {resourceQuotas10PatchNamespaceOpenshiftEtcdYaml, map[string]*bintree{}},
		"10-patch.namespace.openshift-ingress.yaml":    {resourceQuotas10PatchNamespaceOpenshiftIngressYaml, map[string]*bintree{}},
		"10-patch.namespace.openshift-monitoring.yaml": {resourceQuotas10PatchNamespaceOpenshiftMonitoringYaml, map[string]*bintree{}},
		"11-cluster-lb-quota.yaml":                     {resourceQuotas11ClusterLbQuotaYaml, map[string]*bintree{}},
		"11-cluster-storage-quotas.yaml":               {resourceQuotas11ClusterStorageQuotasYaml, map[string]*bintree{}},
	}},
	"sre-authorization": {nil, map[string]*bintree{
		"00-osd-sre-cluster-admins.ClusterRoleBinding.yaml": {sreAuthorization00OsdSreClusterAdminsClusterrolebindingYaml, map[string]*bintree{}},
		"00-osd-sre-cluster-admins.Group.yaml":              {sreAuthorization00OsdSreClusterAdminsGroupYaml, map[string]*bintree{}},
		"01-osd-sre-admin.ClusterRole.yaml":                 {sreAuthorization01OsdSreAdminClusterroleYaml, map[string]*bintree{}},
		"02-osd-sre-admin.ClusterRoleBinding.yaml":          {sreAuthorization02OsdSreAdminClusterrolebindingYaml, map[string]*bintree{}},
		"10-osd-ldap-ca-configmap.ConfigMap.yaml":           {sreAuthorization10OsdLdapCaConfigmapConfigmapYaml, map[string]*bintree{}},
	}},
	"sre-prometheus": {nil, map[string]*bintree{
		"100-check-full-cust-pv.PrometheusRule.yaml":              {srePrometheus100CheckFullCustPvPrometheusruleYaml, map[string]*bintree{}},
		"100-cluster-operator.PrometheusRule.yaml":                {srePrometheus100ClusterOperatorPrometheusruleYaml, map[string]*bintree{}},
		"100-configure-alertmanager-operator.PrometheusRule.yaml": {srePrometheus100ConfigureAlertmanagerOperatorPrometheusruleYaml, map[string]*bintree{}},
		"100-dedicated-admin-operator.PrometheusRule.yaml":        {srePrometheus100DedicatedAdminOperatorPrometheusruleYaml, map[string]*bintree{}},
		"100-dns-latency.PrometheusRule.yaml":                     {srePrometheus100DnsLatencyPrometheusruleYaml, map[string]*bintree{}},
		"100-excessive-memory.PrometheusRule.yaml":                {srePrometheus100ExcessiveMemoryPrometheusruleYaml, map[string]*bintree{}},
		"100-kubeapilatencyhigh-custom.PrometheusRule.yaml":       {srePrometheus100KubeapilatencyhighCustomPrometheusruleYaml, map[string]*bintree{}},
		"100-machine-api.PrometheusRule.yaml":                     {srePrometheus100MachineApiPrometheusruleYaml, map[string]*bintree{}},
		"100-node-unschedulable.PrometheusRule.yaml":              {srePrometheus100NodeUnschedulablePrometheusruleYaml, map[string]*bintree{}},
		"100-router-health.PrometheusRule.yaml":                   {srePrometheus100RouterHealthPrometheusruleYaml, map[string]*bintree{}},
		"100-sre-pruning.PrometheusRule.yaml":                     {srePrometheus100SrePruningPrometheusruleYaml, map[string]*bintree{}},
		"100-stuck-builds.PrometheusRule.yaml":                    {srePrometheus100StuckBuildsPrometheusruleYaml, map[string]*bintree{}},
		"100-telemeter-client.PrometheusRule.yaml":                {srePrometheus100TelemeterClientPrometheusruleYaml, map[string]*bintree{}},
		"aws": {nil, map[string]*bintree{
			"100-ebs-iops-burstbalance.PrometheusRule.yaml": {srePrometheusAws100EbsIopsBurstbalancePrometheusruleYaml, map[string]*bintree{}},
			"100-stuck-volumes.PrometheusRule.yaml":         {srePrometheusAws100StuckVolumesPrometheusruleYaml, map[string]*bintree{}},
		}},
	}},
	"sre-pruning": {nil, map[string]*bintree{
		"100-pruning.Namespace.yaml":                 {srePruning100PruningNamespaceYaml, map[string]*bintree{}},
		"105-pruning-builds.cluserRoleBinding.yaml":  {srePruning105PruningBuildsCluserrolebindingYaml, map[string]*bintree{}},
		"105-pruning-builds.clusterRole.yaml":        {srePruning105PruningBuildsClusterroleYaml, map[string]*bintree{}},
		"105-pruning-images.clusterRoleBinding.yaml": {srePruning105PruningImagesClusterrolebindingYaml, map[string]*bintree{}},
		"105-pruning.serviceAccount.yaml":            {srePruning105PruningServiceaccountYaml, map[string]*bintree{}},
		"110-pruning-builds.CronJob.yaml":            {srePruning110PruningBuildsCronjobYaml, map[string]*bintree{}},
		"110-pruning-deployments.CronJob.yaml":       {srePruning110PruningDeploymentsCronjobYaml, map[string]*bintree{}},
		"110-pruning-images.CronJob.yaml":            {srePruning110PruningImagesCronjobYaml, map[string]*bintree{}},
	}},
	"velero-configuration": {nil, map[string]*bintree{
		"100-velero.Velero.yaml":           {veleroConfiguration100VeleroVeleroYaml, map[string]*bintree{}},
		"110-velero.Schedules-daily.yaml":  {veleroConfiguration110VeleroSchedulesDailyYaml, map[string]*bintree{}},
		"110-velero.Schedules-hourly.yaml": {veleroConfiguration110VeleroSchedulesHourlyYaml, map[string]*bintree{}},
		"110-velero.Schedules-weekly.yaml": {veleroConfiguration110VeleroSchedulesWeeklyYaml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
